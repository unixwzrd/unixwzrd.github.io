#!/usr/bin/env bash

# Because we are in utils/bin, we need to go up two to be in the BASE_DIR
BASE_DIR="$(realpath "$(dirname "${BASH_SOURCE[0]}")/../..")"
my_name="$(basename "${BASH_SOURCE[0]}")"
my_arg1="$1"

pid_file="${BASE_DIR}/utils/etc/jekyll.pid"

check_running() {
    if [ -f "$pid_file" ]; then
        pid=$(cat "$pid_file")
        if ps -p "$pid" > /dev/null 2>&1; then
            # Optionally, verify it's a Jekyll process
            if ps -p "$pid" -o comm= | grep -q 'jekyll'; then
                return 0
            fi
        fi
    fi
    return 1
}

startup_items() {
    fetch_og_data.py  # Runs the Python script to update OG data
    rm -rf html/.jekyll-cache/ _site/ # Clear the Jekyll cache
    jekyll build --trace --verbose # Build the Jekyll site
    bundle exec jekyll serve --host 0.0.0.0 --port 4000 --trace & # Start Jekyll in background
    echo $! > "$pid_file" # Store Jekyll's PID
}

start_service() {
    if check_running; then
        echo "Service is already running. Restarting..." >&2
        stop_service
    fi
    startup_items
}

stop_service() {
    if check_running; then
        pid=$(cat "$pid_file")
        kill "$pid"
        if [ $? -eq 0 ]; then
            echo "Jekyll server (PID: $pid) stopped successfully."
        else
            echo "Failed to stop Jekyll server (PID: $pid)." >&2
        fi
        rm -f "$pid_file"
    else
        echo "Service is not running."
    fi
}

case "$my_arg1" in
    -h|--help)
        echo "Usage: $my_name [start|stop|restart]"
        ;;
    start)
        echo "Starting $my_name" >&2
        start_service
        ;;
    stop)
        echo "Stopping $my_name" >&2
        stop_service
        ;;
    restart)
        echo "Restarting $my_name" >&2
        stop_service
        start_service
        ;;
    *)
        echo "Usage: $my_name [start|stop|restart]"
        exit 1
        ;;
esac