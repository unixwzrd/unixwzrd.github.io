+ '[' -L /Users/unixwzrd/bin/genmd ']'
++ readlink -f /Users/unixwzrd/bin/genmd
+ THIS_SCRIPT=/Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/genmd
++ basename /Users/unixwzrd/bin/genmd
+ MY_NAME=genmd
+ '[' 5 -lt 4 ']'
+ set -euo pipefail
+ SHINCLUDE=
++ dirname /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/genmd
+ for try in "${SHINCLUDE}" "$(dirname "${THIS_SCRIPT}")/shinclude" "${HOME}/bin/shinclude"
+ '[' -f /errno.sh ']'
+ for try in "${SHINCLUDE}" "$(dirname "${THIS_SCRIPT}")/shinclude" "${HOME}/bin/shinclude"
+ '[' -f /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/errno.sh ']'
+ SHINCLUDE=/Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude
+ break
+ '[' -z /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude ']'
+ echo 'INFO (genmd): Using SHINCLUDE directory - /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude'
INFO (genmd): Using SHINCLUDE directory - /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude
+ source /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/errno.sh
++ message_class=(['SILENT']='0' ['TRACE']='10' ['DEBUG8']='22' ['DEBUG7']='22' ['DEBUG6']='23' ['DEBUG5']='24' ['DEBUG4']='25' ['DEBUG3']='26' ['DEBUG2']='27' ['DEBUG1']='28' ['DEBUG0']='29' ['DEBUG']='29' ['INFO']='30' ['WARNING']='40' ['WARN']='40' ['WARNING']='40' ['ERROR']='50' ['CRITICAL']='60' ['SILENT']='99')
++ declare -A message_class
++ __VENV_SOURCED_LIST=
++ '[' -L /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/errno.sh ']'
++ THIS_SCRIPT=/Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/errno.sh
++ [[ '' =~ /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/errno\.sh ]]
++ __VENV_SOURCED_LIST=' /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/errno.sh'
++ echo 'Sourcing: /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/errno.sh'
Sourcing: /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/errno.sh
+++ basename /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/errno.sh
++ MY_NAME=errno.sh
++++ dirname /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/errno.sh
+++ dirname /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude
++ __VENV_BIN=/Users/mps/projects/AI-PROJECTS/venv-build-checker/bin
+++ dirname /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin
++ __VENV_BASE=/Users/mps/projects/AI-PROJECTS/venv-build-checker
++ __VENV_ARGS='-d 20 -l -b -s info md -i *.md$ *.html -e tmp .git .jekyll-cache _site utils new_files social-icons _posts -f *.svg .png'
++ __VENV_INCLUDE=/Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude
++ __VENV_INTERNAL_FUNCTIONS=(${__VENV_INTERNAL_FUNCTIONS[@]} "errno" "errfind" "errno_warn" "errno_exit" log_message)
++ debug_level=30
++ declare -f source_util_script
++ source /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/util_funcs.sh
+++ '[' -L /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/util_funcs.sh ']'
+++ THIS_SCRIPT=/Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/util_funcs.sh
+++ [[  /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/errno.sh =~ /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/util_funcs\.sh ]]
+++ __VENV_SOURCED_LIST=' /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/errno.sh /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/util_funcs.sh'
+++ echo 'Sourcing: /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/util_funcs.sh'
Sourcing: /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/util_funcs.sh
+++ __VENV_INTERNAL_FUNCTIONS=(${__VENV_INTERNAL_FUNCTIONS[@]})
++ log_message INFO 'Sourced /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/util_funcs.sh'
++ local message_level=INFO
++ shift
++ local 'message_out=Sourced /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/util_funcs.sh'
++ [[ -z _ ]]
++ '[' 30 -le 30 ']'
++ echo 'errno.sh INFO(30): Sourced /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/util_funcs.sh'
errno.sh INFO(30): Sourced /Users/mps/projects/AI-PROJECTS/venv-build-checker/bin/shinclude/util_funcs.sh
++ __rc__=0
++ basename /Users/unixwzrd/bin/genmd
+ MY_NAME=genmd
+ GENMD_BASE=.
+ log_message INFO 'Using base directory - .'
+ local message_level=INFO
+ shift
+ local 'message_out=Using base directory - .'
+ [[ -z _ ]]
+ '[' 30 -le 30 ']'
+ echo 'genmd INFO(30): Using base directory - .'
genmd INFO(30): Using base directory - .
+ PAGER='less -R'
+ dir_excludes=('.git' 'tmp' '__pycache__' '.vscode')
+ declare -a dir_excludes
+ file_excludes=('.DS_Store')
+ declare -a file_excludes
+ pattern_excludes=('')
+ declare -a pattern_excludes
+ file_includes=('')
+ declare -a file_includes
+ gitignore_exclude=()
+ declare -a gitignore_exclude
+ gitignore_includes=()
+ declare -a gitignore_includes
+ GENMD_DIR_EXCLUDES=()
+ declare -a GENMD_DIR_EXCLUDES
+ GENMD_FILE_EXCLUDES=()
+ declare -a GENMD_FILE_EXCLUDES
+ GENMD_PATTERN_EXCLUDES=()
+ declare -a GENMD_PATTERN_EXCLUDES
+ GENMD_FILE_INCLUDES=()
+ declare -a GENMD_FILE_INCLUDES
+ option_variable=(['e']='dir_excludes' ['f']='file_excludes' ['i']='file_includes' ['p']='pattern_excludes' ['s']='settings_modes')
+ declare -A option_variable
+ config_variables=("dir_excludes" "file_excludes" "pattern_excludes" "file_includes" "GENMD_BASE" "output_filename" "settings_modes" "dry_run" "debug_level" "use_gitignore" "remove_blanks" "add_line_numbers" "compress" "compression_tool")
+ config_variable_action=(['dir_excludes']='merge' ['file_excludes']='merge' ['pattern_excludes']='merge' ['file_includes']='merge' ['GENMD_BASE']='config' ['output_filename']='set' ['settings_modes']='set' ['dry_run']='discard' ['debug_level']='set' ['use_gitignore']='set' ['remove_blanks']='set' ['add_line_numbers']='set' ['compress']='set' ['compression_tool']='set')
+ declare -A config_variable_action
+ dry_run=false
+ debug_level=20
+ settings_modes=("md")
+ use_gitignore=true
+ remove_blanks=false
+ add_line_numbers=false
+ compress=false
+ compression_tool=gzip
+ default_filename=combined_source
+ output_dir=./utils/output
+ config_dir=./utils/etc
+ specified_config=
+ specified_output=
+ skip_config=false
+ OPTIND=1
+ getopts :d:he:f:i:p:o:c:s:nvgCblz:-: opt
+ case "$opt" in
+ [[ 20 -ge 1 ]]
+ [[ 20 -le 99 ]]
+ debug_level=20
+ [[ 20 -eq 10 ]]
+ getopts :d:he:f:i:p:o:c:s:nvgCblz:-: opt
+ case "$opt" in
+ add_line_numbers=true
+ getopts :d:he:f:i:p:o:c:s:nvgCblz:-: opt
+ case "$opt" in
+ remove_blanks=true
+ getopts :d:he:f:i:p:o:c:s:nvgCblz:-: opt
+ case "$opt" in
+ set_option_value s 'info md' settings_modes
+ local opt_name=s
+ local 'opt_value=info md'
+ local target_variable=settings_modes
+ log_message DEBUG3 '*** Setting command line options for s to "info md"'
+ local message_level=DEBUG3
+ shift
+ local 'message_out=*** Setting command line options for s to "info md"'
+ [[ -z _ ]]
+ '[' 20 -le 26 ']'
+ echo 'genmd DEBUG3(20): *** Setting command line options for s to "info md"'
genmd DEBUG3(20): *** Setting command line options for s to "info md"
+ [[ -n info md ]]
+ [[ ! info md =~ ^- ]]
+ log_message DEBUG1 'Load settings_modes with s values: info md'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Load settings_modes with s values: info md'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Load settings_modes with s values: info md'
genmd DEBUG1(20): Load settings_modes with s values: info md
+ IFS='| '
+ readarray -t settings_modes
++ printf %s 'info md'
+ getopts :d:he:f:i:p:o:c:s:nvgCblz:-: opt
+ case "$opt" in
+ set_option_value i '*.md$ *.html' file_includes
+ local opt_name=i
+ local 'opt_value=*.md$ *.html'
+ local target_variable=file_includes
+ log_message DEBUG3 '*** Setting command line options for i to "*.md$ *.html"'
+ local message_level=DEBUG3
+ shift
+ local 'message_out=*** Setting command line options for i to "*.md$ *.html"'
+ [[ -z _ ]]
+ '[' 20 -le 26 ']'
+ echo 'genmd DEBUG3(20): *** Setting command line options for i to "*.md$ *.html"'
genmd DEBUG3(20): *** Setting command line options for i to "*.md$ *.html"
+ [[ -n *.md$ *.html ]]
+ [[ ! *.md$ *.html =~ ^- ]]
+ log_message DEBUG1 'Load file_includes with i values: *.md$ *.html'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Load file_includes with i values: *.md$ *.html'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Load file_includes with i values: *.md$ *.html'
genmd DEBUG1(20): Load file_includes with i values: *.md$ *.html
+ IFS='| '
+ readarray -t file_includes
++ printf %s '*.md$ *.html'
+ getopts :d:he:f:i:p:o:c:s:nvgCblz:-: opt
+ case "$opt" in
+ set_option_value e 'tmp .git .jekyll-cache _site utils new_files social-icons _posts' dir_excludes
+ local opt_name=e
+ local 'opt_value=tmp .git .jekyll-cache _site utils new_files social-icons _posts'
+ local target_variable=dir_excludes
+ log_message DEBUG3 '*** Setting command line options for e to "tmp .git .jekyll-cache _site utils new_files social-icons _posts"'
+ local message_level=DEBUG3
+ shift
+ local 'message_out=*** Setting command line options for e to "tmp .git .jekyll-cache _site utils new_files social-icons _posts"'
+ [[ -z _ ]]
+ '[' 20 -le 26 ']'
+ echo 'genmd DEBUG3(20): *** Setting command line options for e to "tmp .git .jekyll-cache _site utils new_files social-icons _posts"'
genmd DEBUG3(20): *** Setting command line options for e to "tmp .git .jekyll-cache _site utils new_files social-icons _posts"
+ [[ -n tmp .git .jekyll-cache _site utils new_files social-icons _posts ]]
+ [[ ! tmp .git .jekyll-cache _site utils new_files social-icons _posts =~ ^- ]]
+ log_message DEBUG1 'Load dir_excludes with e values: tmp .git .jekyll-cache _site utils new_files social-icons _posts'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Load dir_excludes with e values: tmp .git .jekyll-cache _site utils new_files social-icons _posts'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Load dir_excludes with e values: tmp .git .jekyll-cache _site utils new_files social-icons _posts'
genmd DEBUG1(20): Load dir_excludes with e values: tmp .git .jekyll-cache _site utils new_files social-icons _posts
+ IFS='| '
+ readarray -t dir_excludes
++ printf %s 'tmp .git .jekyll-cache _site utils new_files social-icons _posts'
+ getopts :d:he:f:i:p:o:c:s:nvgCblz:-: opt
+ case "$opt" in
+ set_option_value f '*.svg .png' file_excludes
+ local opt_name=f
+ local 'opt_value=*.svg .png'
+ local target_variable=file_excludes
+ log_message DEBUG3 '*** Setting command line options for f to "*.svg .png"'
+ local message_level=DEBUG3
+ shift
+ local 'message_out=*** Setting command line options for f to "*.svg .png"'
+ [[ -z _ ]]
+ '[' 20 -le 26 ']'
+ echo 'genmd DEBUG3(20): *** Setting command line options for f to "*.svg .png"'
genmd DEBUG3(20): *** Setting command line options for f to "*.svg .png"
+ [[ -n *.svg .png ]]
+ [[ ! *.svg .png =~ ^- ]]
+ log_message DEBUG1 'Load file_excludes with f values: *.svg .png'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Load file_excludes with f values: *.svg .png'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Load file_excludes with f values: *.svg .png'
genmd DEBUG1(20): Load file_excludes with f values: *.svg .png
+ IFS='| '
+ readarray -t file_excludes
++ printf %s '*.svg .png'
+ getopts :d:he:f:i:p:o:c:s:nvgCblz:-: opt
+ shift 12
+ check_directory ./utils/output
+ local dir_path=./utils/output
+ [[ ! -d ./utils/output ]]
+ check_directory ./utils/etc
+ local dir_path=./utils/etc
+ [[ ! -d ./utils/etc ]]
+ load_config_file
+ [[ -n '' ]]
+ [[ -n '' ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
+ config_filename_in=./utils/etc/combined_source.grc
+ config_filename_out=./utils/etc/combined_source.grc
+ output_filename=./utils/output/combined_source.md
+ [[ -e ./utils/etc/combined_source.grc ]]
+ load_config ./utils/etc/combined_source.grc
+ local config_file=./utils/etc/combined_source.grc
+ declare -A original_values
+ [[ -e ./utils/etc/combined_source.grc ]]
+ for var in "${config_variables[@]}"
+ original_values["$var"]='tmp .git .jekyll-cache _site utils new_files social-icons _posts'
+ for var in "${config_variables[@]}"
+ original_values["$var"]='*.svg .png'
+ for var in "${config_variables[@]}"
+ original_values["$var"]=
+ for var in "${config_variables[@]}"
+ original_values["$var"]='*.md$ *.html'
+ for var in "${config_variables[@]}"
+ original_values["$var"]=.
+ for var in "${config_variables[@]}"
+ original_values["$var"]=./utils/output/combined_source.md
+ for var in "${config_variables[@]}"
+ original_values["$var"]='info md'
+ for var in "${config_variables[@]}"
+ original_values["$var"]=false
+ for var in "${config_variables[@]}"
+ original_values["$var"]=20
+ for var in "${config_variables[@]}"
+ original_values["$var"]=true
+ for var in "${config_variables[@]}"
+ original_values["$var"]=true
+ for var in "${config_variables[@]}"
+ original_values["$var"]=true
+ for var in "${config_variables[@]}"
+ original_values["$var"]=false
+ for var in "${config_variables[@]}"
+ original_values["$var"]=gzip
+ source ./utils/etc/combined_source.grc
++ export 'GENMD_DIR_EXCLUDES=.git _data _includes _posts collaborates js projects tmp utils '
++ GENMD_DIR_EXCLUDES='.git _data _includes _posts collaborates js projects tmp utils '
++ export 'GENMD_FILE_EXCLUDES=*.JPG *.htaccess *.ico *.jekyll *.jpg *.pdf *.png *.svg *.webp *impression* .DS_Store professional.md '
++ GENMD_FILE_EXCLUDES='*.JPG *.htaccess *.ico *.jekyll *.jpg *.pdf *.png *.svg *.webp *impression* .DS_Store professional.md '
++ export 'GENMD_FILE_INCLUDES=css liquid '
++ GENMD_FILE_INCLUDES='css liquid '
++ export GENMD_PATTERN_EXCLUDES=
++ GENMD_PATTERN_EXCLUDES=
++ export GENMD_BASE=/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io
++ GENMD_BASE=/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io
++ output_filename=/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/utils/output/combined_source.md
++ settings_modes=info
++ dry_run=false
++ debug_level=2
++ verbose=false
+ debug_level=20
+ log_message INFO 'Configuration loaded from "./utils/etc/combined_source.grc"'
+ local message_level=INFO
+ shift
+ local 'message_out=Configuration loaded from "./utils/etc/combined_source.grc"'
+ [[ -z _ ]]
+ '[' 20 -le 30 ']'
+ echo 'genmd INFO(20): Configuration loaded from "./utils/etc/combined_source.grc"'
genmd INFO(20): Configuration loaded from "./utils/etc/combined_source.grc"
+ for var in "${config_variables[@]}"
+ log_message DEBUG2 'Assigning variable: "dir_excludes" using  "tmp .git .jekyll-cache _site utils new_files social-icons _posts" original value: "tmp .git .jekyll-cache _site utils new_files social-icons _posts"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Assigning variable: "dir_excludes" using  "tmp .git .jekyll-cache _site utils new_files social-icons _posts" original value: "tmp .git .jekyll-cache _site utils new_files social-icons _posts"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Assigning variable: "dir_excludes" using  "tmp .git .jekyll-cache _site utils new_files social-icons _posts" original value: "tmp .git .jekyll-cache _site utils new_files social-icons _posts"'
genmd DEBUG2(20): Assigning variable: "dir_excludes" using  "tmp .git .jekyll-cache _site utils new_files social-icons _posts" original value: "tmp .git .jekyll-cache _site utils new_files social-icons _posts"
+ case "${config_variable_action["$var"]}" in
+ local mergevalue
+ mergevalue='tmp .git .jekyll-cache _site utils new_files social-icons _posts'
+ mergevalue+=(${!var:-""})
+ assign_variable dir_excludes 'tmp .git .jekyll-cache _site utils new_files social-icons _posts' tmp .git .jekyll-cache _site utils new_files social-icons _posts
+ local var_name=dir_excludes
+ local 'value=tmp .git .jekyll-cache _site utils new_files social-icons _posts'
++ var_type dir_excludes
++ local var_name=dir_excludes
+++ declare -p dir_excludes
+++ cut -d ' ' -f 2
++ local var_type=-a
++ case "$var_type" in
++ echo array
+ local var_type=array
+ log_message DEBUG2 'assign_variable: var_name=dir_excludes, var_value="tmp .git .jekyll-cache _site utils new_files social-icons _posts", var_type=array'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=assign_variable: var_name=dir_excludes, var_value="tmp .git .jekyll-cache _site utils new_files social-icons _posts", var_type=array'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): assign_variable: var_name=dir_excludes, var_value="tmp .git .jekyll-cache _site utils new_files social-icons _posts", var_type=array'
genmd DEBUG2(20): assign_variable: var_name=dir_excludes, var_value="tmp .git .jekyll-cache _site utils new_files social-icons _posts", var_type=array
+ case "$var_type" in
+ IFS=' '
+ readarray -t dir_excludes
++ printf %s 'tmp .git .jekyll-cache _site utils new_files social-icons _posts'
+ log_message DEBUG2 'Variable: "dir_excludes" updated value: "tmp .git .jekyll-cache _site utils new_files social-icons _posts"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Variable: "dir_excludes" updated value: "tmp .git .jekyll-cache _site utils new_files social-icons _posts"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Variable: "dir_excludes" updated value: "tmp .git .jekyll-cache _site utils new_files social-icons _posts"'
genmd DEBUG2(20): Variable: "dir_excludes" updated value: "tmp .git .jekyll-cache _site utils new_files social-icons _posts"
+ for var in "${config_variables[@]}"
+ log_message DEBUG2 'Assigning variable: "file_excludes" using  "*.svg .png" original value: "*.svg .png"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Assigning variable: "file_excludes" using  "*.svg .png" original value: "*.svg .png"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Assigning variable: "file_excludes" using  "*.svg .png" original value: "*.svg .png"'
genmd DEBUG2(20): Assigning variable: "file_excludes" using  "*.svg .png" original value: "*.svg .png"
+ case "${config_variable_action["$var"]}" in
+ local mergevalue
+ mergevalue='*.svg .png'
+ mergevalue+=(${!var:-""})
+ assign_variable file_excludes '*.svg .png' tmp .git .jekyll-cache _site utils new_files social-icons _posts '*.svg' .png
+ local var_name=file_excludes
+ local 'value=*.svg .png'
++ var_type file_excludes
++ local var_name=file_excludes
+++ declare -p file_excludes
+++ cut -d ' ' -f 2
++ local var_type=-a
++ case "$var_type" in
++ echo array
+ local var_type=array
+ log_message DEBUG2 'assign_variable: var_name=file_excludes, var_value="*.svg .png", var_type=array'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=assign_variable: var_name=file_excludes, var_value="*.svg .png", var_type=array'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): assign_variable: var_name=file_excludes, var_value="*.svg .png", var_type=array'
genmd DEBUG2(20): assign_variable: var_name=file_excludes, var_value="*.svg .png", var_type=array
+ case "$var_type" in
+ IFS=' '
+ readarray -t file_excludes
++ printf %s '*.svg .png'
+ log_message DEBUG2 'Variable: "file_excludes" updated value: "*.svg .png"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Variable: "file_excludes" updated value: "*.svg .png"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Variable: "file_excludes" updated value: "*.svg .png"'
genmd DEBUG2(20): Variable: "file_excludes" updated value: "*.svg .png"
+ for var in "${config_variables[@]}"
+ log_message DEBUG2 'Assigning variable: "pattern_excludes" using  "" original value: ""'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Assigning variable: "pattern_excludes" using  "" original value: ""'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Assigning variable: "pattern_excludes" using  "" original value: ""'
genmd DEBUG2(20): Assigning variable: "pattern_excludes" using  "" original value: ""
+ case "${config_variable_action["$var"]}" in
+ local mergevalue
+ mergevalue=
+ mergevalue+=(${!var:-""})
+ assign_variable pattern_excludes '' tmp .git .jekyll-cache _site utils new_files social-icons _posts '*.svg' .png ''
+ local var_name=pattern_excludes
+ local value=
++ var_type pattern_excludes
++ local var_name=pattern_excludes
+++ declare -p pattern_excludes
+++ cut -d ' ' -f 2
++ local var_type=-a
++ case "$var_type" in
++ echo array
+ local var_type=array
+ log_message DEBUG2 'assign_variable: var_name=pattern_excludes, var_value="", var_type=array'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=assign_variable: var_name=pattern_excludes, var_value="", var_type=array'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): assign_variable: var_name=pattern_excludes, var_value="", var_type=array'
genmd DEBUG2(20): assign_variable: var_name=pattern_excludes, var_value="", var_type=array
+ case "$var_type" in
+ IFS=' '
+ readarray -t pattern_excludes
++ printf %s ''
+ log_message DEBUG2 'Variable: "pattern_excludes" updated value: ""'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Variable: "pattern_excludes" updated value: ""'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Variable: "pattern_excludes" updated value: ""'
genmd DEBUG2(20): Variable: "pattern_excludes" updated value: ""
+ for var in "${config_variables[@]}"
+ log_message DEBUG2 'Assigning variable: "file_includes" using  "*.md$ *.html" original value: "*.md$ *.html"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Assigning variable: "file_includes" using  "*.md$ *.html" original value: "*.md$ *.html"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Assigning variable: "file_includes" using  "*.md$ *.html" original value: "*.md$ *.html"'
genmd DEBUG2(20): Assigning variable: "file_includes" using  "*.md$ *.html" original value: "*.md$ *.html"
+ case "${config_variable_action["$var"]}" in
+ local mergevalue
+ mergevalue='*.md$ *.html'
+ mergevalue+=(${!var:-""})
+ assign_variable file_includes '*.md$ *.html' tmp .git .jekyll-cache _site utils new_files social-icons _posts '*.svg' .png '' '*.md$' '*.html'
+ local var_name=file_includes
+ local 'value=*.md$ *.html'
++ var_type file_includes
++ local var_name=file_includes
+++ declare -p file_includes
+++ cut -d ' ' -f 2
++ local var_type=-a
++ case "$var_type" in
++ echo array
+ local var_type=array
+ log_message DEBUG2 'assign_variable: var_name=file_includes, var_value="*.md$ *.html", var_type=array'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=assign_variable: var_name=file_includes, var_value="*.md$ *.html", var_type=array'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): assign_variable: var_name=file_includes, var_value="*.md$ *.html", var_type=array'
genmd DEBUG2(20): assign_variable: var_name=file_includes, var_value="*.md$ *.html", var_type=array
+ case "$var_type" in
+ IFS=' '
+ readarray -t file_includes
++ printf %s '*.md$ *.html'
+ log_message DEBUG2 'Variable: "file_includes" updated value: "*.md$ *.html"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Variable: "file_includes" updated value: "*.md$ *.html"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Variable: "file_includes" updated value: "*.md$ *.html"'
genmd DEBUG2(20): Variable: "file_includes" updated value: "*.md$ *.html"
+ for var in "${config_variables[@]}"
+ log_message DEBUG2 'Assigning variable: "GENMD_BASE" using  "/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io" original value: "."'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Assigning variable: "GENMD_BASE" using  "/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io" original value: "."'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Assigning variable: "GENMD_BASE" using  "/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io" original value: "."'
genmd DEBUG2(20): Assigning variable: "GENMD_BASE" using  "/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io" original value: "."
+ case "${config_variable_action["$var"]}" in
+ assign_variable GENMD_BASE /Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io
+ local var_name=GENMD_BASE
+ local value=/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io
++ var_type GENMD_BASE
++ local var_name=GENMD_BASE
+++ declare -p GENMD_BASE
+++ cut -d ' ' -f 2
++ local var_type=-x
++ case "$var_type" in
++ echo unknown
+ local var_type=unknown
+ log_message DEBUG2 'assign_variable: var_name=GENMD_BASE, var_value="/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io", var_type=unknown'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=assign_variable: var_name=GENMD_BASE, var_value="/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io", var_type=unknown'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): assign_variable: var_name=GENMD_BASE, var_value="/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io", var_type=unknown'
genmd DEBUG2(20): assign_variable: var_name=GENMD_BASE, var_value="/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io", var_type=unknown
+ case "$var_type" in
+ declare GENMD_BASE=/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io
+ log_message DEBUG2 'Variable: "GENMD_BASE" updated value: "/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Variable: "GENMD_BASE" updated value: "/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Variable: "GENMD_BASE" updated value: "/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io"'
genmd DEBUG2(20): Variable: "GENMD_BASE" updated value: "/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io"
+ for var in "${config_variables[@]}"
+ log_message DEBUG2 'Assigning variable: "output_filename" using  "/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/utils/output/combined_source.md" original value: "./utils/output/combined_source.md"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Assigning variable: "output_filename" using  "/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/utils/output/combined_source.md" original value: "./utils/output/combined_source.md"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Assigning variable: "output_filename" using  "/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/utils/output/combined_source.md" original value: "./utils/output/combined_source.md"'
genmd DEBUG2(20): Assigning variable: "output_filename" using  "/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/utils/output/combined_source.md" original value: "./utils/output/combined_source.md"
+ case "${config_variable_action["$var"]}" in
+ assign_variable output_filename ./utils/output/combined_source.md
+ local var_name=output_filename
+ local value=./utils/output/combined_source.md
++ var_type output_filename
++ local var_name=output_filename
+++ declare -p output_filename
+++ cut -d ' ' -f 2
++ local var_type=--
++ case "$var_type" in
++ echo scalar
+ local var_type=scalar
+ log_message DEBUG2 'assign_variable: var_name=output_filename, var_value="./utils/output/combined_source.md", var_type=scalar'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=assign_variable: var_name=output_filename, var_value="./utils/output/combined_source.md", var_type=scalar'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): assign_variable: var_name=output_filename, var_value="./utils/output/combined_source.md", var_type=scalar'
genmd DEBUG2(20): assign_variable: var_name=output_filename, var_value="./utils/output/combined_source.md", var_type=scalar
+ case "$var_type" in
+ declare output_filename=./utils/output/combined_source.md
+ log_message DEBUG2 'Variable: "output_filename" updated value: "/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/utils/output/combined_source.md"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Variable: "output_filename" updated value: "/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/utils/output/combined_source.md"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Variable: "output_filename" updated value: "/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/utils/output/combined_source.md"'
genmd DEBUG2(20): Variable: "output_filename" updated value: "/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/utils/output/combined_source.md"
+ for var in "${config_variables[@]}"
+ log_message DEBUG2 'Assigning variable: "settings_modes" using  "info" original value: "info md"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Assigning variable: "settings_modes" using  "info" original value: "info md"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Assigning variable: "settings_modes" using  "info" original value: "info md"'
genmd DEBUG2(20): Assigning variable: "settings_modes" using  "info" original value: "info md"
+ case "${config_variable_action["$var"]}" in
+ assign_variable settings_modes 'info md'
+ local var_name=settings_modes
+ local 'value=info md'
++ var_type settings_modes
++ local var_name=settings_modes
+++ declare -p settings_modes
+++ cut -d ' ' -f 2
++ local var_type=-a
++ case "$var_type" in
++ echo array
+ local var_type=array
+ log_message DEBUG2 'assign_variable: var_name=settings_modes, var_value="info md", var_type=array'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=assign_variable: var_name=settings_modes, var_value="info md", var_type=array'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): assign_variable: var_name=settings_modes, var_value="info md", var_type=array'
genmd DEBUG2(20): assign_variable: var_name=settings_modes, var_value="info md", var_type=array
+ case "$var_type" in
+ IFS=' '
+ readarray -t settings_modes
++ printf %s 'info md'
+ log_message DEBUG2 'Variable: "settings_modes" updated value: "info md"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Variable: "settings_modes" updated value: "info md"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Variable: "settings_modes" updated value: "info md"'
genmd DEBUG2(20): Variable: "settings_modes" updated value: "info md"
+ for var in "${config_variables[@]}"
+ log_message DEBUG2 'Assigning variable: "dry_run" using  "false" original value: "false"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Assigning variable: "dry_run" using  "false" original value: "false"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Assigning variable: "dry_run" using  "false" original value: "false"'
genmd DEBUG2(20): Assigning variable: "dry_run" using  "false" original value: "false"
+ case "${config_variable_action["$var"]}" in
+ assign_variable dry_run false
+ local var_name=dry_run
+ local value=false
++ var_type dry_run
++ local var_name=dry_run
+++ declare -p dry_run
+++ cut -d ' ' -f 2
++ local var_type=--
++ case "$var_type" in
++ echo scalar
+ local var_type=scalar
+ log_message DEBUG2 'assign_variable: var_name=dry_run, var_value="false", var_type=scalar'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=assign_variable: var_name=dry_run, var_value="false", var_type=scalar'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): assign_variable: var_name=dry_run, var_value="false", var_type=scalar'
genmd DEBUG2(20): assign_variable: var_name=dry_run, var_value="false", var_type=scalar
+ case "$var_type" in
+ declare dry_run=false
+ log_message DEBUG2 'Variable: "dry_run" updated value: "false"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Variable: "dry_run" updated value: "false"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Variable: "dry_run" updated value: "false"'
genmd DEBUG2(20): Variable: "dry_run" updated value: "false"
+ for var in "${config_variables[@]}"
+ log_message DEBUG2 'Assigning variable: "debug_level" using  "20" original value: "20"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Assigning variable: "debug_level" using  "20" original value: "20"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Assigning variable: "debug_level" using  "20" original value: "20"'
genmd DEBUG2(20): Assigning variable: "debug_level" using  "20" original value: "20"
+ case "${config_variable_action["$var"]}" in
+ assign_variable debug_level 20
+ local var_name=debug_level
+ local value=20
++ var_type debug_level
++ local var_name=debug_level
+++ declare -p debug_level
+++ cut -d ' ' -f 2
++ local var_type=--
++ case "$var_type" in
++ echo scalar
+ local var_type=scalar
+ log_message DEBUG2 'assign_variable: var_name=debug_level, var_value="20", var_type=scalar'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=assign_variable: var_name=debug_level, var_value="20", var_type=scalar'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): assign_variable: var_name=debug_level, var_value="20", var_type=scalar'
genmd DEBUG2(20): assign_variable: var_name=debug_level, var_value="20", var_type=scalar
+ case "$var_type" in
+ declare debug_level=20
+ log_message DEBUG2 'Variable: "debug_level" updated value: "20"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Variable: "debug_level" updated value: "20"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Variable: "debug_level" updated value: "20"'
genmd DEBUG2(20): Variable: "debug_level" updated value: "20"
+ for var in "${config_variables[@]}"
+ log_message DEBUG2 'Assigning variable: "use_gitignore" using  "true" original value: "true"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Assigning variable: "use_gitignore" using  "true" original value: "true"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Assigning variable: "use_gitignore" using  "true" original value: "true"'
genmd DEBUG2(20): Assigning variable: "use_gitignore" using  "true" original value: "true"
+ case "${config_variable_action["$var"]}" in
+ assign_variable use_gitignore true
+ local var_name=use_gitignore
+ local value=true
++ var_type use_gitignore
++ local var_name=use_gitignore
+++ declare -p use_gitignore
+++ cut -d ' ' -f 2
++ local var_type=--
++ case "$var_type" in
++ echo scalar
+ local var_type=scalar
+ log_message DEBUG2 'assign_variable: var_name=use_gitignore, var_value="true", var_type=scalar'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=assign_variable: var_name=use_gitignore, var_value="true", var_type=scalar'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): assign_variable: var_name=use_gitignore, var_value="true", var_type=scalar'
genmd DEBUG2(20): assign_variable: var_name=use_gitignore, var_value="true", var_type=scalar
+ case "$var_type" in
+ declare use_gitignore=true
+ log_message DEBUG2 'Variable: "use_gitignore" updated value: "true"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Variable: "use_gitignore" updated value: "true"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Variable: "use_gitignore" updated value: "true"'
genmd DEBUG2(20): Variable: "use_gitignore" updated value: "true"
+ for var in "${config_variables[@]}"
+ log_message DEBUG2 'Assigning variable: "remove_blanks" using  "true" original value: "true"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Assigning variable: "remove_blanks" using  "true" original value: "true"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Assigning variable: "remove_blanks" using  "true" original value: "true"'
genmd DEBUG2(20): Assigning variable: "remove_blanks" using  "true" original value: "true"
+ case "${config_variable_action["$var"]}" in
+ assign_variable remove_blanks true
+ local var_name=remove_blanks
+ local value=true
++ var_type remove_blanks
++ local var_name=remove_blanks
+++ declare -p remove_blanks
+++ cut -d ' ' -f 2
++ local var_type=--
++ case "$var_type" in
++ echo scalar
+ local var_type=scalar
+ log_message DEBUG2 'assign_variable: var_name=remove_blanks, var_value="true", var_type=scalar'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=assign_variable: var_name=remove_blanks, var_value="true", var_type=scalar'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): assign_variable: var_name=remove_blanks, var_value="true", var_type=scalar'
genmd DEBUG2(20): assign_variable: var_name=remove_blanks, var_value="true", var_type=scalar
+ case "$var_type" in
+ declare remove_blanks=true
+ log_message DEBUG2 'Variable: "remove_blanks" updated value: "true"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Variable: "remove_blanks" updated value: "true"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Variable: "remove_blanks" updated value: "true"'
genmd DEBUG2(20): Variable: "remove_blanks" updated value: "true"
+ for var in "${config_variables[@]}"
+ log_message DEBUG2 'Assigning variable: "add_line_numbers" using  "true" original value: "true"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Assigning variable: "add_line_numbers" using  "true" original value: "true"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Assigning variable: "add_line_numbers" using  "true" original value: "true"'
genmd DEBUG2(20): Assigning variable: "add_line_numbers" using  "true" original value: "true"
+ case "${config_variable_action["$var"]}" in
+ assign_variable add_line_numbers true
+ local var_name=add_line_numbers
+ local value=true
++ var_type add_line_numbers
++ local var_name=add_line_numbers
+++ declare -p add_line_numbers
+++ cut -d ' ' -f 2
++ local var_type=--
++ case "$var_type" in
++ echo scalar
+ local var_type=scalar
+ log_message DEBUG2 'assign_variable: var_name=add_line_numbers, var_value="true", var_type=scalar'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=assign_variable: var_name=add_line_numbers, var_value="true", var_type=scalar'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): assign_variable: var_name=add_line_numbers, var_value="true", var_type=scalar'
genmd DEBUG2(20): assign_variable: var_name=add_line_numbers, var_value="true", var_type=scalar
+ case "$var_type" in
+ declare add_line_numbers=true
+ log_message DEBUG2 'Variable: "add_line_numbers" updated value: "true"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Variable: "add_line_numbers" updated value: "true"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Variable: "add_line_numbers" updated value: "true"'
genmd DEBUG2(20): Variable: "add_line_numbers" updated value: "true"
+ for var in "${config_variables[@]}"
+ log_message DEBUG2 'Assigning variable: "compress" using  "false" original value: "false"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Assigning variable: "compress" using  "false" original value: "false"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Assigning variable: "compress" using  "false" original value: "false"'
genmd DEBUG2(20): Assigning variable: "compress" using  "false" original value: "false"
+ case "${config_variable_action["$var"]}" in
+ assign_variable compress false
+ local var_name=compress
+ local value=false
++ var_type compress
++ local var_name=compress
+++ declare -p compress
+++ cut -d ' ' -f 2
++ local var_type=--
++ case "$var_type" in
++ echo scalar
+ local var_type=scalar
+ log_message DEBUG2 'assign_variable: var_name=compress, var_value="false", var_type=scalar'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=assign_variable: var_name=compress, var_value="false", var_type=scalar'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): assign_variable: var_name=compress, var_value="false", var_type=scalar'
genmd DEBUG2(20): assign_variable: var_name=compress, var_value="false", var_type=scalar
+ case "$var_type" in
+ declare compress=false
+ log_message DEBUG2 'Variable: "compress" updated value: "false"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Variable: "compress" updated value: "false"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Variable: "compress" updated value: "false"'
genmd DEBUG2(20): Variable: "compress" updated value: "false"
+ for var in "${config_variables[@]}"
+ log_message DEBUG2 'Assigning variable: "compression_tool" using  "gzip" original value: "gzip"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Assigning variable: "compression_tool" using  "gzip" original value: "gzip"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Assigning variable: "compression_tool" using  "gzip" original value: "gzip"'
genmd DEBUG2(20): Assigning variable: "compression_tool" using  "gzip" original value: "gzip"
+ case "${config_variable_action["$var"]}" in
+ assign_variable compression_tool gzip
+ local var_name=compression_tool
+ local value=gzip
++ var_type compression_tool
++ local var_name=compression_tool
+++ declare -p compression_tool
+++ cut -d ' ' -f 2
++ local var_type=--
++ case "$var_type" in
++ echo scalar
+ local var_type=scalar
+ log_message DEBUG2 'assign_variable: var_name=compression_tool, var_value="gzip", var_type=scalar'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=assign_variable: var_name=compression_tool, var_value="gzip", var_type=scalar'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): assign_variable: var_name=compression_tool, var_value="gzip", var_type=scalar'
genmd DEBUG2(20): assign_variable: var_name=compression_tool, var_value="gzip", var_type=scalar
+ case "$var_type" in
+ declare compression_tool=gzip
+ log_message DEBUG2 'Variable: "compression_tool" updated value: "gzip"'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Variable: "compression_tool" updated value: "gzip"'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Variable: "compression_tool" updated value: "gzip"'
genmd DEBUG2(20): Variable: "compression_tool" updated value: "gzip"
+ [[ true = true ]]
+ parse_gitignore
+ local gitignore_file=/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/.gitignore
+ [[ -f /Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/.gitignore ]]
+ log_message INFO 'Parsing .gitignore file: /Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/.gitignore'
+ local message_level=INFO
+ shift
+ local 'message_out=Parsing .gitignore file: /Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/.gitignore'
+ [[ -z _ ]]
+ '[' 20 -le 30 ']'
+ echo 'genmd INFO(20): Parsing .gitignore file: /Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/.gitignore'
genmd INFO(20): Parsing .gitignore file: /Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/.gitignore
+ IFS=
+ read -r line
++ echo '# File created using '\''.gitignore Generator'\'' for Visual Studio Code: https://bit.ly/vscode-gig'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# File created using '\''.gitignore Generator'\'' for Visual Studio Code: https://bit.ly/vscode-gig'
+ [[ -z # File created using '.gitignore Generator' for Visual Studio Code: https://bit.ly/vscode-gig ]]
+ [[ # File created using '.gitignore Generator' for Visual Studio Code: https://bit.ly/vscode-gig =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Created by https://www.toptal.com/developers/gitignore/api/zsh,visualstudiocode,ssh,pythonvanilla,python,pydev,pycharm+iml,pycharm+all,pycharm,macos,jekyll,fish'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Created by https://www.toptal.com/developers/gitignore/api/zsh,visualstudiocode,ssh,pythonvanilla,python,pydev,pycharm+iml,pycharm+all,pycharm,macos,jekyll,fish'
+ [[ -z # Created by https://www.toptal.com/developers/gitignore/api/zsh,visualstudiocode,ssh,pythonvanilla,python,pydev,pycharm+iml,pycharm+all,pycharm,macos,jekyll,fish ]]
+ [[ # Created by https://www.toptal.com/developers/gitignore/api/zsh,visualstudiocode,ssh,pythonvanilla,python,pydev,pycharm+iml,pycharm+all,pycharm,macos,jekyll,fish =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Edit at https://www.toptal.com/developers/gitignore?templates=zsh,visualstudiocode,ssh,pythonvanilla,python,pydev,pycharm+iml,pycharm+all,pycharm,macos,jekyll,fish'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Edit at https://www.toptal.com/developers/gitignore?templates=zsh,visualstudiocode,ssh,pythonvanilla,python,pydev,pycharm+iml,pycharm+all,pycharm,macos,jekyll,fish'
+ [[ -z # Edit at https://www.toptal.com/developers/gitignore?templates=zsh,visualstudiocode,ssh,pythonvanilla,python,pydev,pycharm+iml,pycharm+all,pycharm,macos,jekyll,fish ]]
+ [[ # Edit at https://www.toptal.com/developers/gitignore?templates=zsh,visualstudiocode,ssh,pythonvanilla,python,pydev,pycharm+iml,pycharm+all,pycharm,macos,jekyll,fish =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### Fish ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### Fish ###'
+ [[ -z ### Fish ### ]]
+ [[ ### Fish ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo 'fishd.*'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='fishd.*'
+ [[ -z fishd.* ]]
+ [[ fishd.* =~ ^# ]]
+ [[ fishd.* =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: fishd.*'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: fishd.*'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: fishd.*'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: fishd.*
+ IFS=
+ read -r line
++ echo fish_history
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=fish_history
+ [[ -z fish_history ]]
+ [[ fish_history =~ ^# ]]
+ [[ fish_history =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: fish_history'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: fish_history'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: fish_history'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: fish_history
+ IFS=
+ read -r line
++ echo fish_variables
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=fish_variables
+ [[ -z fish_variables ]]
+ [[ fish_variables =~ ^# ]]
+ [[ fish_variables =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: fish_variables'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: fish_variables'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: fish_variables'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: fish_variables
+ IFS=
+ read -r line
++ echo config.local.fish
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=config.local.fish
+ [[ -z config.local.fish ]]
+ [[ config.local.fish =~ ^# ]]
+ [[ config.local.fish =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: config.local.fish'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: config.local.fish'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: config.local.fish'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: config.local.fish
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### Jekyll ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### Jekyll ###'
+ [[ -z ### Jekyll ### ]]
+ [[ ### Jekyll ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo _site/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=_site/
+ [[ -z _site/ ]]
+ [[ _site/ =~ ^# ]]
+ [[ _site/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: _site/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: _site/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: _site/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: _site/
+ IFS=
+ read -r line
++ echo .sass-cache/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.sass-cache/
+ [[ -z .sass-cache/ ]]
+ [[ .sass-cache/ =~ ^# ]]
+ [[ .sass-cache/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .sass-cache/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .sass-cache/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .sass-cache/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .sass-cache/
+ IFS=
+ read -r line
++ echo .jekyll-cache/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.jekyll-cache/
+ [[ -z .jekyll-cache/ ]]
+ [[ .jekyll-cache/ =~ ^# ]]
+ [[ .jekyll-cache/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .jekyll-cache/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .jekyll-cache/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .jekyll-cache/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .jekyll-cache/
+ IFS=
+ read -r line
++ echo .jekyll-metadata
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.jekyll-metadata
+ [[ -z .jekyll-metadata ]]
+ [[ .jekyll-metadata =~ ^# ]]
+ [[ .jekyll-metadata =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .jekyll-metadata'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .jekyll-metadata'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .jekyll-metadata'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .jekyll-metadata
+ IFS=
+ read -r line
++ echo '# Ignore folders generated by Bundler'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Ignore folders generated by Bundler'
+ [[ -z # Ignore folders generated by Bundler ]]
+ [[ # Ignore folders generated by Bundler =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .bundle/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.bundle/
+ [[ -z .bundle/ ]]
+ [[ .bundle/ =~ ^# ]]
+ [[ .bundle/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .bundle/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .bundle/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .bundle/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .bundle/
+ IFS=
+ read -r line
++ echo vendor/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=vendor/
+ [[ -z vendor/ ]]
+ [[ vendor/ =~ ^# ]]
+ [[ vendor/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: vendor/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: vendor/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: vendor/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: vendor/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### macOS ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### macOS ###'
+ [[ -z ### macOS ### ]]
+ [[ ### macOS ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# General'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# General'
+ [[ -z # General ]]
+ [[ # General =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .DS_Store
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.DS_Store
+ [[ -z .DS_Store ]]
+ [[ .DS_Store =~ ^# ]]
+ [[ .DS_Store =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .DS_Store'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .DS_Store'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .DS_Store'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .DS_Store
+ IFS=
+ read -r line
++ echo .AppleDouble
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.AppleDouble
+ [[ -z .AppleDouble ]]
+ [[ .AppleDouble =~ ^# ]]
+ [[ .AppleDouble =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .AppleDouble'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .AppleDouble'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .AppleDouble'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .AppleDouble
+ IFS=
+ read -r line
++ echo .LSOverride
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.LSOverride
+ [[ -z .LSOverride ]]
+ [[ .LSOverride =~ ^# ]]
+ [[ .LSOverride =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .LSOverride'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .LSOverride'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .LSOverride'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .LSOverride
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Icon must end with two \r'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Icon must end with two \r'
+ [[ -z # Icon must end with two \r ]]
+ [[ # Icon must end with two \r =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo Icon
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=Icon
+ [[ -z Icon ]]
+ [[ Icon =~ ^# ]]
+ [[ Icon =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: Icon'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: Icon'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: Icon'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: Icon
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Thumbnails'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Thumbnails'
+ [[ -z # Thumbnails ]]
+ [[ # Thumbnails =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '._*'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='._*'
+ [[ -z ._* ]]
+ [[ ._* =~ ^# ]]
+ [[ ._* =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: ._*'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: ._*'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: ._*'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: ._*
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Files that might appear in the root of a volume'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Files that might appear in the root of a volume'
+ [[ -z # Files that might appear in the root of a volume ]]
+ [[ # Files that might appear in the root of a volume =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .DocumentRevisions-V100
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.DocumentRevisions-V100
+ [[ -z .DocumentRevisions-V100 ]]
+ [[ .DocumentRevisions-V100 =~ ^# ]]
+ [[ .DocumentRevisions-V100 =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .DocumentRevisions-V100'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .DocumentRevisions-V100'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .DocumentRevisions-V100'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .DocumentRevisions-V100
+ IFS=
+ read -r line
++ echo .fseventsd
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.fseventsd
+ [[ -z .fseventsd ]]
+ [[ .fseventsd =~ ^# ]]
+ [[ .fseventsd =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .fseventsd'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .fseventsd'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .fseventsd'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .fseventsd
+ IFS=
+ read -r line
++ echo .Spotlight-V100
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.Spotlight-V100
+ [[ -z .Spotlight-V100 ]]
+ [[ .Spotlight-V100 =~ ^# ]]
+ [[ .Spotlight-V100 =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .Spotlight-V100'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .Spotlight-V100'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .Spotlight-V100'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .Spotlight-V100
+ IFS=
+ read -r line
++ echo .TemporaryItems
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.TemporaryItems
+ [[ -z .TemporaryItems ]]
+ [[ .TemporaryItems =~ ^# ]]
+ [[ .TemporaryItems =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .TemporaryItems'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .TemporaryItems'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .TemporaryItems'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .TemporaryItems
+ IFS=
+ read -r line
++ echo .Trashes
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.Trashes
+ [[ -z .Trashes ]]
+ [[ .Trashes =~ ^# ]]
+ [[ .Trashes =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .Trashes'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .Trashes'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .Trashes'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .Trashes
+ IFS=
+ read -r line
++ echo .VolumeIcon.icns
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.VolumeIcon.icns
+ [[ -z .VolumeIcon.icns ]]
+ [[ .VolumeIcon.icns =~ ^# ]]
+ [[ .VolumeIcon.icns =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .VolumeIcon.icns'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .VolumeIcon.icns'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .VolumeIcon.icns'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .VolumeIcon.icns
+ IFS=
+ read -r line
++ echo .com.apple.timemachine.donotpresent
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.com.apple.timemachine.donotpresent
+ [[ -z .com.apple.timemachine.donotpresent ]]
+ [[ .com.apple.timemachine.donotpresent =~ ^# ]]
+ [[ .com.apple.timemachine.donotpresent =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .com.apple.timemachine.donotpresent'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .com.apple.timemachine.donotpresent'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .com.apple.timemachine.donotpresent'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .com.apple.timemachine.donotpresent
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Directories potentially created on remote AFP share'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Directories potentially created on remote AFP share'
+ [[ -z # Directories potentially created on remote AFP share ]]
+ [[ # Directories potentially created on remote AFP share =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .AppleDB
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.AppleDB
+ [[ -z .AppleDB ]]
+ [[ .AppleDB =~ ^# ]]
+ [[ .AppleDB =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .AppleDB'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .AppleDB'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .AppleDB'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .AppleDB
+ IFS=
+ read -r line
++ echo .AppleDesktop
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.AppleDesktop
+ [[ -z .AppleDesktop ]]
+ [[ .AppleDesktop =~ ^# ]]
+ [[ .AppleDesktop =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .AppleDesktop'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .AppleDesktop'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .AppleDesktop'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .AppleDesktop
+ IFS=
+ read -r line
++ echo 'Network Trash Folder'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='Network Trash Folder'
+ [[ -z Network Trash Folder ]]
+ [[ Network Trash Folder =~ ^# ]]
+ [[ Network Trash Folder =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: Network Trash Folder'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: Network Trash Folder'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: Network Trash Folder'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: Network Trash Folder
+ IFS=
+ read -r line
++ echo 'Temporary Items'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='Temporary Items'
+ [[ -z Temporary Items ]]
+ [[ Temporary Items =~ ^# ]]
+ [[ Temporary Items =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: Temporary Items'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: Temporary Items'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: Temporary Items'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: Temporary Items
+ IFS=
+ read -r line
++ echo .apdisk
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.apdisk
+ [[ -z .apdisk ]]
+ [[ .apdisk =~ ^# ]]
+ [[ .apdisk =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .apdisk'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .apdisk'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .apdisk'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .apdisk
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### macOS Patch ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### macOS Patch ###'
+ [[ -z ### macOS Patch ### ]]
+ [[ ### macOS Patch ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# iCloud generated files'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# iCloud generated files'
+ [[ -z # iCloud generated files ]]
+ [[ # iCloud generated files =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '*.icloud'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.icloud'
+ [[ -z *.icloud ]]
+ [[ *.icloud =~ ^# ]]
+ [[ *.icloud =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.icloud'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.icloud'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.icloud'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.icloud
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### PyCharm ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### PyCharm ###'
+ [[ -z ### PyCharm ### ]]
+ [[ ### PyCharm ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider'
+ [[ -z # Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider ]]
+ [[ # Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839'
+ [[ -z # Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839 ]]
+ [[ # Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839 =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# User-specific stuff'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# User-specific stuff'
+ [[ -z # User-specific stuff ]]
+ [[ # User-specific stuff =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '.idea/**/workspace.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/workspace.xml'
+ [[ -z .idea/**/workspace.xml ]]
+ [[ .idea/**/workspace.xml =~ ^# ]]
+ [[ .idea/**/workspace.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/workspace.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/workspace.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/workspace.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/workspace.xml
+ IFS=
+ read -r line
++ echo '.idea/**/tasks.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/tasks.xml'
+ [[ -z .idea/**/tasks.xml ]]
+ [[ .idea/**/tasks.xml =~ ^# ]]
+ [[ .idea/**/tasks.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/tasks.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/tasks.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/tasks.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/tasks.xml
+ IFS=
+ read -r line
++ echo '.idea/**/usage.statistics.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/usage.statistics.xml'
+ [[ -z .idea/**/usage.statistics.xml ]]
+ [[ .idea/**/usage.statistics.xml =~ ^# ]]
+ [[ .idea/**/usage.statistics.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/usage.statistics.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/usage.statistics.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/usage.statistics.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/usage.statistics.xml
+ IFS=
+ read -r line
++ echo '.idea/**/dictionaries'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/dictionaries'
+ [[ -z .idea/**/dictionaries ]]
+ [[ .idea/**/dictionaries =~ ^# ]]
+ [[ .idea/**/dictionaries =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/dictionaries'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/dictionaries'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/dictionaries'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/dictionaries
+ IFS=
+ read -r line
++ echo '.idea/**/shelf'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/shelf'
+ [[ -z .idea/**/shelf ]]
+ [[ .idea/**/shelf =~ ^# ]]
+ [[ .idea/**/shelf =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/shelf'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/shelf'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/shelf'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/shelf
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# AWS User-specific'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# AWS User-specific'
+ [[ -z # AWS User-specific ]]
+ [[ # AWS User-specific =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '.idea/**/aws.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/aws.xml'
+ [[ -z .idea/**/aws.xml ]]
+ [[ .idea/**/aws.xml =~ ^# ]]
+ [[ .idea/**/aws.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/aws.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/aws.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/aws.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/aws.xml
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Generated files'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Generated files'
+ [[ -z # Generated files ]]
+ [[ # Generated files =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '.idea/**/contentModel.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/contentModel.xml'
+ [[ -z .idea/**/contentModel.xml ]]
+ [[ .idea/**/contentModel.xml =~ ^# ]]
+ [[ .idea/**/contentModel.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/contentModel.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/contentModel.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/contentModel.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/contentModel.xml
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Sensitive or high-churn files'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Sensitive or high-churn files'
+ [[ -z # Sensitive or high-churn files ]]
+ [[ # Sensitive or high-churn files =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '.idea/**/dataSources/'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/dataSources/'
+ [[ -z .idea/**/dataSources/ ]]
+ [[ .idea/**/dataSources/ =~ ^# ]]
+ [[ .idea/**/dataSources/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/dataSources/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/dataSources/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/dataSources/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/dataSources/
+ IFS=
+ read -r line
++ echo '.idea/**/dataSources.ids'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/dataSources.ids'
+ [[ -z .idea/**/dataSources.ids ]]
+ [[ .idea/**/dataSources.ids =~ ^# ]]
+ [[ .idea/**/dataSources.ids =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/dataSources.ids'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/dataSources.ids'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/dataSources.ids'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/dataSources.ids
+ IFS=
+ read -r line
++ echo '.idea/**/dataSources.local.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/dataSources.local.xml'
+ [[ -z .idea/**/dataSources.local.xml ]]
+ [[ .idea/**/dataSources.local.xml =~ ^# ]]
+ [[ .idea/**/dataSources.local.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/dataSources.local.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/dataSources.local.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/dataSources.local.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/dataSources.local.xml
+ IFS=
+ read -r line
++ echo '.idea/**/sqlDataSources.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/sqlDataSources.xml'
+ [[ -z .idea/**/sqlDataSources.xml ]]
+ [[ .idea/**/sqlDataSources.xml =~ ^# ]]
+ [[ .idea/**/sqlDataSources.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/sqlDataSources.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/sqlDataSources.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/sqlDataSources.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/sqlDataSources.xml
+ IFS=
+ read -r line
++ echo '.idea/**/dynamic.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/dynamic.xml'
+ [[ -z .idea/**/dynamic.xml ]]
+ [[ .idea/**/dynamic.xml =~ ^# ]]
+ [[ .idea/**/dynamic.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/dynamic.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/dynamic.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/dynamic.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/dynamic.xml
+ IFS=
+ read -r line
++ echo '.idea/**/uiDesigner.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/uiDesigner.xml'
+ [[ -z .idea/**/uiDesigner.xml ]]
+ [[ .idea/**/uiDesigner.xml =~ ^# ]]
+ [[ .idea/**/uiDesigner.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/uiDesigner.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/uiDesigner.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/uiDesigner.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/uiDesigner.xml
+ IFS=
+ read -r line
++ echo '.idea/**/dbnavigator.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/dbnavigator.xml'
+ [[ -z .idea/**/dbnavigator.xml ]]
+ [[ .idea/**/dbnavigator.xml =~ ^# ]]
+ [[ .idea/**/dbnavigator.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/dbnavigator.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/dbnavigator.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/dbnavigator.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/dbnavigator.xml
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Gradle'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Gradle'
+ [[ -z # Gradle ]]
+ [[ # Gradle =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '.idea/**/gradle.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/gradle.xml'
+ [[ -z .idea/**/gradle.xml ]]
+ [[ .idea/**/gradle.xml =~ ^# ]]
+ [[ .idea/**/gradle.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/gradle.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/gradle.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/gradle.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/gradle.xml
+ IFS=
+ read -r line
++ echo '.idea/**/libraries'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/libraries'
+ [[ -z .idea/**/libraries ]]
+ [[ .idea/**/libraries =~ ^# ]]
+ [[ .idea/**/libraries =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/libraries'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/libraries'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/libraries'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/libraries
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Gradle and Maven with auto-import'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Gradle and Maven with auto-import'
+ [[ -z # Gradle and Maven with auto-import ]]
+ [[ # Gradle and Maven with auto-import =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# When using Gradle or Maven with auto-import, you should exclude module files,'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# When using Gradle or Maven with auto-import, you should exclude module files,'
+ [[ -z # When using Gradle or Maven with auto-import, you should exclude module files, ]]
+ [[ # When using Gradle or Maven with auto-import, you should exclude module files, =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# since they will be recreated, and may cause churn.  Uncomment if using'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# since they will be recreated, and may cause churn.  Uncomment if using'
+ [[ -z # since they will be recreated, and may cause churn.  Uncomment if using ]]
+ [[ # since they will be recreated, and may cause churn.  Uncomment if using =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# auto-import.'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# auto-import.'
+ [[ -z # auto-import. ]]
+ [[ # auto-import. =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/artifacts'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/artifacts'
+ [[ -z # .idea/artifacts ]]
+ [[ # .idea/artifacts =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/compiler.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/compiler.xml'
+ [[ -z # .idea/compiler.xml ]]
+ [[ # .idea/compiler.xml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/jarRepositories.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/jarRepositories.xml'
+ [[ -z # .idea/jarRepositories.xml ]]
+ [[ # .idea/jarRepositories.xml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/modules.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/modules.xml'
+ [[ -z # .idea/modules.xml ]]
+ [[ # .idea/modules.xml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/*.iml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/*.iml'
+ [[ -z # .idea/*.iml ]]
+ [[ # .idea/*.iml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/modules'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/modules'
+ [[ -z # .idea/modules ]]
+ [[ # .idea/modules =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# *.iml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# *.iml'
+ [[ -z # *.iml ]]
+ [[ # *.iml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# *.ipr'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# *.ipr'
+ [[ -z # *.ipr ]]
+ [[ # *.ipr =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# CMake'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# CMake'
+ [[ -z # CMake ]]
+ [[ # CMake =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo 'cmake-build-*/'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='cmake-build-*/'
+ [[ -z cmake-build-*/ ]]
+ [[ cmake-build-*/ =~ ^# ]]
+ [[ cmake-build-*/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: cmake-build-*/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: cmake-build-*/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: cmake-build-*/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: cmake-build-*/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Mongo Explorer plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Mongo Explorer plugin'
+ [[ -z # Mongo Explorer plugin ]]
+ [[ # Mongo Explorer plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '.idea/**/mongoSettings.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/mongoSettings.xml'
+ [[ -z .idea/**/mongoSettings.xml ]]
+ [[ .idea/**/mongoSettings.xml =~ ^# ]]
+ [[ .idea/**/mongoSettings.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/mongoSettings.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/mongoSettings.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/mongoSettings.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/mongoSettings.xml
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# File-based project format'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# File-based project format'
+ [[ -z # File-based project format ]]
+ [[ # File-based project format =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '*.iws'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.iws'
+ [[ -z *.iws ]]
+ [[ *.iws =~ ^# ]]
+ [[ *.iws =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.iws'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.iws'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.iws'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.iws
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# IntelliJ'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# IntelliJ'
+ [[ -z # IntelliJ ]]
+ [[ # IntelliJ =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo out/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=out/
+ [[ -z out/ ]]
+ [[ out/ =~ ^# ]]
+ [[ out/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: out/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: out/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: out/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: out/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# mpeltonen/sbt-idea plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# mpeltonen/sbt-idea plugin'
+ [[ -z # mpeltonen/sbt-idea plugin ]]
+ [[ # mpeltonen/sbt-idea plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .idea_modules/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.idea_modules/
+ [[ -z .idea_modules/ ]]
+ [[ .idea_modules/ =~ ^# ]]
+ [[ .idea_modules/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea_modules/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea_modules/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea_modules/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea_modules/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# JIRA plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# JIRA plugin'
+ [[ -z # JIRA plugin ]]
+ [[ # JIRA plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo atlassian-ide-plugin.xml
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=atlassian-ide-plugin.xml
+ [[ -z atlassian-ide-plugin.xml ]]
+ [[ atlassian-ide-plugin.xml =~ ^# ]]
+ [[ atlassian-ide-plugin.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: atlassian-ide-plugin.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: atlassian-ide-plugin.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: atlassian-ide-plugin.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: atlassian-ide-plugin.xml
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Cursive Clojure plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Cursive Clojure plugin'
+ [[ -z # Cursive Clojure plugin ]]
+ [[ # Cursive Clojure plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .idea/replstate.xml
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.idea/replstate.xml
+ [[ -z .idea/replstate.xml ]]
+ [[ .idea/replstate.xml =~ ^# ]]
+ [[ .idea/replstate.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/replstate.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/replstate.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/replstate.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/replstate.xml
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# SonarLint plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# SonarLint plugin'
+ [[ -z # SonarLint plugin ]]
+ [[ # SonarLint plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .idea/sonarlint/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.idea/sonarlint/
+ [[ -z .idea/sonarlint/ ]]
+ [[ .idea/sonarlint/ =~ ^# ]]
+ [[ .idea/sonarlint/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/sonarlint/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/sonarlint/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/sonarlint/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/sonarlint/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Crashlytics plugin (for Android Studio and IntelliJ)'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Crashlytics plugin (for Android Studio and IntelliJ)'
+ [[ -z # Crashlytics plugin (for Android Studio and IntelliJ) ]]
+ [[ # Crashlytics plugin (for Android Studio and IntelliJ) =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo com_crashlytics_export_strings.xml
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=com_crashlytics_export_strings.xml
+ [[ -z com_crashlytics_export_strings.xml ]]
+ [[ com_crashlytics_export_strings.xml =~ ^# ]]
+ [[ com_crashlytics_export_strings.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: com_crashlytics_export_strings.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: com_crashlytics_export_strings.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: com_crashlytics_export_strings.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: com_crashlytics_export_strings.xml
+ IFS=
+ read -r line
++ echo crashlytics.properties
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=crashlytics.properties
+ [[ -z crashlytics.properties ]]
+ [[ crashlytics.properties =~ ^# ]]
+ [[ crashlytics.properties =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: crashlytics.properties'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: crashlytics.properties'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: crashlytics.properties'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: crashlytics.properties
+ IFS=
+ read -r line
++ echo crashlytics-build.properties
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=crashlytics-build.properties
+ [[ -z crashlytics-build.properties ]]
+ [[ crashlytics-build.properties =~ ^# ]]
+ [[ crashlytics-build.properties =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: crashlytics-build.properties'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: crashlytics-build.properties'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: crashlytics-build.properties'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: crashlytics-build.properties
+ IFS=
+ read -r line
++ echo fabric.properties
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=fabric.properties
+ [[ -z fabric.properties ]]
+ [[ fabric.properties =~ ^# ]]
+ [[ fabric.properties =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: fabric.properties'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: fabric.properties'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: fabric.properties'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: fabric.properties
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Editor-based Rest Client'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Editor-based Rest Client'
+ [[ -z # Editor-based Rest Client ]]
+ [[ # Editor-based Rest Client =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .idea/httpRequests
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.idea/httpRequests
+ [[ -z .idea/httpRequests ]]
+ [[ .idea/httpRequests =~ ^# ]]
+ [[ .idea/httpRequests =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/httpRequests'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/httpRequests'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/httpRequests'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/httpRequests
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Android studio 3.1+ serialized cache file'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Android studio 3.1+ serialized cache file'
+ [[ -z # Android studio 3.1+ serialized cache file ]]
+ [[ # Android studio 3.1+ serialized cache file =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .idea/caches/build_file_checksums.ser
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.idea/caches/build_file_checksums.ser
+ [[ -z .idea/caches/build_file_checksums.ser ]]
+ [[ .idea/caches/build_file_checksums.ser =~ ^# ]]
+ [[ .idea/caches/build_file_checksums.ser =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/caches/build_file_checksums.ser'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/caches/build_file_checksums.ser'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/caches/build_file_checksums.ser'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/caches/build_file_checksums.ser
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### PyCharm Patch ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### PyCharm Patch ###'
+ [[ -z ### PyCharm Patch ### ]]
+ [[ ### PyCharm Patch ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721'
+ [[ -z # Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721 ]]
+ [[ # Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721 =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# *.iml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# *.iml'
+ [[ -z # *.iml ]]
+ [[ # *.iml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# modules.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# modules.xml'
+ [[ -z # modules.xml ]]
+ [[ # modules.xml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/misc.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/misc.xml'
+ [[ -z # .idea/misc.xml ]]
+ [[ # .idea/misc.xml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# *.ipr'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# *.ipr'
+ [[ -z # *.ipr ]]
+ [[ # *.ipr =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Sonarlint plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Sonarlint plugin'
+ [[ -z # Sonarlint plugin ]]
+ [[ # Sonarlint plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# https://plugins.jetbrains.com/plugin/7973-sonarlint'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# https://plugins.jetbrains.com/plugin/7973-sonarlint'
+ [[ -z # https://plugins.jetbrains.com/plugin/7973-sonarlint ]]
+ [[ # https://plugins.jetbrains.com/plugin/7973-sonarlint =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '.idea/**/sonarlint/'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/sonarlint/'
+ [[ -z .idea/**/sonarlint/ ]]
+ [[ .idea/**/sonarlint/ =~ ^# ]]
+ [[ .idea/**/sonarlint/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/sonarlint/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/sonarlint/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/sonarlint/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/sonarlint/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# SonarQube Plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# SonarQube Plugin'
+ [[ -z # SonarQube Plugin ]]
+ [[ # SonarQube Plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# https://plugins.jetbrains.com/plugin/7238-sonarqube-community-plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# https://plugins.jetbrains.com/plugin/7238-sonarqube-community-plugin'
+ [[ -z # https://plugins.jetbrains.com/plugin/7238-sonarqube-community-plugin ]]
+ [[ # https://plugins.jetbrains.com/plugin/7238-sonarqube-community-plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '.idea/**/sonarIssues.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/sonarIssues.xml'
+ [[ -z .idea/**/sonarIssues.xml ]]
+ [[ .idea/**/sonarIssues.xml =~ ^# ]]
+ [[ .idea/**/sonarIssues.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/sonarIssues.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/sonarIssues.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/sonarIssues.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/sonarIssues.xml
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Markdown Navigator plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Markdown Navigator plugin'
+ [[ -z # Markdown Navigator plugin ]]
+ [[ # Markdown Navigator plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# https://plugins.jetbrains.com/plugin/7896-markdown-navigator-enhanced'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# https://plugins.jetbrains.com/plugin/7896-markdown-navigator-enhanced'
+ [[ -z # https://plugins.jetbrains.com/plugin/7896-markdown-navigator-enhanced ]]
+ [[ # https://plugins.jetbrains.com/plugin/7896-markdown-navigator-enhanced =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '.idea/**/markdown-navigator.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/markdown-navigator.xml'
+ [[ -z .idea/**/markdown-navigator.xml ]]
+ [[ .idea/**/markdown-navigator.xml =~ ^# ]]
+ [[ .idea/**/markdown-navigator.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/markdown-navigator.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/markdown-navigator.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/markdown-navigator.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/markdown-navigator.xml
+ IFS=
+ read -r line
++ echo '.idea/**/markdown-navigator-enh.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/markdown-navigator-enh.xml'
+ [[ -z .idea/**/markdown-navigator-enh.xml ]]
+ [[ .idea/**/markdown-navigator-enh.xml =~ ^# ]]
+ [[ .idea/**/markdown-navigator-enh.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/markdown-navigator-enh.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/markdown-navigator-enh.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/markdown-navigator-enh.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/markdown-navigator-enh.xml
+ IFS=
+ read -r line
++ echo '.idea/**/markdown-navigator/'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/markdown-navigator/'
+ [[ -z .idea/**/markdown-navigator/ ]]
+ [[ .idea/**/markdown-navigator/ =~ ^# ]]
+ [[ .idea/**/markdown-navigator/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/markdown-navigator/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/markdown-navigator/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/markdown-navigator/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/markdown-navigator/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Cache file creation bug'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Cache file creation bug'
+ [[ -z # Cache file creation bug ]]
+ [[ # Cache file creation bug =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# See https://youtrack.jetbrains.com/issue/JBR-2257'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# See https://youtrack.jetbrains.com/issue/JBR-2257'
+ [[ -z # See https://youtrack.jetbrains.com/issue/JBR-2257 ]]
+ [[ # See https://youtrack.jetbrains.com/issue/JBR-2257 =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '.idea/$CACHE_FILE$'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/$CACHE_FILE$'
+ [[ -z .idea/$CACHE_FILE$ ]]
+ [[ .idea/$CACHE_FILE$ =~ ^# ]]
+ [[ .idea/$CACHE_FILE$ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/$CACHE_FILE$'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/$CACHE_FILE$'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/$CACHE_FILE$'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/$CACHE_FILE$
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# CodeStream plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# CodeStream plugin'
+ [[ -z # CodeStream plugin ]]
+ [[ # CodeStream plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# https://plugins.jetbrains.com/plugin/12206-codestream'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# https://plugins.jetbrains.com/plugin/12206-codestream'
+ [[ -z # https://plugins.jetbrains.com/plugin/12206-codestream ]]
+ [[ # https://plugins.jetbrains.com/plugin/12206-codestream =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .idea/codestream.xml
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.idea/codestream.xml
+ [[ -z .idea/codestream.xml ]]
+ [[ .idea/codestream.xml =~ ^# ]]
+ [[ .idea/codestream.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/codestream.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/codestream.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/codestream.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/codestream.xml
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Azure Toolkit for IntelliJ plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Azure Toolkit for IntelliJ plugin'
+ [[ -z # Azure Toolkit for IntelliJ plugin ]]
+ [[ # Azure Toolkit for IntelliJ plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# https://plugins.jetbrains.com/plugin/8053-azure-toolkit-for-intellij'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# https://plugins.jetbrains.com/plugin/8053-azure-toolkit-for-intellij'
+ [[ -z # https://plugins.jetbrains.com/plugin/8053-azure-toolkit-for-intellij ]]
+ [[ # https://plugins.jetbrains.com/plugin/8053-azure-toolkit-for-intellij =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '.idea/**/azureSettings.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/**/azureSettings.xml'
+ [[ -z .idea/**/azureSettings.xml ]]
+ [[ .idea/**/azureSettings.xml =~ ^# ]]
+ [[ .idea/**/azureSettings.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/**/azureSettings.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/**/azureSettings.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/azureSettings.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/**/azureSettings.xml
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### PyCharm+all ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### PyCharm+all ###'
+ [[ -z ### PyCharm+all ### ]]
+ [[ ### PyCharm+all ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider'
+ [[ -z # Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider ]]
+ [[ # Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839'
+ [[ -z # Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839 ]]
+ [[ # Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839 =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# User-specific stuff'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# User-specific stuff'
+ [[ -z # User-specific stuff ]]
+ [[ # User-specific stuff =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# AWS User-specific'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# AWS User-specific'
+ [[ -z # AWS User-specific ]]
+ [[ # AWS User-specific =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Generated files'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Generated files'
+ [[ -z # Generated files ]]
+ [[ # Generated files =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Sensitive or high-churn files'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Sensitive or high-churn files'
+ [[ -z # Sensitive or high-churn files ]]
+ [[ # Sensitive or high-churn files =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Gradle'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Gradle'
+ [[ -z # Gradle ]]
+ [[ # Gradle =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Gradle and Maven with auto-import'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Gradle and Maven with auto-import'
+ [[ -z # Gradle and Maven with auto-import ]]
+ [[ # Gradle and Maven with auto-import =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# When using Gradle or Maven with auto-import, you should exclude module files,'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# When using Gradle or Maven with auto-import, you should exclude module files,'
+ [[ -z # When using Gradle or Maven with auto-import, you should exclude module files, ]]
+ [[ # When using Gradle or Maven with auto-import, you should exclude module files, =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# since they will be recreated, and may cause churn.  Uncomment if using'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# since they will be recreated, and may cause churn.  Uncomment if using'
+ [[ -z # since they will be recreated, and may cause churn.  Uncomment if using ]]
+ [[ # since they will be recreated, and may cause churn.  Uncomment if using =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# auto-import.'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# auto-import.'
+ [[ -z # auto-import. ]]
+ [[ # auto-import. =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/artifacts'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/artifacts'
+ [[ -z # .idea/artifacts ]]
+ [[ # .idea/artifacts =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/compiler.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/compiler.xml'
+ [[ -z # .idea/compiler.xml ]]
+ [[ # .idea/compiler.xml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/jarRepositories.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/jarRepositories.xml'
+ [[ -z # .idea/jarRepositories.xml ]]
+ [[ # .idea/jarRepositories.xml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/modules.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/modules.xml'
+ [[ -z # .idea/modules.xml ]]
+ [[ # .idea/modules.xml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/*.iml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/*.iml'
+ [[ -z # .idea/*.iml ]]
+ [[ # .idea/*.iml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/modules'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/modules'
+ [[ -z # .idea/modules ]]
+ [[ # .idea/modules =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# *.iml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# *.iml'
+ [[ -z # *.iml ]]
+ [[ # *.iml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# *.ipr'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# *.ipr'
+ [[ -z # *.ipr ]]
+ [[ # *.ipr =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# CMake'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# CMake'
+ [[ -z # CMake ]]
+ [[ # CMake =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Mongo Explorer plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Mongo Explorer plugin'
+ [[ -z # Mongo Explorer plugin ]]
+ [[ # Mongo Explorer plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# File-based project format'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# File-based project format'
+ [[ -z # File-based project format ]]
+ [[ # File-based project format =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# IntelliJ'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# IntelliJ'
+ [[ -z # IntelliJ ]]
+ [[ # IntelliJ =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# mpeltonen/sbt-idea plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# mpeltonen/sbt-idea plugin'
+ [[ -z # mpeltonen/sbt-idea plugin ]]
+ [[ # mpeltonen/sbt-idea plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# JIRA plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# JIRA plugin'
+ [[ -z # JIRA plugin ]]
+ [[ # JIRA plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Cursive Clojure plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Cursive Clojure plugin'
+ [[ -z # Cursive Clojure plugin ]]
+ [[ # Cursive Clojure plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# SonarLint plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# SonarLint plugin'
+ [[ -z # SonarLint plugin ]]
+ [[ # SonarLint plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Crashlytics plugin (for Android Studio and IntelliJ)'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Crashlytics plugin (for Android Studio and IntelliJ)'
+ [[ -z # Crashlytics plugin (for Android Studio and IntelliJ) ]]
+ [[ # Crashlytics plugin (for Android Studio and IntelliJ) =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Editor-based Rest Client'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Editor-based Rest Client'
+ [[ -z # Editor-based Rest Client ]]
+ [[ # Editor-based Rest Client =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Android studio 3.1+ serialized cache file'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Android studio 3.1+ serialized cache file'
+ [[ -z # Android studio 3.1+ serialized cache file ]]
+ [[ # Android studio 3.1+ serialized cache file =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### PyCharm+all Patch ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### PyCharm+all Patch ###'
+ [[ -z ### PyCharm+all Patch ### ]]
+ [[ ### PyCharm+all Patch ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Ignore everything but code style settings and run configurations'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Ignore everything but code style settings and run configurations'
+ [[ -z # Ignore everything but code style settings and run configurations ]]
+ [[ # Ignore everything but code style settings and run configurations =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# that are supposed to be shared within teams.'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# that are supposed to be shared within teams.'
+ [[ -z # that are supposed to be shared within teams. ]]
+ [[ # that are supposed to be shared within teams. =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '.idea/*'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.idea/*'
+ [[ -z .idea/* ]]
+ [[ .idea/* =~ ^# ]]
+ [[ .idea/* =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/*'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/*'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/*'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/*
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '!.idea/codeStyles'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='!.idea/codeStyles'
+ [[ -z !.idea/codeStyles ]]
+ [[ !.idea/codeStyles =~ ^# ]]
+ [[ !.idea/codeStyles =~ ^! ]]
+ pattern=.idea/codeStyles
+ gitignore_includes+=("$pattern")
+ log_message DEBUG1 'Parsed .gitignore include pattern: .idea/codeStyles'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore include pattern: .idea/codeStyles'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore include pattern: .idea/codeStyles'
genmd DEBUG1(20): Parsed .gitignore include pattern: .idea/codeStyles
+ continue
+ IFS=
+ read -r line
++ echo '!.idea/runConfigurations'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='!.idea/runConfigurations'
+ [[ -z !.idea/runConfigurations ]]
+ [[ !.idea/runConfigurations =~ ^# ]]
+ [[ !.idea/runConfigurations =~ ^! ]]
+ pattern=.idea/runConfigurations
+ gitignore_includes+=("$pattern")
+ log_message DEBUG1 'Parsed .gitignore include pattern: .idea/runConfigurations'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore include pattern: .idea/runConfigurations'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore include pattern: .idea/runConfigurations'
genmd DEBUG1(20): Parsed .gitignore include pattern: .idea/runConfigurations
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### PyCharm+iml ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### PyCharm+iml ###'
+ [[ -z ### PyCharm+iml ### ]]
+ [[ ### PyCharm+iml ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider'
+ [[ -z # Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider ]]
+ [[ # Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839'
+ [[ -z # Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839 ]]
+ [[ # Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839 =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# User-specific stuff'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# User-specific stuff'
+ [[ -z # User-specific stuff ]]
+ [[ # User-specific stuff =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# AWS User-specific'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# AWS User-specific'
+ [[ -z # AWS User-specific ]]
+ [[ # AWS User-specific =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Generated files'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Generated files'
+ [[ -z # Generated files ]]
+ [[ # Generated files =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Sensitive or high-churn files'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Sensitive or high-churn files'
+ [[ -z # Sensitive or high-churn files ]]
+ [[ # Sensitive or high-churn files =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Gradle'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Gradle'
+ [[ -z # Gradle ]]
+ [[ # Gradle =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Gradle and Maven with auto-import'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Gradle and Maven with auto-import'
+ [[ -z # Gradle and Maven with auto-import ]]
+ [[ # Gradle and Maven with auto-import =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# When using Gradle or Maven with auto-import, you should exclude module files,'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# When using Gradle or Maven with auto-import, you should exclude module files,'
+ [[ -z # When using Gradle or Maven with auto-import, you should exclude module files, ]]
+ [[ # When using Gradle or Maven with auto-import, you should exclude module files, =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# since they will be recreated, and may cause churn.  Uncomment if using'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# since they will be recreated, and may cause churn.  Uncomment if using'
+ [[ -z # since they will be recreated, and may cause churn.  Uncomment if using ]]
+ [[ # since they will be recreated, and may cause churn.  Uncomment if using =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# auto-import.'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# auto-import.'
+ [[ -z # auto-import. ]]
+ [[ # auto-import. =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/artifacts'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/artifacts'
+ [[ -z # .idea/artifacts ]]
+ [[ # .idea/artifacts =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/compiler.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/compiler.xml'
+ [[ -z # .idea/compiler.xml ]]
+ [[ # .idea/compiler.xml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/jarRepositories.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/jarRepositories.xml'
+ [[ -z # .idea/jarRepositories.xml ]]
+ [[ # .idea/jarRepositories.xml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/modules.xml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/modules.xml'
+ [[ -z # .idea/modules.xml ]]
+ [[ # .idea/modules.xml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/*.iml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/*.iml'
+ [[ -z # .idea/*.iml ]]
+ [[ # .idea/*.iml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .idea/modules'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .idea/modules'
+ [[ -z # .idea/modules ]]
+ [[ # .idea/modules =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# *.iml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# *.iml'
+ [[ -z # *.iml ]]
+ [[ # *.iml =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# *.ipr'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# *.ipr'
+ [[ -z # *.ipr ]]
+ [[ # *.ipr =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# CMake'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# CMake'
+ [[ -z # CMake ]]
+ [[ # CMake =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Mongo Explorer plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Mongo Explorer plugin'
+ [[ -z # Mongo Explorer plugin ]]
+ [[ # Mongo Explorer plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# File-based project format'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# File-based project format'
+ [[ -z # File-based project format ]]
+ [[ # File-based project format =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# IntelliJ'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# IntelliJ'
+ [[ -z # IntelliJ ]]
+ [[ # IntelliJ =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# mpeltonen/sbt-idea plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# mpeltonen/sbt-idea plugin'
+ [[ -z # mpeltonen/sbt-idea plugin ]]
+ [[ # mpeltonen/sbt-idea plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# JIRA plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# JIRA plugin'
+ [[ -z # JIRA plugin ]]
+ [[ # JIRA plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Cursive Clojure plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Cursive Clojure plugin'
+ [[ -z # Cursive Clojure plugin ]]
+ [[ # Cursive Clojure plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# SonarLint plugin'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# SonarLint plugin'
+ [[ -z # SonarLint plugin ]]
+ [[ # SonarLint plugin =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Crashlytics plugin (for Android Studio and IntelliJ)'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Crashlytics plugin (for Android Studio and IntelliJ)'
+ [[ -z # Crashlytics plugin (for Android Studio and IntelliJ) ]]
+ [[ # Crashlytics plugin (for Android Studio and IntelliJ) =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Editor-based Rest Client'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Editor-based Rest Client'
+ [[ -z # Editor-based Rest Client ]]
+ [[ # Editor-based Rest Client =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Android studio 3.1+ serialized cache file'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Android studio 3.1+ serialized cache file'
+ [[ -z # Android studio 3.1+ serialized cache file ]]
+ [[ # Android studio 3.1+ serialized cache file =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### PyCharm+iml Patch ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### PyCharm+iml Patch ###'
+ [[ -z ### PyCharm+iml Patch ### ]]
+ [[ ### PyCharm+iml Patch ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-249601023'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-249601023'
+ [[ -z # Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-249601023 ]]
+ [[ # Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-249601023 =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '*.iml'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.iml'
+ [[ -z *.iml ]]
+ [[ *.iml =~ ^# ]]
+ [[ *.iml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.iml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.iml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.iml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.iml
+ IFS=
+ read -r line
++ echo modules.xml
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=modules.xml
+ [[ -z modules.xml ]]
+ [[ modules.xml =~ ^# ]]
+ [[ modules.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: modules.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: modules.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: modules.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: modules.xml
+ IFS=
+ read -r line
++ echo .idea/misc.xml
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.idea/misc.xml
+ [[ -z .idea/misc.xml ]]
+ [[ .idea/misc.xml =~ ^# ]]
+ [[ .idea/misc.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .idea/misc.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .idea/misc.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/misc.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .idea/misc.xml
+ IFS=
+ read -r line
++ echo '*.ipr'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.ipr'
+ [[ -z *.ipr ]]
+ [[ *.ipr =~ ^# ]]
+ [[ *.ipr =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.ipr'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.ipr'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.ipr'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.ipr
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### pydev ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### pydev ###'
+ [[ -z ### pydev ### ]]
+ [[ ### pydev ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .pydevproject
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.pydevproject
+ [[ -z .pydevproject ]]
+ [[ .pydevproject =~ ^# ]]
+ [[ .pydevproject =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .pydevproject'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .pydevproject'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .pydevproject'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .pydevproject
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### Python ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### Python ###'
+ [[ -z ### Python ### ]]
+ [[ ### Python ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Byte-compiled / optimized / DLL files'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Byte-compiled / optimized / DLL files'
+ [[ -z # Byte-compiled / optimized / DLL files ]]
+ [[ # Byte-compiled / optimized / DLL files =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo __pycache__/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=__pycache__/
+ [[ -z __pycache__/ ]]
+ [[ __pycache__/ =~ ^# ]]
+ [[ __pycache__/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: __pycache__/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: __pycache__/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: __pycache__/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: __pycache__/
+ IFS=
+ read -r line
++ echo '*.py[cod]'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.py[cod]'
+ [[ -z *.py[cod] ]]
+ [[ *.py[cod] =~ ^# ]]
+ [[ *.py[cod] =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.py[cod]'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.py[cod]'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.py[cod]'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.py[cod]
+ IFS=
+ read -r line
++ echo '*$py.class'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*$py.class'
+ [[ -z *$py.class ]]
+ [[ *$py.class =~ ^# ]]
+ [[ *$py.class =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *$py.class'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *$py.class'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *$py.class'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *$py.class
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# C extensions'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# C extensions'
+ [[ -z # C extensions ]]
+ [[ # C extensions =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '*.so'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.so'
+ [[ -z *.so ]]
+ [[ *.so =~ ^# ]]
+ [[ *.so =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.so'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.so'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.so'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.so
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Distribution / packaging'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Distribution / packaging'
+ [[ -z # Distribution / packaging ]]
+ [[ # Distribution / packaging =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .Python
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.Python
+ [[ -z .Python ]]
+ [[ .Python =~ ^# ]]
+ [[ .Python =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .Python'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .Python'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .Python'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .Python
+ IFS=
+ read -r line
++ echo build/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=build/
+ [[ -z build/ ]]
+ [[ build/ =~ ^# ]]
+ [[ build/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: build/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: build/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: build/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: build/
+ IFS=
+ read -r line
++ echo develop-eggs/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=develop-eggs/
+ [[ -z develop-eggs/ ]]
+ [[ develop-eggs/ =~ ^# ]]
+ [[ develop-eggs/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: develop-eggs/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: develop-eggs/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: develop-eggs/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: develop-eggs/
+ IFS=
+ read -r line
++ echo dist/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=dist/
+ [[ -z dist/ ]]
+ [[ dist/ =~ ^# ]]
+ [[ dist/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: dist/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: dist/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: dist/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: dist/
+ IFS=
+ read -r line
++ echo downloads/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=downloads/
+ [[ -z downloads/ ]]
+ [[ downloads/ =~ ^# ]]
+ [[ downloads/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: downloads/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: downloads/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: downloads/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: downloads/
+ IFS=
+ read -r line
++ echo eggs/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=eggs/
+ [[ -z eggs/ ]]
+ [[ eggs/ =~ ^# ]]
+ [[ eggs/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: eggs/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: eggs/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: eggs/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: eggs/
+ IFS=
+ read -r line
++ echo .eggs/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.eggs/
+ [[ -z .eggs/ ]]
+ [[ .eggs/ =~ ^# ]]
+ [[ .eggs/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .eggs/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .eggs/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .eggs/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .eggs/
+ IFS=
+ read -r line
++ echo lib/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=lib/
+ [[ -z lib/ ]]
+ [[ lib/ =~ ^# ]]
+ [[ lib/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: lib/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: lib/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: lib/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: lib/
+ IFS=
+ read -r line
++ echo lib64/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=lib64/
+ [[ -z lib64/ ]]
+ [[ lib64/ =~ ^# ]]
+ [[ lib64/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: lib64/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: lib64/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: lib64/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: lib64/
+ IFS=
+ read -r line
++ echo parts/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=parts/
+ [[ -z parts/ ]]
+ [[ parts/ =~ ^# ]]
+ [[ parts/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: parts/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: parts/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: parts/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: parts/
+ IFS=
+ read -r line
++ echo sdist/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=sdist/
+ [[ -z sdist/ ]]
+ [[ sdist/ =~ ^# ]]
+ [[ sdist/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: sdist/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: sdist/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: sdist/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: sdist/
+ IFS=
+ read -r line
++ echo var/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=var/
+ [[ -z var/ ]]
+ [[ var/ =~ ^# ]]
+ [[ var/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: var/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: var/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: var/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: var/
+ IFS=
+ read -r line
++ echo wheels/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=wheels/
+ [[ -z wheels/ ]]
+ [[ wheels/ =~ ^# ]]
+ [[ wheels/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: wheels/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: wheels/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: wheels/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: wheels/
+ IFS=
+ read -r line
++ echo share/python-wheels/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=share/python-wheels/
+ [[ -z share/python-wheels/ ]]
+ [[ share/python-wheels/ =~ ^# ]]
+ [[ share/python-wheels/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: share/python-wheels/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: share/python-wheels/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: share/python-wheels/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: share/python-wheels/
+ IFS=
+ read -r line
++ echo '*.egg-info/'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.egg-info/'
+ [[ -z *.egg-info/ ]]
+ [[ *.egg-info/ =~ ^# ]]
+ [[ *.egg-info/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.egg-info/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.egg-info/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.egg-info/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.egg-info/
+ IFS=
+ read -r line
++ echo .installed.cfg
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.installed.cfg
+ [[ -z .installed.cfg ]]
+ [[ .installed.cfg =~ ^# ]]
+ [[ .installed.cfg =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .installed.cfg'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .installed.cfg'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .installed.cfg'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .installed.cfg
+ IFS=
+ read -r line
++ echo '*.egg'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.egg'
+ [[ -z *.egg ]]
+ [[ *.egg =~ ^# ]]
+ [[ *.egg =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.egg'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.egg'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.egg'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.egg
+ IFS=
+ read -r line
++ echo MANIFEST
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=MANIFEST
+ [[ -z MANIFEST ]]
+ [[ MANIFEST =~ ^# ]]
+ [[ MANIFEST =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: MANIFEST'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: MANIFEST'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: MANIFEST'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: MANIFEST
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# PyInstaller'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# PyInstaller'
+ [[ -z # PyInstaller ]]
+ [[ # PyInstaller =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#  Usually these files are written by a python script from a template'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#  Usually these files are written by a python script from a template'
+ [[ -z #  Usually these files are written by a python script from a template ]]
+ [[ #  Usually these files are written by a python script from a template =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#  before PyInstaller builds the exe, so as to inject date/other infos into it.'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#  before PyInstaller builds the exe, so as to inject date/other infos into it.'
+ [[ -z #  before PyInstaller builds the exe, so as to inject date/other infos into it. ]]
+ [[ #  before PyInstaller builds the exe, so as to inject date/other infos into it. =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '*.manifest'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.manifest'
+ [[ -z *.manifest ]]
+ [[ *.manifest =~ ^# ]]
+ [[ *.manifest =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.manifest'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.manifest'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.manifest'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.manifest
+ IFS=
+ read -r line
++ echo '*.spec'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.spec'
+ [[ -z *.spec ]]
+ [[ *.spec =~ ^# ]]
+ [[ *.spec =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.spec'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.spec'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.spec'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.spec
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Installer logs'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Installer logs'
+ [[ -z # Installer logs ]]
+ [[ # Installer logs =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo pip-log.txt
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=pip-log.txt
+ [[ -z pip-log.txt ]]
+ [[ pip-log.txt =~ ^# ]]
+ [[ pip-log.txt =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: pip-log.txt'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: pip-log.txt'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: pip-log.txt'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: pip-log.txt
+ IFS=
+ read -r line
++ echo pip-delete-this-directory.txt
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=pip-delete-this-directory.txt
+ [[ -z pip-delete-this-directory.txt ]]
+ [[ pip-delete-this-directory.txt =~ ^# ]]
+ [[ pip-delete-this-directory.txt =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: pip-delete-this-directory.txt'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: pip-delete-this-directory.txt'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: pip-delete-this-directory.txt'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: pip-delete-this-directory.txt
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Unit test / coverage reports'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Unit test / coverage reports'
+ [[ -z # Unit test / coverage reports ]]
+ [[ # Unit test / coverage reports =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo htmlcov/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=htmlcov/
+ [[ -z htmlcov/ ]]
+ [[ htmlcov/ =~ ^# ]]
+ [[ htmlcov/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: htmlcov/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: htmlcov/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: htmlcov/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: htmlcov/
+ IFS=
+ read -r line
++ echo .tox/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.tox/
+ [[ -z .tox/ ]]
+ [[ .tox/ =~ ^# ]]
+ [[ .tox/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .tox/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .tox/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .tox/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .tox/
+ IFS=
+ read -r line
++ echo .nox/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.nox/
+ [[ -z .nox/ ]]
+ [[ .nox/ =~ ^# ]]
+ [[ .nox/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .nox/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .nox/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .nox/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .nox/
+ IFS=
+ read -r line
++ echo .coverage
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.coverage
+ [[ -z .coverage ]]
+ [[ .coverage =~ ^# ]]
+ [[ .coverage =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .coverage'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .coverage'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .coverage'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .coverage
+ IFS=
+ read -r line
++ echo '.coverage.*'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.coverage.*'
+ [[ -z .coverage.* ]]
+ [[ .coverage.* =~ ^# ]]
+ [[ .coverage.* =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .coverage.*'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .coverage.*'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .coverage.*'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .coverage.*
+ IFS=
+ read -r line
++ echo .cache
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.cache
+ [[ -z .cache ]]
+ [[ .cache =~ ^# ]]
+ [[ .cache =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .cache'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .cache'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .cache'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .cache
+ IFS=
+ read -r line
++ echo nosetests.xml
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=nosetests.xml
+ [[ -z nosetests.xml ]]
+ [[ nosetests.xml =~ ^# ]]
+ [[ nosetests.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: nosetests.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: nosetests.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: nosetests.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: nosetests.xml
+ IFS=
+ read -r line
++ echo coverage.xml
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=coverage.xml
+ [[ -z coverage.xml ]]
+ [[ coverage.xml =~ ^# ]]
+ [[ coverage.xml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: coverage.xml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: coverage.xml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: coverage.xml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: coverage.xml
+ IFS=
+ read -r line
++ echo '*.cover'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.cover'
+ [[ -z *.cover ]]
+ [[ *.cover =~ ^# ]]
+ [[ *.cover =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.cover'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.cover'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.cover'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.cover
+ IFS=
+ read -r line
++ echo '*.py,cover'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.py,cover'
+ [[ -z *.py,cover ]]
+ [[ *.py,cover =~ ^# ]]
+ [[ *.py,cover =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.py,cover'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.py,cover'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.py,cover'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.py,cover
+ IFS=
+ read -r line
++ echo .hypothesis/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.hypothesis/
+ [[ -z .hypothesis/ ]]
+ [[ .hypothesis/ =~ ^# ]]
+ [[ .hypothesis/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .hypothesis/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .hypothesis/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .hypothesis/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .hypothesis/
+ IFS=
+ read -r line
++ echo .pytest_cache/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.pytest_cache/
+ [[ -z .pytest_cache/ ]]
+ [[ .pytest_cache/ =~ ^# ]]
+ [[ .pytest_cache/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .pytest_cache/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .pytest_cache/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .pytest_cache/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .pytest_cache/
+ IFS=
+ read -r line
++ echo cover/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=cover/
+ [[ -z cover/ ]]
+ [[ cover/ =~ ^# ]]
+ [[ cover/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: cover/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: cover/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: cover/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: cover/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Translations'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Translations'
+ [[ -z # Translations ]]
+ [[ # Translations =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '*.mo'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.mo'
+ [[ -z *.mo ]]
+ [[ *.mo =~ ^# ]]
+ [[ *.mo =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.mo'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.mo'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.mo'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.mo
+ IFS=
+ read -r line
++ echo '*.pot'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.pot'
+ [[ -z *.pot ]]
+ [[ *.pot =~ ^# ]]
+ [[ *.pot =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.pot'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.pot'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.pot'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.pot
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Django stuff:'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Django stuff:'
+ [[ -z # Django stuff: ]]
+ [[ # Django stuff: =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '*.log'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.log'
+ [[ -z *.log ]]
+ [[ *.log =~ ^# ]]
+ [[ *.log =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.log'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.log'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.log'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.log
+ IFS=
+ read -r line
++ echo local_settings.py
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=local_settings.py
+ [[ -z local_settings.py ]]
+ [[ local_settings.py =~ ^# ]]
+ [[ local_settings.py =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: local_settings.py'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: local_settings.py'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: local_settings.py'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: local_settings.py
+ IFS=
+ read -r line
++ echo db.sqlite3
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=db.sqlite3
+ [[ -z db.sqlite3 ]]
+ [[ db.sqlite3 =~ ^# ]]
+ [[ db.sqlite3 =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: db.sqlite3'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: db.sqlite3'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: db.sqlite3'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: db.sqlite3
+ IFS=
+ read -r line
++ echo db.sqlite3-journal
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=db.sqlite3-journal
+ [[ -z db.sqlite3-journal ]]
+ [[ db.sqlite3-journal =~ ^# ]]
+ [[ db.sqlite3-journal =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: db.sqlite3-journal'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: db.sqlite3-journal'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: db.sqlite3-journal'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: db.sqlite3-journal
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Flask stuff:'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Flask stuff:'
+ [[ -z # Flask stuff: ]]
+ [[ # Flask stuff: =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo instance/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=instance/
+ [[ -z instance/ ]]
+ [[ instance/ =~ ^# ]]
+ [[ instance/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: instance/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: instance/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: instance/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: instance/
+ IFS=
+ read -r line
++ echo .webassets-cache
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.webassets-cache
+ [[ -z .webassets-cache ]]
+ [[ .webassets-cache =~ ^# ]]
+ [[ .webassets-cache =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .webassets-cache'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .webassets-cache'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .webassets-cache'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .webassets-cache
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Scrapy stuff:'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Scrapy stuff:'
+ [[ -z # Scrapy stuff: ]]
+ [[ # Scrapy stuff: =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .scrapy
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.scrapy
+ [[ -z .scrapy ]]
+ [[ .scrapy =~ ^# ]]
+ [[ .scrapy =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .scrapy'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .scrapy'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .scrapy'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .scrapy
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Sphinx documentation'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Sphinx documentation'
+ [[ -z # Sphinx documentation ]]
+ [[ # Sphinx documentation =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo docs/_build/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=docs/_build/
+ [[ -z docs/_build/ ]]
+ [[ docs/_build/ =~ ^# ]]
+ [[ docs/_build/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: docs/_build/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: docs/_build/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: docs/_build/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: docs/_build/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# PyBuilder'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# PyBuilder'
+ [[ -z # PyBuilder ]]
+ [[ # PyBuilder =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .pybuilder/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.pybuilder/
+ [[ -z .pybuilder/ ]]
+ [[ .pybuilder/ =~ ^# ]]
+ [[ .pybuilder/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .pybuilder/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .pybuilder/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .pybuilder/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .pybuilder/
+ IFS=
+ read -r line
++ echo target/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=target/
+ [[ -z target/ ]]
+ [[ target/ =~ ^# ]]
+ [[ target/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: target/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: target/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: target/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: target/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Jupyter Notebook'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Jupyter Notebook'
+ [[ -z # Jupyter Notebook ]]
+ [[ # Jupyter Notebook =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .ipynb_checkpoints
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.ipynb_checkpoints
+ [[ -z .ipynb_checkpoints ]]
+ [[ .ipynb_checkpoints =~ ^# ]]
+ [[ .ipynb_checkpoints =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .ipynb_checkpoints'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .ipynb_checkpoints'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .ipynb_checkpoints'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .ipynb_checkpoints
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# IPython'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# IPython'
+ [[ -z # IPython ]]
+ [[ # IPython =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo profile_default/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=profile_default/
+ [[ -z profile_default/ ]]
+ [[ profile_default/ =~ ^# ]]
+ [[ profile_default/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: profile_default/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: profile_default/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: profile_default/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: profile_default/
+ IFS=
+ read -r line
++ echo ipython_config.py
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=ipython_config.py
+ [[ -z ipython_config.py ]]
+ [[ ipython_config.py =~ ^# ]]
+ [[ ipython_config.py =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: ipython_config.py'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: ipython_config.py'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: ipython_config.py'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: ipython_config.py
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# pyenv'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# pyenv'
+ [[ -z # pyenv ]]
+ [[ # pyenv =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   For a library or package, you might want to ignore these files since the code is'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   For a library or package, you might want to ignore these files since the code is'
+ [[ -z #   For a library or package, you might want to ignore these files since the code is ]]
+ [[ #   For a library or package, you might want to ignore these files since the code is =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   intended to run in multiple environments; otherwise, check them in:'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   intended to run in multiple environments; otherwise, check them in:'
+ [[ -z #   intended to run in multiple environments; otherwise, check them in: ]]
+ [[ #   intended to run in multiple environments; otherwise, check them in: =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .python-version'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .python-version'
+ [[ -z # .python-version ]]
+ [[ # .python-version =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# pipenv'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# pipenv'
+ [[ -z # pipenv ]]
+ [[ # pipenv =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.'
+ [[ -z #   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control. ]]
+ [[ #   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control. =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   However, in case of collaboration, if having platform-specific dependencies or dependencies'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   However, in case of collaboration, if having platform-specific dependencies or dependencies'
+ [[ -z #   However, in case of collaboration, if having platform-specific dependencies or dependencies ]]
+ [[ #   However, in case of collaboration, if having platform-specific dependencies or dependencies =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   having no cross-platform support, pipenv may install dependencies that don'\''t work, or not'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   having no cross-platform support, pipenv may install dependencies that don'\''t work, or not'
+ [[ -z #   having no cross-platform support, pipenv may install dependencies that don't work, or not ]]
+ [[ #   having no cross-platform support, pipenv may install dependencies that don't work, or not =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   install all needed dependencies.'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   install all needed dependencies.'
+ [[ -z #   install all needed dependencies. ]]
+ [[ #   install all needed dependencies. =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#Pipfile.lock'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#Pipfile.lock'
+ [[ -z #Pipfile.lock ]]
+ [[ #Pipfile.lock =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# poetry'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# poetry'
+ [[ -z # poetry ]]
+ [[ # poetry =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.'
+ [[ -z #   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control. ]]
+ [[ #   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control. =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   This is especially recommended for binary packages to ensure reproducibility, and is more'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   This is especially recommended for binary packages to ensure reproducibility, and is more'
+ [[ -z #   This is especially recommended for binary packages to ensure reproducibility, and is more ]]
+ [[ #   This is especially recommended for binary packages to ensure reproducibility, and is more =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   commonly ignored for libraries.'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   commonly ignored for libraries.'
+ [[ -z #   commonly ignored for libraries. ]]
+ [[ #   commonly ignored for libraries. =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control'
+ [[ -z #   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control ]]
+ [[ #   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#poetry.lock'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#poetry.lock'
+ [[ -z #poetry.lock ]]
+ [[ #poetry.lock =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# pdm'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# pdm'
+ [[ -z # pdm ]]
+ [[ # pdm =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.'
+ [[ -z #   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control. ]]
+ [[ #   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control. =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#pdm.lock'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#pdm.lock'
+ [[ -z #pdm.lock ]]
+ [[ #pdm.lock =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it'
+ [[ -z #   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it ]]
+ [[ #   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   in version control.'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   in version control.'
+ [[ -z #   in version control. ]]
+ [[ #   in version control. =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   https://pdm.fming.dev/#use-with-ide'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   https://pdm.fming.dev/#use-with-ide'
+ [[ -z #   https://pdm.fming.dev/#use-with-ide ]]
+ [[ #   https://pdm.fming.dev/#use-with-ide =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .pdm.toml
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.pdm.toml
+ [[ -z .pdm.toml ]]
+ [[ .pdm.toml =~ ^# ]]
+ [[ .pdm.toml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .pdm.toml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .pdm.toml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .pdm.toml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .pdm.toml
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm'
+ [[ -z # PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm ]]
+ [[ # PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo __pypackages__/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=__pypackages__/
+ [[ -z __pypackages__/ ]]
+ [[ __pypackages__/ =~ ^# ]]
+ [[ __pypackages__/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: __pypackages__/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: __pypackages__/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: __pypackages__/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: __pypackages__/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Celery stuff'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Celery stuff'
+ [[ -z # Celery stuff ]]
+ [[ # Celery stuff =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo celerybeat-schedule
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=celerybeat-schedule
+ [[ -z celerybeat-schedule ]]
+ [[ celerybeat-schedule =~ ^# ]]
+ [[ celerybeat-schedule =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: celerybeat-schedule'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: celerybeat-schedule'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: celerybeat-schedule'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: celerybeat-schedule
+ IFS=
+ read -r line
++ echo celerybeat.pid
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=celerybeat.pid
+ [[ -z celerybeat.pid ]]
+ [[ celerybeat.pid =~ ^# ]]
+ [[ celerybeat.pid =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: celerybeat.pid'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: celerybeat.pid'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: celerybeat.pid'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: celerybeat.pid
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# SageMath parsed files'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# SageMath parsed files'
+ [[ -z # SageMath parsed files ]]
+ [[ # SageMath parsed files =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '*.sage.py'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.sage.py'
+ [[ -z *.sage.py ]]
+ [[ *.sage.py =~ ^# ]]
+ [[ *.sage.py =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.sage.py'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.sage.py'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.sage.py'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.sage.py
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Environments'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Environments'
+ [[ -z # Environments ]]
+ [[ # Environments =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .env
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.env
+ [[ -z .env ]]
+ [[ .env =~ ^# ]]
+ [[ .env =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .env'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .env'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .env'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .env
+ IFS=
+ read -r line
++ echo .venv
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.venv
+ [[ -z .venv ]]
+ [[ .venv =~ ^# ]]
+ [[ .venv =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .venv'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .venv'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .venv'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .venv
+ IFS=
+ read -r line
++ echo env/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=env/
+ [[ -z env/ ]]
+ [[ env/ =~ ^# ]]
+ [[ env/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: env/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: env/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: env/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: env/
+ IFS=
+ read -r line
++ echo venv/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=venv/
+ [[ -z venv/ ]]
+ [[ venv/ =~ ^# ]]
+ [[ venv/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: venv/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: venv/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: venv/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: venv/
+ IFS=
+ read -r line
++ echo ENV/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=ENV/
+ [[ -z ENV/ ]]
+ [[ ENV/ =~ ^# ]]
+ [[ ENV/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: ENV/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: ENV/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: ENV/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: ENV/
+ IFS=
+ read -r line
++ echo env.bak/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=env.bak/
+ [[ -z env.bak/ ]]
+ [[ env.bak/ =~ ^# ]]
+ [[ env.bak/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: env.bak/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: env.bak/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: env.bak/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: env.bak/
+ IFS=
+ read -r line
++ echo venv.bak/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=venv.bak/
+ [[ -z venv.bak/ ]]
+ [[ venv.bak/ =~ ^# ]]
+ [[ venv.bak/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: venv.bak/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: venv.bak/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: venv.bak/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: venv.bak/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Spyder project settings'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Spyder project settings'
+ [[ -z # Spyder project settings ]]
+ [[ # Spyder project settings =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .spyderproject
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.spyderproject
+ [[ -z .spyderproject ]]
+ [[ .spyderproject =~ ^# ]]
+ [[ .spyderproject =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .spyderproject'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .spyderproject'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .spyderproject'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .spyderproject
+ IFS=
+ read -r line
++ echo .spyproject
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.spyproject
+ [[ -z .spyproject ]]
+ [[ .spyproject =~ ^# ]]
+ [[ .spyproject =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .spyproject'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .spyproject'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .spyproject'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .spyproject
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Rope project settings'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Rope project settings'
+ [[ -z # Rope project settings ]]
+ [[ # Rope project settings =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .ropeproject
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.ropeproject
+ [[ -z .ropeproject ]]
+ [[ .ropeproject =~ ^# ]]
+ [[ .ropeproject =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .ropeproject'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .ropeproject'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .ropeproject'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .ropeproject
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# mkdocs documentation'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# mkdocs documentation'
+ [[ -z # mkdocs documentation ]]
+ [[ # mkdocs documentation =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo /site
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=/site
+ [[ -z /site ]]
+ [[ /site =~ ^# ]]
+ [[ /site =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: /site'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: /site'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: /site'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: /site
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# mypy'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# mypy'
+ [[ -z # mypy ]]
+ [[ # mypy =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .mypy_cache/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.mypy_cache/
+ [[ -z .mypy_cache/ ]]
+ [[ .mypy_cache/ =~ ^# ]]
+ [[ .mypy_cache/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .mypy_cache/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .mypy_cache/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .mypy_cache/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .mypy_cache/
+ IFS=
+ read -r line
++ echo .dmypy.json
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.dmypy.json
+ [[ -z .dmypy.json ]]
+ [[ .dmypy.json =~ ^# ]]
+ [[ .dmypy.json =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .dmypy.json'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .dmypy.json'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .dmypy.json'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .dmypy.json
+ IFS=
+ read -r line
++ echo dmypy.json
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=dmypy.json
+ [[ -z dmypy.json ]]
+ [[ dmypy.json =~ ^# ]]
+ [[ dmypy.json =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: dmypy.json'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: dmypy.json'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: dmypy.json'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: dmypy.json
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Pyre type checker'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Pyre type checker'
+ [[ -z # Pyre type checker ]]
+ [[ # Pyre type checker =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .pyre/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.pyre/
+ [[ -z .pyre/ ]]
+ [[ .pyre/ =~ ^# ]]
+ [[ .pyre/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .pyre/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .pyre/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .pyre/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .pyre/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# pytype static type analyzer'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# pytype static type analyzer'
+ [[ -z # pytype static type analyzer ]]
+ [[ # pytype static type analyzer =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .pytype/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.pytype/
+ [[ -z .pytype/ ]]
+ [[ .pytype/ =~ ^# ]]
+ [[ .pytype/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .pytype/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .pytype/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .pytype/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .pytype/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Cython debug symbols'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Cython debug symbols'
+ [[ -z # Cython debug symbols ]]
+ [[ # Cython debug symbols =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo cython_debug/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=cython_debug/
+ [[ -z cython_debug/ ]]
+ [[ cython_debug/ =~ ^# ]]
+ [[ cython_debug/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: cython_debug/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: cython_debug/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: cython_debug/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: cython_debug/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# PyCharm'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# PyCharm'
+ [[ -z # PyCharm ]]
+ [[ # PyCharm =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can'
+ [[ -z #  JetBrains specific template is maintained in a separate JetBrains.gitignore that can ]]
+ [[ #  JetBrains specific template is maintained in a separate JetBrains.gitignore that can =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore'
+ [[ -z #  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore ]]
+ [[ #  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#  and can be added to the global gitignore or merged into this file.  For a more nuclear'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#  and can be added to the global gitignore or merged into this file.  For a more nuclear'
+ [[ -z #  and can be added to the global gitignore or merged into this file.  For a more nuclear ]]
+ [[ #  and can be added to the global gitignore or merged into this file.  For a more nuclear =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#  option (not recommended) you can uncomment the following to ignore the entire idea folder.'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#  option (not recommended) you can uncomment the following to ignore the entire idea folder.'
+ [[ -z #  option (not recommended) you can uncomment the following to ignore the entire idea folder. ]]
+ [[ #  option (not recommended) you can uncomment the following to ignore the entire idea folder. =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#.idea/'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#.idea/'
+ [[ -z #.idea/ ]]
+ [[ #.idea/ =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### Python Patch ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### Python Patch ###'
+ [[ -z ### Python Patch ### ]]
+ [[ ### Python Patch ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Poetry local configuration file - https://python-poetry.org/docs/configuration/#local-configuration'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Poetry local configuration file - https://python-poetry.org/docs/configuration/#local-configuration'
+ [[ -z # Poetry local configuration file - https://python-poetry.org/docs/configuration/#local-configuration ]]
+ [[ # Poetry local configuration file - https://python-poetry.org/docs/configuration/#local-configuration =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo poetry.toml
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=poetry.toml
+ [[ -z poetry.toml ]]
+ [[ poetry.toml =~ ^# ]]
+ [[ poetry.toml =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: poetry.toml'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: poetry.toml'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: poetry.toml'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: poetry.toml
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# ruff'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# ruff'
+ [[ -z # ruff ]]
+ [[ # ruff =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .ruff_cache/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.ruff_cache/
+ [[ -z .ruff_cache/ ]]
+ [[ .ruff_cache/ =~ ^# ]]
+ [[ .ruff_cache/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .ruff_cache/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .ruff_cache/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .ruff_cache/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .ruff_cache/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# LSP config files'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# LSP config files'
+ [[ -z # LSP config files ]]
+ [[ # LSP config files =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo pyrightconfig.json
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=pyrightconfig.json
+ [[ -z pyrightconfig.json ]]
+ [[ pyrightconfig.json =~ ^# ]]
+ [[ pyrightconfig.json =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: pyrightconfig.json'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: pyrightconfig.json'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: pyrightconfig.json'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: pyrightconfig.json
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### PythonVanilla ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### PythonVanilla ###'
+ [[ -z ### PythonVanilla ### ]]
+ [[ ### PythonVanilla ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Byte-compiled / optimized / DLL files'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Byte-compiled / optimized / DLL files'
+ [[ -z # Byte-compiled / optimized / DLL files ]]
+ [[ # Byte-compiled / optimized / DLL files =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# C extensions'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# C extensions'
+ [[ -z # C extensions ]]
+ [[ # C extensions =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Distribution / packaging'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Distribution / packaging'
+ [[ -z # Distribution / packaging ]]
+ [[ # Distribution / packaging =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Installer logs'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Installer logs'
+ [[ -z # Installer logs ]]
+ [[ # Installer logs =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Unit test / coverage reports'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Unit test / coverage reports'
+ [[ -z # Unit test / coverage reports ]]
+ [[ # Unit test / coverage reports =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Translations'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Translations'
+ [[ -z # Translations ]]
+ [[ # Translations =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# pyenv'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# pyenv'
+ [[ -z # pyenv ]]
+ [[ # pyenv =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   For a library or package, you might want to ignore these files since the code is'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   For a library or package, you might want to ignore these files since the code is'
+ [[ -z #   For a library or package, you might want to ignore these files since the code is ]]
+ [[ #   For a library or package, you might want to ignore these files since the code is =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   intended to run in multiple environments; otherwise, check them in:'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   intended to run in multiple environments; otherwise, check them in:'
+ [[ -z #   intended to run in multiple environments; otherwise, check them in: ]]
+ [[ #   intended to run in multiple environments; otherwise, check them in: =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# .python-version'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# .python-version'
+ [[ -z # .python-version ]]
+ [[ # .python-version =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# pipenv'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# pipenv'
+ [[ -z # pipenv ]]
+ [[ # pipenv =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.'
+ [[ -z #   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control. ]]
+ [[ #   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control. =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   However, in case of collaboration, if having platform-specific dependencies or dependencies'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   However, in case of collaboration, if having platform-specific dependencies or dependencies'
+ [[ -z #   However, in case of collaboration, if having platform-specific dependencies or dependencies ]]
+ [[ #   However, in case of collaboration, if having platform-specific dependencies or dependencies =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   having no cross-platform support, pipenv may install dependencies that don'\''t work, or not'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   having no cross-platform support, pipenv may install dependencies that don'\''t work, or not'
+ [[ -z #   having no cross-platform support, pipenv may install dependencies that don't work, or not ]]
+ [[ #   having no cross-platform support, pipenv may install dependencies that don't work, or not =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '#   install all needed dependencies.'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='#   install all needed dependencies.'
+ [[ -z #   install all needed dependencies. ]]
+ [[ #   install all needed dependencies. =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# PEP 582; used by e.g. github.com/David-OConnor/pyflow'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# PEP 582; used by e.g. github.com/David-OConnor/pyflow'
+ [[ -z # PEP 582; used by e.g. github.com/David-OConnor/pyflow ]]
+ [[ # PEP 582; used by e.g. github.com/David-OConnor/pyflow =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### SSH ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### SSH ###'
+ [[ -z ### SSH ### ]]
+ [[ ### SSH ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '**/.ssh/id_*'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='**/.ssh/id_*'
+ [[ -z **/.ssh/id_* ]]
+ [[ **/.ssh/id_* =~ ^# ]]
+ [[ **/.ssh/id_* =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: **/.ssh/id_*'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: **/.ssh/id_*'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: **/.ssh/id_*'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: **/.ssh/id_*
+ IFS=
+ read -r line
++ echo '**/.ssh/*_id_*'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='**/.ssh/*_id_*'
+ [[ -z **/.ssh/*_id_* ]]
+ [[ **/.ssh/*_id_* =~ ^# ]]
+ [[ **/.ssh/*_id_* =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: **/.ssh/*_id_*'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: **/.ssh/*_id_*'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: **/.ssh/*_id_*'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: **/.ssh/*_id_*
+ IFS=
+ read -r line
++ echo '**/.ssh/known_hosts'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='**/.ssh/known_hosts'
+ [[ -z **/.ssh/known_hosts ]]
+ [[ **/.ssh/known_hosts =~ ^# ]]
+ [[ **/.ssh/known_hosts =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: **/.ssh/known_hosts'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: **/.ssh/known_hosts'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: **/.ssh/known_hosts'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: **/.ssh/known_hosts
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### VisualStudioCode ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### VisualStudioCode ###'
+ [[ -z ### VisualStudioCode ### ]]
+ [[ ### VisualStudioCode ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '.vscode/*'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='.vscode/*'
+ [[ -z .vscode/* ]]
+ [[ .vscode/* =~ ^# ]]
+ [[ .vscode/* =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .vscode/*'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .vscode/*'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .vscode/*'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .vscode/*
+ IFS=
+ read -r line
++ echo .vscode/settings.json
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.vscode/settings.json
+ [[ -z .vscode/settings.json ]]
+ [[ .vscode/settings.json =~ ^# ]]
+ [[ .vscode/settings.json =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .vscode/settings.json'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .vscode/settings.json'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .vscode/settings.json'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .vscode/settings.json
+ IFS=
+ read -r line
++ echo '!.vscode/tasks.json'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='!.vscode/tasks.json'
+ [[ -z !.vscode/tasks.json ]]
+ [[ !.vscode/tasks.json =~ ^# ]]
+ [[ !.vscode/tasks.json =~ ^! ]]
+ pattern=.vscode/tasks.json
+ gitignore_includes+=("$pattern")
+ log_message DEBUG1 'Parsed .gitignore include pattern: .vscode/tasks.json'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore include pattern: .vscode/tasks.json'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore include pattern: .vscode/tasks.json'
genmd DEBUG1(20): Parsed .gitignore include pattern: .vscode/tasks.json
+ continue
+ IFS=
+ read -r line
++ echo '!.vscode/launch.json'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='!.vscode/launch.json'
+ [[ -z !.vscode/launch.json ]]
+ [[ !.vscode/launch.json =~ ^# ]]
+ [[ !.vscode/launch.json =~ ^! ]]
+ pattern=.vscode/launch.json
+ gitignore_includes+=("$pattern")
+ log_message DEBUG1 'Parsed .gitignore include pattern: .vscode/launch.json'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore include pattern: .vscode/launch.json'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore include pattern: .vscode/launch.json'
genmd DEBUG1(20): Parsed .gitignore include pattern: .vscode/launch.json
+ continue
+ IFS=
+ read -r line
++ echo '!.vscode/extensions.json'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='!.vscode/extensions.json'
+ [[ -z !.vscode/extensions.json ]]
+ [[ !.vscode/extensions.json =~ ^# ]]
+ [[ !.vscode/extensions.json =~ ^! ]]
+ pattern=.vscode/extensions.json
+ gitignore_includes+=("$pattern")
+ log_message DEBUG1 'Parsed .gitignore include pattern: .vscode/extensions.json'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore include pattern: .vscode/extensions.json'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore include pattern: .vscode/extensions.json'
genmd DEBUG1(20): Parsed .gitignore include pattern: .vscode/extensions.json
+ continue
+ IFS=
+ read -r line
++ echo '!.vscode/*.code-snippets'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='!.vscode/*.code-snippets'
+ [[ -z !.vscode/*.code-snippets ]]
+ [[ !.vscode/*.code-snippets =~ ^# ]]
+ [[ !.vscode/*.code-snippets =~ ^! ]]
+ pattern='.vscode/*.code-snippets'
+ gitignore_includes+=("$pattern")
+ log_message DEBUG1 'Parsed .gitignore include pattern: .vscode/*.code-snippets'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore include pattern: .vscode/*.code-snippets'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore include pattern: .vscode/*.code-snippets'
genmd DEBUG1(20): Parsed .gitignore include pattern: .vscode/*.code-snippets
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Local History for Visual Studio Code'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Local History for Visual Studio Code'
+ [[ -z # Local History for Visual Studio Code ]]
+ [[ # Local History for Visual Studio Code =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .history/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.history/
+ [[ -z .history/ ]]
+ [[ .history/ =~ ^# ]]
+ [[ .history/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .history/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .history/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .history/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .history/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Built Visual Studio Code Extensions'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Built Visual Studio Code Extensions'
+ [[ -z # Built Visual Studio Code Extensions ]]
+ [[ # Built Visual Studio Code Extensions =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '*.vsix'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.vsix'
+ [[ -z *.vsix ]]
+ [[ *.vsix =~ ^# ]]
+ [[ *.vsix =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.vsix'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.vsix'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.vsix'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.vsix
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### VisualStudioCode Patch ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### VisualStudioCode Patch ###'
+ [[ -z ### VisualStudioCode Patch ### ]]
+ [[ ### VisualStudioCode Patch ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Ignore all local history of files'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Ignore all local history of files'
+ [[ -z # Ignore all local history of files ]]
+ [[ # Ignore all local history of files =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .history
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.history
+ [[ -z .history ]]
+ [[ .history =~ ^# ]]
+ [[ .history =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .history'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .history'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .history'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .history
+ IFS=
+ read -r line
++ echo .ionide
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.ionide
+ [[ -z .ionide ]]
+ [[ .ionide =~ ^# ]]
+ [[ .ionide =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .ionide'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .ionide'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .ionide'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .ionide
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '### Zsh ###'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='### Zsh ###'
+ [[ -z ### Zsh ### ]]
+ [[ ### Zsh ### =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Zsh compiled script + zrecompile backup'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Zsh compiled script + zrecompile backup'
+ [[ -z # Zsh compiled script + zrecompile backup ]]
+ [[ # Zsh compiled script + zrecompile backup =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '*.zwc'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.zwc'
+ [[ -z *.zwc ]]
+ [[ *.zwc =~ ^# ]]
+ [[ *.zwc =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.zwc'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.zwc'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.zwc'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.zwc
+ IFS=
+ read -r line
++ echo '*.zwc.old'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*.zwc.old'
+ [[ -z *.zwc.old ]]
+ [[ *.zwc.old =~ ^# ]]
+ [[ *.zwc.old =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *.zwc.old'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *.zwc.old'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.zwc.old'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *.zwc.old
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Zsh completion-optimization dumpfile'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Zsh completion-optimization dumpfile'
+ [[ -z # Zsh completion-optimization dumpfile ]]
+ [[ # Zsh completion-optimization dumpfile =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '*zcompdump*'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='*zcompdump*'
+ [[ -z *zcompdump* ]]
+ [[ *zcompdump* =~ ^# ]]
+ [[ *zcompdump* =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: *zcompdump*'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: *zcompdump*'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: *zcompdump*'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: *zcompdump*
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Zsh history'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Zsh history'
+ [[ -z # Zsh history ]]
+ [[ # Zsh history =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .zsh_history
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.zsh_history
+ [[ -z .zsh_history ]]
+ [[ .zsh_history =~ ^# ]]
+ [[ .zsh_history =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .zsh_history'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .zsh_history'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .zsh_history'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .zsh_history
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Zsh sessions'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Zsh sessions'
+ [[ -z # Zsh sessions ]]
+ [[ # Zsh sessions =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .zsh_sessions
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.zsh_sessions
+ [[ -z .zsh_sessions ]]
+ [[ .zsh_sessions =~ ^# ]]
+ [[ .zsh_sessions =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .zsh_sessions'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .zsh_sessions'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .zsh_sessions'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .zsh_sessions
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Zsh zcalc history'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Zsh zcalc history'
+ [[ -z # Zsh zcalc history ]]
+ [[ # Zsh zcalc history =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .zcalc_history
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.zcalc_history
+ [[ -z .zcalc_history ]]
+ [[ .zcalc_history =~ ^# ]]
+ [[ .zcalc_history =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .zcalc_history'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .zcalc_history'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .zcalc_history'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .zcalc_history
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# A popular plugin manager'\''s files'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# A popular plugin manager'\''s files'
+ [[ -z # A popular plugin manager's files ]]
+ [[ # A popular plugin manager's files =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ._zinit
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=._zinit
+ [[ -z ._zinit ]]
+ [[ ._zinit =~ ^# ]]
+ [[ ._zinit =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: ._zinit'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: ._zinit'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: ._zinit'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: ._zinit
+ IFS=
+ read -r line
++ echo .zinit_lstupd
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.zinit_lstupd
+ [[ -z .zinit_lstupd ]]
+ [[ .zinit_lstupd =~ ^# ]]
+ [[ .zinit_lstupd =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .zinit_lstupd'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .zinit_lstupd'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .zinit_lstupd'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .zinit_lstupd
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# zdharma/zshelldoc tool'\''s files'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# zdharma/zshelldoc tool'\''s files'
+ [[ -z # zdharma/zshelldoc tool's files ]]
+ [[ # zdharma/zshelldoc tool's files =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo zsdoc/data
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=zsdoc/data
+ [[ -z zsdoc/data ]]
+ [[ zsdoc/data =~ ^# ]]
+ [[ zsdoc/data =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: zsdoc/data'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: zsdoc/data'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: zsdoc/data'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: zsdoc/data
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# robbyrussell/oh-my-zsh/plugins/per-directory-history plugin'\''s files'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# robbyrussell/oh-my-zsh/plugins/per-directory-history plugin'\''s files'
+ [[ -z # robbyrussell/oh-my-zsh/plugins/per-directory-history plugin's files ]]
+ [[ # robbyrussell/oh-my-zsh/plugins/per-directory-history plugin's files =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# (when set-up to store the history in the local directory)'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# (when set-up to store the history in the local directory)'
+ [[ -z # (when set-up to store the history in the local directory) ]]
+ [[ # (when set-up to store the history in the local directory) =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo .directory_history
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=.directory_history
+ [[ -z .directory_history ]]
+ [[ .directory_history =~ ^# ]]
+ [[ .directory_history =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: .directory_history'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: .directory_history'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: .directory_history'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: .directory_history
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# MichaelAquilina/zsh-autoswitch-virtualenv plugin'\''s files'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# MichaelAquilina/zsh-autoswitch-virtualenv plugin'\''s files'
+ [[ -z # MichaelAquilina/zsh-autoswitch-virtualenv plugin's files ]]
+ [[ # MichaelAquilina/zsh-autoswitch-virtualenv plugin's files =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '# (for Zsh plugins using Python)'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# (for Zsh plugins using Python)'
+ [[ -z # (for Zsh plugins using Python) ]]
+ [[ # (for Zsh plugins using Python) =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Zunit tests'\'' output'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Zunit tests'\'' output'
+ [[ -z # Zunit tests' output ]]
+ [[ # Zunit tests' output =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo '/tests/_output/*'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='/tests/_output/*'
+ [[ -z /tests/_output/* ]]
+ [[ /tests/_output/* =~ ^# ]]
+ [[ /tests/_output/* =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: /tests/_output/*'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: /tests/_output/*'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: /tests/_output/*'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: /tests/_output/*
+ IFS=
+ read -r line
++ echo '!/tests/_output/.gitkeep'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='!/tests/_output/.gitkeep'
+ [[ -z !/tests/_output/.gitkeep ]]
+ [[ !/tests/_output/.gitkeep =~ ^# ]]
+ [[ !/tests/_output/.gitkeep =~ ^! ]]
+ pattern=/tests/_output/.gitkeep
+ gitignore_includes+=("$pattern")
+ log_message DEBUG1 'Parsed .gitignore include pattern: /tests/_output/.gitkeep'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore include pattern: /tests/_output/.gitkeep'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore include pattern: /tests/_output/.gitkeep'
genmd DEBUG1(20): Parsed .gitignore include pattern: /tests/_output/.gitkeep
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# End of https://www.toptal.com/developers/gitignore/api/zsh,visualstudiocode,ssh,pythonvanilla,python,pydev,pycharm+iml,pycharm+all,pycharm,macos,jekyll,fish'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# End of https://www.toptal.com/developers/gitignore/api/zsh,visualstudiocode,ssh,pythonvanilla,python,pydev,pycharm+iml,pycharm+all,pycharm,macos,jekyll,fish'
+ [[ -z # End of https://www.toptal.com/developers/gitignore/api/zsh,visualstudiocode,ssh,pythonvanilla,python,pydev,pycharm+iml,pycharm+all,pycharm,macos,jekyll,fish ]]
+ [[ # End of https://www.toptal.com/developers/gitignore/api/zsh,visualstudiocode,ssh,pythonvanilla,python,pydev,pycharm+iml,pycharm+all,pycharm,macos,jekyll,fish =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo '# Custom rules (everything added below won'\''t be overriden by '\''Generate .gitignore File'\'' if you use '\''Update'\'' option)'
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line='# Custom rules (everything added below won'\''t be overriden by '\''Generate .gitignore File'\'' if you use '\''Update'\'' option)'
+ [[ -z # Custom rules (everything added below won't be overriden by 'Generate .gitignore File' if you use 'Update' option) ]]
+ [[ # Custom rules (everything added below won't be overriden by 'Generate .gitignore File' if you use 'Update' option) =~ ^# ]]
+ continue
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
++ echo tmp/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=tmp/
+ [[ -z tmp/ ]]
+ [[ tmp/ =~ ^# ]]
+ [[ tmp/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: tmp/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: tmp/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: tmp/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: tmp/
+ IFS=
+ read -r line
++ echo file_layout.txt
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=file_layout.txt
+ [[ -z file_layout.txt ]]
+ [[ file_layout.txt =~ ^# ]]
+ [[ file_layout.txt =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: file_layout.txt'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: file_layout.txt'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: file_layout.txt'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: file_layout.txt
+ IFS=
+ read -r line
++ echo Gemfile.lock
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=Gemfile.lock
+ [[ -z Gemfile.lock ]]
+ [[ Gemfile.lock =~ ^# ]]
+ [[ Gemfile.lock =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: Gemfile.lock'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: Gemfile.lock'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: Gemfile.lock'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: Gemfile.lock
+ IFS=
+ read -r line
++ echo Gemfile.bak
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=Gemfile.bak
+ [[ -z Gemfile.bak ]]
+ [[ Gemfile.bak =~ ^# ]]
+ [[ Gemfile.bak =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: Gemfile.bak'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: Gemfile.bak'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: Gemfile.bak'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: Gemfile.bak
+ IFS=
+ read -r line
++ echo _previews
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=_previews
+ [[ -z _previews ]]
+ [[ _previews =~ ^# ]]
+ [[ _previews =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: _previews'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: _previews'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: _previews'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: _previews
+ IFS=
+ read -r line
++ echo new_files/
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=new_files/
+ [[ -z new_files/ ]]
+ [[ new_files/ =~ ^# ]]
+ [[ new_files/ =~ ^! ]]
+ gitignore_exclude+=("$line")
+ log_message DEBUG1 'Parsed .gitignore exclude pattern: new_files/'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Parsed .gitignore exclude pattern: new_files/'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Parsed .gitignore exclude pattern: new_files/'
genmd DEBUG1(20): Parsed .gitignore exclude pattern: new_files/
+ IFS=
+ read -r line
++ echo ''
++ sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
+ line=
+ [[ -z '' ]]
+ continue
+ IFS=
+ read -r line
+ [[ -n '' ]]
+ remove_duplicates dir_excludes
+ local -n array_ref=dir_excludes
+ declare -A seen
+ unique=()
+ local unique
+ log_message DEBUG1 'Removing duplicates from array '\''dir_excludes'\'': '\''tmp .git .jekyll-cache _site utils new_files social-icons _posts'\'''
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Removing duplicates from array '\''dir_excludes'\'': '\''tmp .git .jekyll-cache _site utils new_files social-icons _posts'\'''
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Removing duplicates from array '\''dir_excludes'\'': '\''tmp .git .jekyll-cache _site utils new_files social-icons _posts'\'''
genmd DEBUG1(20): Removing duplicates from array 'dir_excludes': 'tmp .git .jekyll-cache _site utils new_files social-icons _posts'
+ for regex in "${array_ref[@]}"
+ [[ -n tmp .git .jekyll-cache _site utils new_files social-icons _posts ]]
+ log_message DEBUG2 'remove_duplicates input regex: tmp .git .jekyll-cache _site utils new_files social-icons _posts'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: tmp .git .jekyll-cache _site utils new_files social-icons _posts'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: tmp .git .jekyll-cache _site utils new_files social-icons _posts'
genmd DEBUG2(20): remove_duplicates input regex: tmp .git .jekyll-cache _site utils new_files social-icons _posts
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ log_message DEBUG1 'Finished removing duplicates from array '\''dir_excludes'\'' with total of 1: '\''tmp .git .jekyll-cache _site utils new_files social-icons _posts'\'''
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Finished removing duplicates from array '\''dir_excludes'\'' with total of 1: '\''tmp .git .jekyll-cache _site utils new_files social-icons _posts'\'''
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Finished removing duplicates from array '\''dir_excludes'\'' with total of 1: '\''tmp .git .jekyll-cache _site utils new_files social-icons _posts'\'''
genmd DEBUG1(20): Finished removing duplicates from array 'dir_excludes' with total of 1: 'tmp .git .jekyll-cache _site utils new_files social-icons _posts'
+ array_ref=("${unique[@]}")
+ remove_duplicates file_excludes
+ local -n array_ref=file_excludes
+ declare -A seen
+ unique=()
+ local unique
+ log_message DEBUG1 'Removing duplicates from array '\''file_excludes'\'': '\''*.svg .png'\'''
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Removing duplicates from array '\''file_excludes'\'': '\''*.svg .png'\'''
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Removing duplicates from array '\''file_excludes'\'': '\''*.svg .png'\'''
genmd DEBUG1(20): Removing duplicates from array 'file_excludes': '*.svg .png'
+ for regex in "${array_ref[@]}"
+ [[ -n *.svg .png ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.svg .png'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.svg .png'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.svg .png'
genmd DEBUG2(20): remove_duplicates input regex: *.svg .png
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ log_message DEBUG1 'Finished removing duplicates from array '\''file_excludes'\'' with total of 1: '\''*.svg .png'\'''
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Finished removing duplicates from array '\''file_excludes'\'' with total of 1: '\''*.svg .png'\'''
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Finished removing duplicates from array '\''file_excludes'\'' with total of 1: '\''*.svg .png'\'''
genmd DEBUG1(20): Finished removing duplicates from array 'file_excludes' with total of 1: '*.svg .png'
+ array_ref=("${unique[@]}")
+ remove_duplicates pattern_excludes
+ local -n array_ref=pattern_excludes
+ declare -A seen
+ unique=()
+ local unique
+ log_message DEBUG1 'Removing duplicates from array '\''pattern_excludes'\'': '\'''\'''
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Removing duplicates from array '\''pattern_excludes'\'': '\'''\'''
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Removing duplicates from array '\''pattern_excludes'\'': '\'''\'''
genmd DEBUG1(20): Removing duplicates from array 'pattern_excludes': ''
+ log_message DEBUG1 'Finished removing duplicates from array '\''pattern_excludes'\'' with total of 0: '\'''\'''
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Finished removing duplicates from array '\''pattern_excludes'\'' with total of 0: '\'''\'''
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Finished removing duplicates from array '\''pattern_excludes'\'' with total of 0: '\'''\'''
genmd DEBUG1(20): Finished removing duplicates from array 'pattern_excludes' with total of 0: ''
+ array_ref=("${unique[@]}")
+ remove_duplicates gitignore_exclude
+ local -n array_ref=gitignore_exclude
+ declare -A seen
+ unique=()
+ local unique
+ log_message DEBUG1 'Removing duplicates from array '\''gitignore_exclude'\'': '\''fishd.* fish_history fish_variables config.local.fish _site/ .sass-cache/ .jekyll-cache/ .jekyll-metadata .bundle/ vendor/ .DS_Store .AppleDouble .LSOverride Icon ._* .DocumentRevisions-V100 .fseventsd .Spotlight-V100 .TemporaryItems .Trashes .VolumeIcon.icns .com.apple.timemachine.donotpresent .AppleDB .AppleDesktop Network Trash Folder Temporary Items .apdisk *.icloud .idea/**/workspace.xml .idea/**/tasks.xml .idea/**/usage.statistics.xml .idea/**/dictionaries .idea/**/shelf .idea/**/aws.xml .idea/**/contentModel.xml .idea/**/dataSources/ .idea/**/dataSources.ids .idea/**/dataSources.local.xml .idea/**/sqlDataSources.xml .idea/**/dynamic.xml .idea/**/uiDesigner.xml .idea/**/dbnavigator.xml .idea/**/gradle.xml .idea/**/libraries cmake-build-*/ .idea/**/mongoSettings.xml *.iws out/ .idea_modules/ atlassian-ide-plugin.xml .idea/replstate.xml .idea/sonarlint/ com_crashlytics_export_strings.xml crashlytics.properties crashlytics-build.properties fabric.properties .idea/httpRequests .idea/caches/build_file_checksums.ser .idea/**/sonarlint/ .idea/**/sonarIssues.xml .idea/**/markdown-navigator.xml .idea/**/markdown-navigator-enh.xml .idea/**/markdown-navigator/ .idea/$CACHE_FILE$ .idea/codestream.xml .idea/**/azureSettings.xml .idea/* *.iml modules.xml .idea/misc.xml *.ipr .pydevproject __pycache__/ *.py[cod] *$py.class *.so .Python build/ develop-eggs/ dist/ downloads/ eggs/ .eggs/ lib/ lib64/ parts/ sdist/ var/ wheels/ share/python-wheels/ *.egg-info/ .installed.cfg *.egg MANIFEST *.manifest *.spec pip-log.txt pip-delete-this-directory.txt htmlcov/ .tox/ .nox/ .coverage .coverage.* .cache nosetests.xml coverage.xml *.cover *.py,cover .hypothesis/ .pytest_cache/ cover/ *.mo *.pot *.log local_settings.py db.sqlite3 db.sqlite3-journal instance/ .webassets-cache .scrapy docs/_build/ .pybuilder/ target/ .ipynb_checkpoints profile_default/ ipython_config.py .pdm.toml __pypackages__/ celerybeat-schedule celerybeat.pid *.sage.py .env .venv env/ venv/ ENV/ env.bak/ venv.bak/ .spyderproject .spyproject .ropeproject /site .mypy_cache/ .dmypy.json dmypy.json .pyre/ .pytype/ cython_debug/ poetry.toml .ruff_cache/ pyrightconfig.json **/.ssh/id_* **/.ssh/*_id_* **/.ssh/known_hosts .vscode/* .vscode/settings.json .history/ *.vsix .history .ionide *.zwc *.zwc.old *zcompdump* .zsh_history .zsh_sessions .zcalc_history ._zinit .zinit_lstupd zsdoc/data .directory_history /tests/_output/* tmp/ file_layout.txt Gemfile.lock Gemfile.bak _previews new_files/'\'''
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Removing duplicates from array '\''gitignore_exclude'\'': '\''fishd.* fish_history fish_variables config.local.fish _site/ .sass-cache/ .jekyll-cache/ .jekyll-metadata .bundle/ vendor/ .DS_Store .AppleDouble .LSOverride Icon ._* .DocumentRevisions-V100 .fseventsd .Spotlight-V100 .TemporaryItems .Trashes .VolumeIcon.icns .com.apple.timemachine.donotpresent .AppleDB .AppleDesktop Network Trash Folder Temporary Items .apdisk *.icloud .idea/**/workspace.xml .idea/**/tasks.xml .idea/**/usage.statistics.xml .idea/**/dictionaries .idea/**/shelf .idea/**/aws.xml .idea/**/contentModel.xml .idea/**/dataSources/ .idea/**/dataSources.ids .idea/**/dataSources.local.xml .idea/**/sqlDataSources.xml .idea/**/dynamic.xml .idea/**/uiDesigner.xml .idea/**/dbnavigator.xml .idea/**/gradle.xml .idea/**/libraries cmake-build-*/ .idea/**/mongoSettings.xml *.iws out/ .idea_modules/ atlassian-ide-plugin.xml .idea/replstate.xml .idea/sonarlint/ com_crashlytics_export_strings.xml crashlytics.properties crashlytics-build.properties fabric.properties .idea/httpRequests .idea/caches/build_file_checksums.ser .idea/**/sonarlint/ .idea/**/sonarIssues.xml .idea/**/markdown-navigator.xml .idea/**/markdown-navigator-enh.xml .idea/**/markdown-navigator/ .idea/$CACHE_FILE$ .idea/codestream.xml .idea/**/azureSettings.xml .idea/* *.iml modules.xml .idea/misc.xml *.ipr .pydevproject __pycache__/ *.py[cod] *$py.class *.so .Python build/ develop-eggs/ dist/ downloads/ eggs/ .eggs/ lib/ lib64/ parts/ sdist/ var/ wheels/ share/python-wheels/ *.egg-info/ .installed.cfg *.egg MANIFEST *.manifest *.spec pip-log.txt pip-delete-this-directory.txt htmlcov/ .tox/ .nox/ .coverage .coverage.* .cache nosetests.xml coverage.xml *.cover *.py,cover .hypothesis/ .pytest_cache/ cover/ *.mo *.pot *.log local_settings.py db.sqlite3 db.sqlite3-journal instance/ .webassets-cache .scrapy docs/_build/ .pybuilder/ target/ .ipynb_checkpoints profile_default/ ipython_config.py .pdm.toml __pypackages__/ celerybeat-schedule celerybeat.pid *.sage.py .env .venv env/ venv/ ENV/ env.bak/ venv.bak/ .spyderproject .spyproject .ropeproject /site .mypy_cache/ .dmypy.json dmypy.json .pyre/ .pytype/ cython_debug/ poetry.toml .ruff_cache/ pyrightconfig.json **/.ssh/id_* **/.ssh/*_id_* **/.ssh/known_hosts .vscode/* .vscode/settings.json .history/ *.vsix .history .ionide *.zwc *.zwc.old *zcompdump* .zsh_history .zsh_sessions .zcalc_history ._zinit .zinit_lstupd zsdoc/data .directory_history /tests/_output/* tmp/ file_layout.txt Gemfile.lock Gemfile.bak _previews new_files/'\'''
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Removing duplicates from array '\''gitignore_exclude'\'': '\''fishd.* fish_history fish_variables config.local.fish _site/ .sass-cache/ .jekyll-cache/ .jekyll-metadata .bundle/ vendor/ .DS_Store .AppleDouble .LSOverride Icon ._* .DocumentRevisions-V100 .fseventsd .Spotlight-V100 .TemporaryItems .Trashes .VolumeIcon.icns .com.apple.timemachine.donotpresent .AppleDB .AppleDesktop Network Trash Folder Temporary Items .apdisk *.icloud .idea/**/workspace.xml .idea/**/tasks.xml .idea/**/usage.statistics.xml .idea/**/dictionaries .idea/**/shelf .idea/**/aws.xml .idea/**/contentModel.xml .idea/**/dataSources/ .idea/**/dataSources.ids .idea/**/dataSources.local.xml .idea/**/sqlDataSources.xml .idea/**/dynamic.xml .idea/**/uiDesigner.xml .idea/**/dbnavigator.xml .idea/**/gradle.xml .idea/**/libraries cmake-build-*/ .idea/**/mongoSettings.xml *.iws out/ .idea_modules/ atlassian-ide-plugin.xml .idea/replstate.xml .idea/sonarlint/ com_crashlytics_export_strings.xml crashlytics.properties crashlytics-build.properties fabric.properties .idea/httpRequests .idea/caches/build_file_checksums.ser .idea/**/sonarlint/ .idea/**/sonarIssues.xml .idea/**/markdown-navigator.xml .idea/**/markdown-navigator-enh.xml .idea/**/markdown-navigator/ .idea/$CACHE_FILE$ .idea/codestream.xml .idea/**/azureSettings.xml .idea/* *.iml modules.xml .idea/misc.xml *.ipr .pydevproject __pycache__/ *.py[cod] *$py.class *.so .Python build/ develop-eggs/ dist/ downloads/ eggs/ .eggs/ lib/ lib64/ parts/ sdist/ var/ wheels/ share/python-wheels/ *.egg-info/ .installed.cfg *.egg MANIFEST *.manifest *.spec pip-log.txt pip-delete-this-directory.txt htmlcov/ .tox/ .nox/ .coverage .coverage.* .cache nosetests.xml coverage.xml *.cover *.py,cover .hypothesis/ .pytest_cache/ cover/ *.mo *.pot *.log local_settings.py db.sqlite3 db.sqlite3-journal instance/ .webassets-cache .scrapy docs/_build/ .pybuilder/ target/ .ipynb_checkpoints profile_default/ ipython_config.py .pdm.toml __pypackages__/ celerybeat-schedule celerybeat.pid *.sage.py .env .venv env/ venv/ ENV/ env.bak/ venv.bak/ .spyderproject .spyproject .ropeproject /site .mypy_cache/ .dmypy.json dmypy.json .pyre/ .pytype/ cython_debug/ poetry.toml .ruff_cache/ pyrightconfig.json **/.ssh/id_* **/.ssh/*_id_* **/.ssh/known_hosts .vscode/* .vscode/settings.json .history/ *.vsix .history .ionide *.zwc *.zwc.old *zcompdump* .zsh_history .zsh_sessions .zcalc_history ._zinit .zinit_lstupd zsdoc/data .directory_history /tests/_output/* tmp/ file_layout.txt Gemfile.lock Gemfile.bak _previews new_files/'\'''
genmd DEBUG1(20): Removing duplicates from array 'gitignore_exclude': 'fishd.* fish_history fish_variables config.local.fish _site/ .sass-cache/ .jekyll-cache/ .jekyll-metadata .bundle/ vendor/ .DS_Store .AppleDouble .LSOverride Icon ._* .DocumentRevisions-V100 .fseventsd .Spotlight-V100 .TemporaryItems .Trashes .VolumeIcon.icns .com.apple.timemachine.donotpresent .AppleDB .AppleDesktop Network Trash Folder Temporary Items .apdisk *.icloud .idea/**/workspace.xml .idea/**/tasks.xml .idea/**/usage.statistics.xml .idea/**/dictionaries .idea/**/shelf .idea/**/aws.xml .idea/**/contentModel.xml .idea/**/dataSources/ .idea/**/dataSources.ids .idea/**/dataSources.local.xml .idea/**/sqlDataSources.xml .idea/**/dynamic.xml .idea/**/uiDesigner.xml .idea/**/dbnavigator.xml .idea/**/gradle.xml .idea/**/libraries cmake-build-*/ .idea/**/mongoSettings.xml *.iws out/ .idea_modules/ atlassian-ide-plugin.xml .idea/replstate.xml .idea/sonarlint/ com_crashlytics_export_strings.xml crashlytics.properties crashlytics-build.properties fabric.properties .idea/httpRequests .idea/caches/build_file_checksums.ser .idea/**/sonarlint/ .idea/**/sonarIssues.xml .idea/**/markdown-navigator.xml .idea/**/markdown-navigator-enh.xml .idea/**/markdown-navigator/ .idea/$CACHE_FILE$ .idea/codestream.xml .idea/**/azureSettings.xml .idea/* *.iml modules.xml .idea/misc.xml *.ipr .pydevproject __pycache__/ *.py[cod] *$py.class *.so .Python build/ develop-eggs/ dist/ downloads/ eggs/ .eggs/ lib/ lib64/ parts/ sdist/ var/ wheels/ share/python-wheels/ *.egg-info/ .installed.cfg *.egg MANIFEST *.manifest *.spec pip-log.txt pip-delete-this-directory.txt htmlcov/ .tox/ .nox/ .coverage .coverage.* .cache nosetests.xml coverage.xml *.cover *.py,cover .hypothesis/ .pytest_cache/ cover/ *.mo *.pot *.log local_settings.py db.sqlite3 db.sqlite3-journal instance/ .webassets-cache .scrapy docs/_build/ .pybuilder/ target/ .ipynb_checkpoints profile_default/ ipython_config.py .pdm.toml __pypackages__/ celerybeat-schedule celerybeat.pid *.sage.py .env .venv env/ venv/ ENV/ env.bak/ venv.bak/ .spyderproject .spyproject .ropeproject /site .mypy_cache/ .dmypy.json dmypy.json .pyre/ .pytype/ cython_debug/ poetry.toml .ruff_cache/ pyrightconfig.json **/.ssh/id_* **/.ssh/*_id_* **/.ssh/known_hosts .vscode/* .vscode/settings.json .history/ *.vsix .history .ionide *.zwc *.zwc.old *zcompdump* .zsh_history .zsh_sessions .zcalc_history ._zinit .zinit_lstupd zsdoc/data .directory_history /tests/_output/* tmp/ file_layout.txt Gemfile.lock Gemfile.bak _previews new_files/'
+ for regex in "${array_ref[@]}"
+ [[ -n fishd.* ]]
+ log_message DEBUG2 'remove_duplicates input regex: fishd.*'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: fishd.*'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: fishd.*'
genmd DEBUG2(20): remove_duplicates input regex: fishd.*
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n fish_history ]]
+ log_message DEBUG2 'remove_duplicates input regex: fish_history'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: fish_history'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: fish_history'
genmd DEBUG2(20): remove_duplicates input regex: fish_history
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n fish_variables ]]
+ log_message DEBUG2 'remove_duplicates input regex: fish_variables'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: fish_variables'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: fish_variables'
genmd DEBUG2(20): remove_duplicates input regex: fish_variables
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n config.local.fish ]]
+ log_message DEBUG2 'remove_duplicates input regex: config.local.fish'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: config.local.fish'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: config.local.fish'
genmd DEBUG2(20): remove_duplicates input regex: config.local.fish
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n _site/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: _site/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: _site/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: _site/'
genmd DEBUG2(20): remove_duplicates input regex: _site/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .sass-cache/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .sass-cache/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .sass-cache/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .sass-cache/'
genmd DEBUG2(20): remove_duplicates input regex: .sass-cache/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .jekyll-cache/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .jekyll-cache/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .jekyll-cache/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .jekyll-cache/'
genmd DEBUG2(20): remove_duplicates input regex: .jekyll-cache/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .jekyll-metadata ]]
+ log_message DEBUG2 'remove_duplicates input regex: .jekyll-metadata'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .jekyll-metadata'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .jekyll-metadata'
genmd DEBUG2(20): remove_duplicates input regex: .jekyll-metadata
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .bundle/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .bundle/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .bundle/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .bundle/'
genmd DEBUG2(20): remove_duplicates input regex: .bundle/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n vendor/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: vendor/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: vendor/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: vendor/'
genmd DEBUG2(20): remove_duplicates input regex: vendor/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .DS_Store ]]
+ log_message DEBUG2 'remove_duplicates input regex: .DS_Store'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .DS_Store'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .DS_Store'
genmd DEBUG2(20): remove_duplicates input regex: .DS_Store
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .AppleDouble ]]
+ log_message DEBUG2 'remove_duplicates input regex: .AppleDouble'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .AppleDouble'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .AppleDouble'
genmd DEBUG2(20): remove_duplicates input regex: .AppleDouble
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .LSOverride ]]
+ log_message DEBUG2 'remove_duplicates input regex: .LSOverride'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .LSOverride'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .LSOverride'
genmd DEBUG2(20): remove_duplicates input regex: .LSOverride
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n Icon ]]
+ log_message DEBUG2 'remove_duplicates input regex: Icon'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: Icon'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: Icon'
genmd DEBUG2(20): remove_duplicates input regex: Icon
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n ._* ]]
+ log_message DEBUG2 'remove_duplicates input regex: ._*'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: ._*'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: ._*'
genmd DEBUG2(20): remove_duplicates input regex: ._*
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .DocumentRevisions-V100 ]]
+ log_message DEBUG2 'remove_duplicates input regex: .DocumentRevisions-V100'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .DocumentRevisions-V100'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .DocumentRevisions-V100'
genmd DEBUG2(20): remove_duplicates input regex: .DocumentRevisions-V100
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .fseventsd ]]
+ log_message DEBUG2 'remove_duplicates input regex: .fseventsd'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .fseventsd'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .fseventsd'
genmd DEBUG2(20): remove_duplicates input regex: .fseventsd
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .Spotlight-V100 ]]
+ log_message DEBUG2 'remove_duplicates input regex: .Spotlight-V100'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .Spotlight-V100'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .Spotlight-V100'
genmd DEBUG2(20): remove_duplicates input regex: .Spotlight-V100
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .TemporaryItems ]]
+ log_message DEBUG2 'remove_duplicates input regex: .TemporaryItems'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .TemporaryItems'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .TemporaryItems'
genmd DEBUG2(20): remove_duplicates input regex: .TemporaryItems
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .Trashes ]]
+ log_message DEBUG2 'remove_duplicates input regex: .Trashes'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .Trashes'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .Trashes'
genmd DEBUG2(20): remove_duplicates input regex: .Trashes
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .VolumeIcon.icns ]]
+ log_message DEBUG2 'remove_duplicates input regex: .VolumeIcon.icns'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .VolumeIcon.icns'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .VolumeIcon.icns'
genmd DEBUG2(20): remove_duplicates input regex: .VolumeIcon.icns
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .com.apple.timemachine.donotpresent ]]
+ log_message DEBUG2 'remove_duplicates input regex: .com.apple.timemachine.donotpresent'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .com.apple.timemachine.donotpresent'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .com.apple.timemachine.donotpresent'
genmd DEBUG2(20): remove_duplicates input regex: .com.apple.timemachine.donotpresent
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .AppleDB ]]
+ log_message DEBUG2 'remove_duplicates input regex: .AppleDB'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .AppleDB'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .AppleDB'
genmd DEBUG2(20): remove_duplicates input regex: .AppleDB
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .AppleDesktop ]]
+ log_message DEBUG2 'remove_duplicates input regex: .AppleDesktop'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .AppleDesktop'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .AppleDesktop'
genmd DEBUG2(20): remove_duplicates input regex: .AppleDesktop
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n Network Trash Folder ]]
+ log_message DEBUG2 'remove_duplicates input regex: Network Trash Folder'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: Network Trash Folder'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: Network Trash Folder'
genmd DEBUG2(20): remove_duplicates input regex: Network Trash Folder
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n Temporary Items ]]
+ log_message DEBUG2 'remove_duplicates input regex: Temporary Items'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: Temporary Items'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: Temporary Items'
genmd DEBUG2(20): remove_duplicates input regex: Temporary Items
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .apdisk ]]
+ log_message DEBUG2 'remove_duplicates input regex: .apdisk'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .apdisk'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .apdisk'
genmd DEBUG2(20): remove_duplicates input regex: .apdisk
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.icloud ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.icloud'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.icloud'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.icloud'
genmd DEBUG2(20): remove_duplicates input regex: *.icloud
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/workspace.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/workspace.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/workspace.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/workspace.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/workspace.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/tasks.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/tasks.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/tasks.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/tasks.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/tasks.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/usage.statistics.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/usage.statistics.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/usage.statistics.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/usage.statistics.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/usage.statistics.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/dictionaries ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/dictionaries'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/dictionaries'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/dictionaries'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/dictionaries
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/shelf ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/shelf'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/shelf'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/shelf'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/shelf
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/aws.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/aws.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/aws.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/aws.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/aws.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/contentModel.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/contentModel.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/contentModel.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/contentModel.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/contentModel.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/dataSources/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/dataSources/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/dataSources/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/dataSources/'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/dataSources/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/dataSources.ids ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/dataSources.ids'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/dataSources.ids'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/dataSources.ids'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/dataSources.ids
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/dataSources.local.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/dataSources.local.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/dataSources.local.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/dataSources.local.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/dataSources.local.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/sqlDataSources.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/sqlDataSources.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/sqlDataSources.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/sqlDataSources.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/sqlDataSources.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/dynamic.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/dynamic.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/dynamic.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/dynamic.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/dynamic.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/uiDesigner.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/uiDesigner.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/uiDesigner.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/uiDesigner.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/uiDesigner.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/dbnavigator.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/dbnavigator.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/dbnavigator.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/dbnavigator.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/dbnavigator.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/gradle.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/gradle.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/gradle.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/gradle.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/gradle.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/libraries ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/libraries'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/libraries'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/libraries'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/libraries
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n cmake-build-*/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: cmake-build-*/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: cmake-build-*/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: cmake-build-*/'
genmd DEBUG2(20): remove_duplicates input regex: cmake-build-*/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/mongoSettings.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/mongoSettings.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/mongoSettings.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/mongoSettings.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/mongoSettings.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.iws ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.iws'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.iws'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.iws'
genmd DEBUG2(20): remove_duplicates input regex: *.iws
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n out/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: out/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: out/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: out/'
genmd DEBUG2(20): remove_duplicates input regex: out/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea_modules/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea_modules/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea_modules/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea_modules/'
genmd DEBUG2(20): remove_duplicates input regex: .idea_modules/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n atlassian-ide-plugin.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: atlassian-ide-plugin.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: atlassian-ide-plugin.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: atlassian-ide-plugin.xml'
genmd DEBUG2(20): remove_duplicates input regex: atlassian-ide-plugin.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/replstate.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/replstate.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/replstate.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/replstate.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/replstate.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/sonarlint/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/sonarlint/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/sonarlint/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/sonarlint/'
genmd DEBUG2(20): remove_duplicates input regex: .idea/sonarlint/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n com_crashlytics_export_strings.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: com_crashlytics_export_strings.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: com_crashlytics_export_strings.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: com_crashlytics_export_strings.xml'
genmd DEBUG2(20): remove_duplicates input regex: com_crashlytics_export_strings.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n crashlytics.properties ]]
+ log_message DEBUG2 'remove_duplicates input regex: crashlytics.properties'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: crashlytics.properties'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: crashlytics.properties'
genmd DEBUG2(20): remove_duplicates input regex: crashlytics.properties
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n crashlytics-build.properties ]]
+ log_message DEBUG2 'remove_duplicates input regex: crashlytics-build.properties'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: crashlytics-build.properties'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: crashlytics-build.properties'
genmd DEBUG2(20): remove_duplicates input regex: crashlytics-build.properties
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n fabric.properties ]]
+ log_message DEBUG2 'remove_duplicates input regex: fabric.properties'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: fabric.properties'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: fabric.properties'
genmd DEBUG2(20): remove_duplicates input regex: fabric.properties
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/httpRequests ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/httpRequests'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/httpRequests'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/httpRequests'
genmd DEBUG2(20): remove_duplicates input regex: .idea/httpRequests
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/caches/build_file_checksums.ser ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/caches/build_file_checksums.ser'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/caches/build_file_checksums.ser'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/caches/build_file_checksums.ser'
genmd DEBUG2(20): remove_duplicates input regex: .idea/caches/build_file_checksums.ser
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/sonarlint/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/sonarlint/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/sonarlint/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/sonarlint/'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/sonarlint/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/sonarIssues.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/sonarIssues.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/sonarIssues.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/sonarIssues.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/sonarIssues.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/markdown-navigator.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/markdown-navigator.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/markdown-navigator.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/markdown-navigator.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/markdown-navigator.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/markdown-navigator-enh.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/markdown-navigator-enh.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/markdown-navigator-enh.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/markdown-navigator-enh.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/markdown-navigator-enh.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/markdown-navigator/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/markdown-navigator/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/markdown-navigator/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/markdown-navigator/'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/markdown-navigator/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/$CACHE_FILE$ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/$CACHE_FILE$'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/$CACHE_FILE$'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/$CACHE_FILE$'
genmd DEBUG2(20): remove_duplicates input regex: .idea/$CACHE_FILE$
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/codestream.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/codestream.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/codestream.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/codestream.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/codestream.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/**/azureSettings.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/**/azureSettings.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/**/azureSettings.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/**/azureSettings.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/**/azureSettings.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/* ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/*'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/*'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/*'
genmd DEBUG2(20): remove_duplicates input regex: .idea/*
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.iml ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.iml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.iml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.iml'
genmd DEBUG2(20): remove_duplicates input regex: *.iml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n modules.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: modules.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: modules.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: modules.xml'
genmd DEBUG2(20): remove_duplicates input regex: modules.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .idea/misc.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .idea/misc.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .idea/misc.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .idea/misc.xml'
genmd DEBUG2(20): remove_duplicates input regex: .idea/misc.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.ipr ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.ipr'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.ipr'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.ipr'
genmd DEBUG2(20): remove_duplicates input regex: *.ipr
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .pydevproject ]]
+ log_message DEBUG2 'remove_duplicates input regex: .pydevproject'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .pydevproject'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .pydevproject'
genmd DEBUG2(20): remove_duplicates input regex: .pydevproject
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n __pycache__/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: __pycache__/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: __pycache__/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: __pycache__/'
genmd DEBUG2(20): remove_duplicates input regex: __pycache__/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.py[cod] ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.py[cod]'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.py[cod]'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.py[cod]'
genmd DEBUG2(20): remove_duplicates input regex: *.py[cod]
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *$py.class ]]
+ log_message DEBUG2 'remove_duplicates input regex: *$py.class'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *$py.class'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *$py.class'
genmd DEBUG2(20): remove_duplicates input regex: *$py.class
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.so ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.so'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.so'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.so'
genmd DEBUG2(20): remove_duplicates input regex: *.so
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .Python ]]
+ log_message DEBUG2 'remove_duplicates input regex: .Python'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .Python'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .Python'
genmd DEBUG2(20): remove_duplicates input regex: .Python
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n build/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: build/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: build/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: build/'
genmd DEBUG2(20): remove_duplicates input regex: build/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n develop-eggs/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: develop-eggs/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: develop-eggs/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: develop-eggs/'
genmd DEBUG2(20): remove_duplicates input regex: develop-eggs/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n dist/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: dist/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: dist/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: dist/'
genmd DEBUG2(20): remove_duplicates input regex: dist/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n downloads/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: downloads/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: downloads/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: downloads/'
genmd DEBUG2(20): remove_duplicates input regex: downloads/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n eggs/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: eggs/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: eggs/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: eggs/'
genmd DEBUG2(20): remove_duplicates input regex: eggs/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .eggs/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .eggs/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .eggs/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .eggs/'
genmd DEBUG2(20): remove_duplicates input regex: .eggs/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n lib/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: lib/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: lib/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: lib/'
genmd DEBUG2(20): remove_duplicates input regex: lib/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n lib64/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: lib64/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: lib64/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: lib64/'
genmd DEBUG2(20): remove_duplicates input regex: lib64/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n parts/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: parts/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: parts/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: parts/'
genmd DEBUG2(20): remove_duplicates input regex: parts/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n sdist/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: sdist/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: sdist/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: sdist/'
genmd DEBUG2(20): remove_duplicates input regex: sdist/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n var/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: var/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: var/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: var/'
genmd DEBUG2(20): remove_duplicates input regex: var/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n wheels/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: wheels/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: wheels/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: wheels/'
genmd DEBUG2(20): remove_duplicates input regex: wheels/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n share/python-wheels/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: share/python-wheels/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: share/python-wheels/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: share/python-wheels/'
genmd DEBUG2(20): remove_duplicates input regex: share/python-wheels/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.egg-info/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.egg-info/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.egg-info/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.egg-info/'
genmd DEBUG2(20): remove_duplicates input regex: *.egg-info/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .installed.cfg ]]
+ log_message DEBUG2 'remove_duplicates input regex: .installed.cfg'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .installed.cfg'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .installed.cfg'
genmd DEBUG2(20): remove_duplicates input regex: .installed.cfg
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.egg ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.egg'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.egg'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.egg'
genmd DEBUG2(20): remove_duplicates input regex: *.egg
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n MANIFEST ]]
+ log_message DEBUG2 'remove_duplicates input regex: MANIFEST'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: MANIFEST'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: MANIFEST'
genmd DEBUG2(20): remove_duplicates input regex: MANIFEST
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.manifest ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.manifest'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.manifest'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.manifest'
genmd DEBUG2(20): remove_duplicates input regex: *.manifest
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.spec ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.spec'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.spec'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.spec'
genmd DEBUG2(20): remove_duplicates input regex: *.spec
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n pip-log.txt ]]
+ log_message DEBUG2 'remove_duplicates input regex: pip-log.txt'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: pip-log.txt'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: pip-log.txt'
genmd DEBUG2(20): remove_duplicates input regex: pip-log.txt
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n pip-delete-this-directory.txt ]]
+ log_message DEBUG2 'remove_duplicates input regex: pip-delete-this-directory.txt'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: pip-delete-this-directory.txt'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: pip-delete-this-directory.txt'
genmd DEBUG2(20): remove_duplicates input regex: pip-delete-this-directory.txt
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n htmlcov/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: htmlcov/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: htmlcov/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: htmlcov/'
genmd DEBUG2(20): remove_duplicates input regex: htmlcov/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .tox/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .tox/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .tox/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .tox/'
genmd DEBUG2(20): remove_duplicates input regex: .tox/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .nox/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .nox/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .nox/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .nox/'
genmd DEBUG2(20): remove_duplicates input regex: .nox/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .coverage ]]
+ log_message DEBUG2 'remove_duplicates input regex: .coverage'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .coverage'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .coverage'
genmd DEBUG2(20): remove_duplicates input regex: .coverage
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .coverage.* ]]
+ log_message DEBUG2 'remove_duplicates input regex: .coverage.*'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .coverage.*'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .coverage.*'
genmd DEBUG2(20): remove_duplicates input regex: .coverage.*
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .cache ]]
+ log_message DEBUG2 'remove_duplicates input regex: .cache'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .cache'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .cache'
genmd DEBUG2(20): remove_duplicates input regex: .cache
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n nosetests.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: nosetests.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: nosetests.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: nosetests.xml'
genmd DEBUG2(20): remove_duplicates input regex: nosetests.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n coverage.xml ]]
+ log_message DEBUG2 'remove_duplicates input regex: coverage.xml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: coverage.xml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: coverage.xml'
genmd DEBUG2(20): remove_duplicates input regex: coverage.xml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.cover ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.cover'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.cover'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.cover'
genmd DEBUG2(20): remove_duplicates input regex: *.cover
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.py,cover ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.py,cover'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.py,cover'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.py,cover'
genmd DEBUG2(20): remove_duplicates input regex: *.py,cover
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .hypothesis/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .hypothesis/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .hypothesis/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .hypothesis/'
genmd DEBUG2(20): remove_duplicates input regex: .hypothesis/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .pytest_cache/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .pytest_cache/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .pytest_cache/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .pytest_cache/'
genmd DEBUG2(20): remove_duplicates input regex: .pytest_cache/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n cover/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: cover/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: cover/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: cover/'
genmd DEBUG2(20): remove_duplicates input regex: cover/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.mo ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.mo'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.mo'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.mo'
genmd DEBUG2(20): remove_duplicates input regex: *.mo
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.pot ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.pot'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.pot'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.pot'
genmd DEBUG2(20): remove_duplicates input regex: *.pot
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.log ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.log'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.log'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.log'
genmd DEBUG2(20): remove_duplicates input regex: *.log
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n local_settings.py ]]
+ log_message DEBUG2 'remove_duplicates input regex: local_settings.py'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: local_settings.py'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: local_settings.py'
genmd DEBUG2(20): remove_duplicates input regex: local_settings.py
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n db.sqlite3 ]]
+ log_message DEBUG2 'remove_duplicates input regex: db.sqlite3'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: db.sqlite3'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: db.sqlite3'
genmd DEBUG2(20): remove_duplicates input regex: db.sqlite3
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n db.sqlite3-journal ]]
+ log_message DEBUG2 'remove_duplicates input regex: db.sqlite3-journal'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: db.sqlite3-journal'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: db.sqlite3-journal'
genmd DEBUG2(20): remove_duplicates input regex: db.sqlite3-journal
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n instance/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: instance/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: instance/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: instance/'
genmd DEBUG2(20): remove_duplicates input regex: instance/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .webassets-cache ]]
+ log_message DEBUG2 'remove_duplicates input regex: .webassets-cache'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .webassets-cache'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .webassets-cache'
genmd DEBUG2(20): remove_duplicates input regex: .webassets-cache
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .scrapy ]]
+ log_message DEBUG2 'remove_duplicates input regex: .scrapy'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .scrapy'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .scrapy'
genmd DEBUG2(20): remove_duplicates input regex: .scrapy
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n docs/_build/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: docs/_build/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: docs/_build/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: docs/_build/'
genmd DEBUG2(20): remove_duplicates input regex: docs/_build/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .pybuilder/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .pybuilder/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .pybuilder/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .pybuilder/'
genmd DEBUG2(20): remove_duplicates input regex: .pybuilder/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n target/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: target/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: target/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: target/'
genmd DEBUG2(20): remove_duplicates input regex: target/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .ipynb_checkpoints ]]
+ log_message DEBUG2 'remove_duplicates input regex: .ipynb_checkpoints'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .ipynb_checkpoints'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .ipynb_checkpoints'
genmd DEBUG2(20): remove_duplicates input regex: .ipynb_checkpoints
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n profile_default/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: profile_default/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: profile_default/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: profile_default/'
genmd DEBUG2(20): remove_duplicates input regex: profile_default/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n ipython_config.py ]]
+ log_message DEBUG2 'remove_duplicates input regex: ipython_config.py'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: ipython_config.py'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: ipython_config.py'
genmd DEBUG2(20): remove_duplicates input regex: ipython_config.py
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .pdm.toml ]]
+ log_message DEBUG2 'remove_duplicates input regex: .pdm.toml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .pdm.toml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .pdm.toml'
genmd DEBUG2(20): remove_duplicates input regex: .pdm.toml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n __pypackages__/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: __pypackages__/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: __pypackages__/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: __pypackages__/'
genmd DEBUG2(20): remove_duplicates input regex: __pypackages__/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n celerybeat-schedule ]]
+ log_message DEBUG2 'remove_duplicates input regex: celerybeat-schedule'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: celerybeat-schedule'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: celerybeat-schedule'
genmd DEBUG2(20): remove_duplicates input regex: celerybeat-schedule
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n celerybeat.pid ]]
+ log_message DEBUG2 'remove_duplicates input regex: celerybeat.pid'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: celerybeat.pid'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: celerybeat.pid'
genmd DEBUG2(20): remove_duplicates input regex: celerybeat.pid
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.sage.py ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.sage.py'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.sage.py'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.sage.py'
genmd DEBUG2(20): remove_duplicates input regex: *.sage.py
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .env ]]
+ log_message DEBUG2 'remove_duplicates input regex: .env'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .env'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .env'
genmd DEBUG2(20): remove_duplicates input regex: .env
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .venv ]]
+ log_message DEBUG2 'remove_duplicates input regex: .venv'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .venv'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .venv'
genmd DEBUG2(20): remove_duplicates input regex: .venv
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n env/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: env/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: env/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: env/'
genmd DEBUG2(20): remove_duplicates input regex: env/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n venv/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: venv/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: venv/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: venv/'
genmd DEBUG2(20): remove_duplicates input regex: venv/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n ENV/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: ENV/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: ENV/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: ENV/'
genmd DEBUG2(20): remove_duplicates input regex: ENV/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n env.bak/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: env.bak/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: env.bak/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: env.bak/'
genmd DEBUG2(20): remove_duplicates input regex: env.bak/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n venv.bak/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: venv.bak/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: venv.bak/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: venv.bak/'
genmd DEBUG2(20): remove_duplicates input regex: venv.bak/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .spyderproject ]]
+ log_message DEBUG2 'remove_duplicates input regex: .spyderproject'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .spyderproject'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .spyderproject'
genmd DEBUG2(20): remove_duplicates input regex: .spyderproject
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .spyproject ]]
+ log_message DEBUG2 'remove_duplicates input regex: .spyproject'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .spyproject'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .spyproject'
genmd DEBUG2(20): remove_duplicates input regex: .spyproject
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .ropeproject ]]
+ log_message DEBUG2 'remove_duplicates input regex: .ropeproject'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .ropeproject'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .ropeproject'
genmd DEBUG2(20): remove_duplicates input regex: .ropeproject
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n /site ]]
+ log_message DEBUG2 'remove_duplicates input regex: /site'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: /site'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: /site'
genmd DEBUG2(20): remove_duplicates input regex: /site
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .mypy_cache/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .mypy_cache/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .mypy_cache/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .mypy_cache/'
genmd DEBUG2(20): remove_duplicates input regex: .mypy_cache/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .dmypy.json ]]
+ log_message DEBUG2 'remove_duplicates input regex: .dmypy.json'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .dmypy.json'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .dmypy.json'
genmd DEBUG2(20): remove_duplicates input regex: .dmypy.json
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n dmypy.json ]]
+ log_message DEBUG2 'remove_duplicates input regex: dmypy.json'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: dmypy.json'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: dmypy.json'
genmd DEBUG2(20): remove_duplicates input regex: dmypy.json
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .pyre/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .pyre/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .pyre/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .pyre/'
genmd DEBUG2(20): remove_duplicates input regex: .pyre/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .pytype/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .pytype/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .pytype/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .pytype/'
genmd DEBUG2(20): remove_duplicates input regex: .pytype/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n cython_debug/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: cython_debug/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: cython_debug/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: cython_debug/'
genmd DEBUG2(20): remove_duplicates input regex: cython_debug/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n poetry.toml ]]
+ log_message DEBUG2 'remove_duplicates input regex: poetry.toml'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: poetry.toml'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: poetry.toml'
genmd DEBUG2(20): remove_duplicates input regex: poetry.toml
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .ruff_cache/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .ruff_cache/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .ruff_cache/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .ruff_cache/'
genmd DEBUG2(20): remove_duplicates input regex: .ruff_cache/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n pyrightconfig.json ]]
+ log_message DEBUG2 'remove_duplicates input regex: pyrightconfig.json'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: pyrightconfig.json'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: pyrightconfig.json'
genmd DEBUG2(20): remove_duplicates input regex: pyrightconfig.json
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n **/.ssh/id_* ]]
+ log_message DEBUG2 'remove_duplicates input regex: **/.ssh/id_*'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: **/.ssh/id_*'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: **/.ssh/id_*'
genmd DEBUG2(20): remove_duplicates input regex: **/.ssh/id_*
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n **/.ssh/*_id_* ]]
+ log_message DEBUG2 'remove_duplicates input regex: **/.ssh/*_id_*'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: **/.ssh/*_id_*'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: **/.ssh/*_id_*'
genmd DEBUG2(20): remove_duplicates input regex: **/.ssh/*_id_*
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n **/.ssh/known_hosts ]]
+ log_message DEBUG2 'remove_duplicates input regex: **/.ssh/known_hosts'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: **/.ssh/known_hosts'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: **/.ssh/known_hosts'
genmd DEBUG2(20): remove_duplicates input regex: **/.ssh/known_hosts
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .vscode/* ]]
+ log_message DEBUG2 'remove_duplicates input regex: .vscode/*'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .vscode/*'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .vscode/*'
genmd DEBUG2(20): remove_duplicates input regex: .vscode/*
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .vscode/settings.json ]]
+ log_message DEBUG2 'remove_duplicates input regex: .vscode/settings.json'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .vscode/settings.json'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .vscode/settings.json'
genmd DEBUG2(20): remove_duplicates input regex: .vscode/settings.json
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .history/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: .history/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .history/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .history/'
genmd DEBUG2(20): remove_duplicates input regex: .history/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.vsix ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.vsix'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.vsix'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.vsix'
genmd DEBUG2(20): remove_duplicates input regex: *.vsix
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .history ]]
+ log_message DEBUG2 'remove_duplicates input regex: .history'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .history'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .history'
genmd DEBUG2(20): remove_duplicates input regex: .history
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .ionide ]]
+ log_message DEBUG2 'remove_duplicates input regex: .ionide'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .ionide'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .ionide'
genmd DEBUG2(20): remove_duplicates input regex: .ionide
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.zwc ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.zwc'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.zwc'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.zwc'
genmd DEBUG2(20): remove_duplicates input regex: *.zwc
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *.zwc.old ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.zwc.old'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.zwc.old'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.zwc.old'
genmd DEBUG2(20): remove_duplicates input regex: *.zwc.old
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n *zcompdump* ]]
+ log_message DEBUG2 'remove_duplicates input regex: *zcompdump*'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *zcompdump*'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *zcompdump*'
genmd DEBUG2(20): remove_duplicates input regex: *zcompdump*
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .zsh_history ]]
+ log_message DEBUG2 'remove_duplicates input regex: .zsh_history'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .zsh_history'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .zsh_history'
genmd DEBUG2(20): remove_duplicates input regex: .zsh_history
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .zsh_sessions ]]
+ log_message DEBUG2 'remove_duplicates input regex: .zsh_sessions'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .zsh_sessions'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .zsh_sessions'
genmd DEBUG2(20): remove_duplicates input regex: .zsh_sessions
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .zcalc_history ]]
+ log_message DEBUG2 'remove_duplicates input regex: .zcalc_history'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .zcalc_history'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .zcalc_history'
genmd DEBUG2(20): remove_duplicates input regex: .zcalc_history
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n ._zinit ]]
+ log_message DEBUG2 'remove_duplicates input regex: ._zinit'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: ._zinit'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: ._zinit'
genmd DEBUG2(20): remove_duplicates input regex: ._zinit
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .zinit_lstupd ]]
+ log_message DEBUG2 'remove_duplicates input regex: .zinit_lstupd'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .zinit_lstupd'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .zinit_lstupd'
genmd DEBUG2(20): remove_duplicates input regex: .zinit_lstupd
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n zsdoc/data ]]
+ log_message DEBUG2 'remove_duplicates input regex: zsdoc/data'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: zsdoc/data'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: zsdoc/data'
genmd DEBUG2(20): remove_duplicates input regex: zsdoc/data
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n .directory_history ]]
+ log_message DEBUG2 'remove_duplicates input regex: .directory_history'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: .directory_history'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: .directory_history'
genmd DEBUG2(20): remove_duplicates input regex: .directory_history
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n /tests/_output/* ]]
+ log_message DEBUG2 'remove_duplicates input regex: /tests/_output/*'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: /tests/_output/*'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: /tests/_output/*'
genmd DEBUG2(20): remove_duplicates input regex: /tests/_output/*
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n tmp/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: tmp/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: tmp/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: tmp/'
genmd DEBUG2(20): remove_duplicates input regex: tmp/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n file_layout.txt ]]
+ log_message DEBUG2 'remove_duplicates input regex: file_layout.txt'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: file_layout.txt'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: file_layout.txt'
genmd DEBUG2(20): remove_duplicates input regex: file_layout.txt
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n Gemfile.lock ]]
+ log_message DEBUG2 'remove_duplicates input regex: Gemfile.lock'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: Gemfile.lock'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: Gemfile.lock'
genmd DEBUG2(20): remove_duplicates input regex: Gemfile.lock
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n Gemfile.bak ]]
+ log_message DEBUG2 'remove_duplicates input regex: Gemfile.bak'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: Gemfile.bak'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: Gemfile.bak'
genmd DEBUG2(20): remove_duplicates input regex: Gemfile.bak
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n _previews ]]
+ log_message DEBUG2 'remove_duplicates input regex: _previews'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: _previews'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: _previews'
genmd DEBUG2(20): remove_duplicates input regex: _previews
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ for regex in "${array_ref[@]}"
+ [[ -n new_files/ ]]
+ log_message DEBUG2 'remove_duplicates input regex: new_files/'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: new_files/'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: new_files/'
genmd DEBUG2(20): remove_duplicates input regex: new_files/
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ log_message DEBUG1 'Finished removing duplicates from array '\''gitignore_exclude'\'' with total of 177: '\''fishd.* fish_history fish_variables config.local.fish _site/ .sass-cache/ .jekyll-cache/ .jekyll-metadata .bundle/ vendor/ .DS_Store .AppleDouble .LSOverride Icon ._* .DocumentRevisions-V100 .fseventsd .Spotlight-V100 .TemporaryItems .Trashes .VolumeIcon.icns .com.apple.timemachine.donotpresent .AppleDB .AppleDesktop Network Trash Folder Temporary Items .apdisk *.icloud .idea/**/workspace.xml .idea/**/tasks.xml .idea/**/usage.statistics.xml .idea/**/dictionaries .idea/**/shelf .idea/**/aws.xml .idea/**/contentModel.xml .idea/**/dataSources/ .idea/**/dataSources.ids .idea/**/dataSources.local.xml .idea/**/sqlDataSources.xml .idea/**/dynamic.xml .idea/**/uiDesigner.xml .idea/**/dbnavigator.xml .idea/**/gradle.xml .idea/**/libraries cmake-build-*/ .idea/**/mongoSettings.xml *.iws out/ .idea_modules/ atlassian-ide-plugin.xml .idea/replstate.xml .idea/sonarlint/ com_crashlytics_export_strings.xml crashlytics.properties crashlytics-build.properties fabric.properties .idea/httpRequests .idea/caches/build_file_checksums.ser .idea/**/sonarlint/ .idea/**/sonarIssues.xml .idea/**/markdown-navigator.xml .idea/**/markdown-navigator-enh.xml .idea/**/markdown-navigator/ .idea/$CACHE_FILE$ .idea/codestream.xml .idea/**/azureSettings.xml .idea/* *.iml modules.xml .idea/misc.xml *.ipr .pydevproject __pycache__/ *.py[cod] *$py.class *.so .Python build/ develop-eggs/ dist/ downloads/ eggs/ .eggs/ lib/ lib64/ parts/ sdist/ var/ wheels/ share/python-wheels/ *.egg-info/ .installed.cfg *.egg MANIFEST *.manifest *.spec pip-log.txt pip-delete-this-directory.txt htmlcov/ .tox/ .nox/ .coverage .coverage.* .cache nosetests.xml coverage.xml *.cover *.py,cover .hypothesis/ .pytest_cache/ cover/ *.mo *.pot *.log local_settings.py db.sqlite3 db.sqlite3-journal instance/ .webassets-cache .scrapy docs/_build/ .pybuilder/ target/ .ipynb_checkpoints profile_default/ ipython_config.py .pdm.toml __pypackages__/ celerybeat-schedule celerybeat.pid *.sage.py .env .venv env/ venv/ ENV/ env.bak/ venv.bak/ .spyderproject .spyproject .ropeproject /site .mypy_cache/ .dmypy.json dmypy.json .pyre/ .pytype/ cython_debug/ poetry.toml .ruff_cache/ pyrightconfig.json **/.ssh/id_* **/.ssh/*_id_* **/.ssh/known_hosts .vscode/* .vscode/settings.json .history/ *.vsix .history .ionide *.zwc *.zwc.old *zcompdump* .zsh_history .zsh_sessions .zcalc_history ._zinit .zinit_lstupd zsdoc/data .directory_history /tests/_output/* tmp/ file_layout.txt Gemfile.lock Gemfile.bak _previews new_files/'\'''
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Finished removing duplicates from array '\''gitignore_exclude'\'' with total of 177: '\''fishd.* fish_history fish_variables config.local.fish _site/ .sass-cache/ .jekyll-cache/ .jekyll-metadata .bundle/ vendor/ .DS_Store .AppleDouble .LSOverride Icon ._* .DocumentRevisions-V100 .fseventsd .Spotlight-V100 .TemporaryItems .Trashes .VolumeIcon.icns .com.apple.timemachine.donotpresent .AppleDB .AppleDesktop Network Trash Folder Temporary Items .apdisk *.icloud .idea/**/workspace.xml .idea/**/tasks.xml .idea/**/usage.statistics.xml .idea/**/dictionaries .idea/**/shelf .idea/**/aws.xml .idea/**/contentModel.xml .idea/**/dataSources/ .idea/**/dataSources.ids .idea/**/dataSources.local.xml .idea/**/sqlDataSources.xml .idea/**/dynamic.xml .idea/**/uiDesigner.xml .idea/**/dbnavigator.xml .idea/**/gradle.xml .idea/**/libraries cmake-build-*/ .idea/**/mongoSettings.xml *.iws out/ .idea_modules/ atlassian-ide-plugin.xml .idea/replstate.xml .idea/sonarlint/ com_crashlytics_export_strings.xml crashlytics.properties crashlytics-build.properties fabric.properties .idea/httpRequests .idea/caches/build_file_checksums.ser .idea/**/sonarlint/ .idea/**/sonarIssues.xml .idea/**/markdown-navigator.xml .idea/**/markdown-navigator-enh.xml .idea/**/markdown-navigator/ .idea/$CACHE_FILE$ .idea/codestream.xml .idea/**/azureSettings.xml .idea/* *.iml modules.xml .idea/misc.xml *.ipr .pydevproject __pycache__/ *.py[cod] *$py.class *.so .Python build/ develop-eggs/ dist/ downloads/ eggs/ .eggs/ lib/ lib64/ parts/ sdist/ var/ wheels/ share/python-wheels/ *.egg-info/ .installed.cfg *.egg MANIFEST *.manifest *.spec pip-log.txt pip-delete-this-directory.txt htmlcov/ .tox/ .nox/ .coverage .coverage.* .cache nosetests.xml coverage.xml *.cover *.py,cover .hypothesis/ .pytest_cache/ cover/ *.mo *.pot *.log local_settings.py db.sqlite3 db.sqlite3-journal instance/ .webassets-cache .scrapy docs/_build/ .pybuilder/ target/ .ipynb_checkpoints profile_default/ ipython_config.py .pdm.toml __pypackages__/ celerybeat-schedule celerybeat.pid *.sage.py .env .venv env/ venv/ ENV/ env.bak/ venv.bak/ .spyderproject .spyproject .ropeproject /site .mypy_cache/ .dmypy.json dmypy.json .pyre/ .pytype/ cython_debug/ poetry.toml .ruff_cache/ pyrightconfig.json **/.ssh/id_* **/.ssh/*_id_* **/.ssh/known_hosts .vscode/* .vscode/settings.json .history/ *.vsix .history .ionide *.zwc *.zwc.old *zcompdump* .zsh_history .zsh_sessions .zcalc_history ._zinit .zinit_lstupd zsdoc/data .directory_history /tests/_output/* tmp/ file_layout.txt Gemfile.lock Gemfile.bak _previews new_files/'\'''
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Finished removing duplicates from array '\''gitignore_exclude'\'' with total of 177: '\''fishd.* fish_history fish_variables config.local.fish _site/ .sass-cache/ .jekyll-cache/ .jekyll-metadata .bundle/ vendor/ .DS_Store .AppleDouble .LSOverride Icon ._* .DocumentRevisions-V100 .fseventsd .Spotlight-V100 .TemporaryItems .Trashes .VolumeIcon.icns .com.apple.timemachine.donotpresent .AppleDB .AppleDesktop Network Trash Folder Temporary Items .apdisk *.icloud .idea/**/workspace.xml .idea/**/tasks.xml .idea/**/usage.statistics.xml .idea/**/dictionaries .idea/**/shelf .idea/**/aws.xml .idea/**/contentModel.xml .idea/**/dataSources/ .idea/**/dataSources.ids .idea/**/dataSources.local.xml .idea/**/sqlDataSources.xml .idea/**/dynamic.xml .idea/**/uiDesigner.xml .idea/**/dbnavigator.xml .idea/**/gradle.xml .idea/**/libraries cmake-build-*/ .idea/**/mongoSettings.xml *.iws out/ .idea_modules/ atlassian-ide-plugin.xml .idea/replstate.xml .idea/sonarlint/ com_crashlytics_export_strings.xml crashlytics.properties crashlytics-build.properties fabric.properties .idea/httpRequests .idea/caches/build_file_checksums.ser .idea/**/sonarlint/ .idea/**/sonarIssues.xml .idea/**/markdown-navigator.xml .idea/**/markdown-navigator-enh.xml .idea/**/markdown-navigator/ .idea/$CACHE_FILE$ .idea/codestream.xml .idea/**/azureSettings.xml .idea/* *.iml modules.xml .idea/misc.xml *.ipr .pydevproject __pycache__/ *.py[cod] *$py.class *.so .Python build/ develop-eggs/ dist/ downloads/ eggs/ .eggs/ lib/ lib64/ parts/ sdist/ var/ wheels/ share/python-wheels/ *.egg-info/ .installed.cfg *.egg MANIFEST *.manifest *.spec pip-log.txt pip-delete-this-directory.txt htmlcov/ .tox/ .nox/ .coverage .coverage.* .cache nosetests.xml coverage.xml *.cover *.py,cover .hypothesis/ .pytest_cache/ cover/ *.mo *.pot *.log local_settings.py db.sqlite3 db.sqlite3-journal instance/ .webassets-cache .scrapy docs/_build/ .pybuilder/ target/ .ipynb_checkpoints profile_default/ ipython_config.py .pdm.toml __pypackages__/ celerybeat-schedule celerybeat.pid *.sage.py .env .venv env/ venv/ ENV/ env.bak/ venv.bak/ .spyderproject .spyproject .ropeproject /site .mypy_cache/ .dmypy.json dmypy.json .pyre/ .pytype/ cython_debug/ poetry.toml .ruff_cache/ pyrightconfig.json **/.ssh/id_* **/.ssh/*_id_* **/.ssh/known_hosts .vscode/* .vscode/settings.json .history/ *.vsix .history .ionide *.zwc *.zwc.old *zcompdump* .zsh_history .zsh_sessions .zcalc_history ._zinit .zinit_lstupd zsdoc/data .directory_history /tests/_output/* tmp/ file_layout.txt Gemfile.lock Gemfile.bak _previews new_files/'\'''
genmd DEBUG1(20): Finished removing duplicates from array 'gitignore_exclude' with total of 177: 'fishd.* fish_history fish_variables config.local.fish _site/ .sass-cache/ .jekyll-cache/ .jekyll-metadata .bundle/ vendor/ .DS_Store .AppleDouble .LSOverride Icon ._* .DocumentRevisions-V100 .fseventsd .Spotlight-V100 .TemporaryItems .Trashes .VolumeIcon.icns .com.apple.timemachine.donotpresent .AppleDB .AppleDesktop Network Trash Folder Temporary Items .apdisk *.icloud .idea/**/workspace.xml .idea/**/tasks.xml .idea/**/usage.statistics.xml .idea/**/dictionaries .idea/**/shelf .idea/**/aws.xml .idea/**/contentModel.xml .idea/**/dataSources/ .idea/**/dataSources.ids .idea/**/dataSources.local.xml .idea/**/sqlDataSources.xml .idea/**/dynamic.xml .idea/**/uiDesigner.xml .idea/**/dbnavigator.xml .idea/**/gradle.xml .idea/**/libraries cmake-build-*/ .idea/**/mongoSettings.xml *.iws out/ .idea_modules/ atlassian-ide-plugin.xml .idea/replstate.xml .idea/sonarlint/ com_crashlytics_export_strings.xml crashlytics.properties crashlytics-build.properties fabric.properties .idea/httpRequests .idea/caches/build_file_checksums.ser .idea/**/sonarlint/ .idea/**/sonarIssues.xml .idea/**/markdown-navigator.xml .idea/**/markdown-navigator-enh.xml .idea/**/markdown-navigator/ .idea/$CACHE_FILE$ .idea/codestream.xml .idea/**/azureSettings.xml .idea/* *.iml modules.xml .idea/misc.xml *.ipr .pydevproject __pycache__/ *.py[cod] *$py.class *.so .Python build/ develop-eggs/ dist/ downloads/ eggs/ .eggs/ lib/ lib64/ parts/ sdist/ var/ wheels/ share/python-wheels/ *.egg-info/ .installed.cfg *.egg MANIFEST *.manifest *.spec pip-log.txt pip-delete-this-directory.txt htmlcov/ .tox/ .nox/ .coverage .coverage.* .cache nosetests.xml coverage.xml *.cover *.py,cover .hypothesis/ .pytest_cache/ cover/ *.mo *.pot *.log local_settings.py db.sqlite3 db.sqlite3-journal instance/ .webassets-cache .scrapy docs/_build/ .pybuilder/ target/ .ipynb_checkpoints profile_default/ ipython_config.py .pdm.toml __pypackages__/ celerybeat-schedule celerybeat.pid *.sage.py .env .venv env/ venv/ ENV/ env.bak/ venv.bak/ .spyderproject .spyproject .ropeproject /site .mypy_cache/ .dmypy.json dmypy.json .pyre/ .pytype/ cython_debug/ poetry.toml .ruff_cache/ pyrightconfig.json **/.ssh/id_* **/.ssh/*_id_* **/.ssh/known_hosts .vscode/* .vscode/settings.json .history/ *.vsix .history .ionide *.zwc *.zwc.old *zcompdump* .zsh_history .zsh_sessions .zcalc_history ._zinit .zinit_lstupd zsdoc/data .directory_history /tests/_output/* tmp/ file_layout.txt Gemfile.lock Gemfile.bak _previews new_files/'
+ array_ref=("${unique[@]}")
+ remove_duplicates gitignore_include
+ local -n array_ref=gitignore_include
+ declare -A seen
+ unique=()
+ local unique
+ log_message DEBUG1 'Removing duplicates from array '\''gitignore_include'\'': '\'''\'''
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Removing duplicates from array '\''gitignore_include'\'': '\'''\'''
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Removing duplicates from array '\''gitignore_include'\'': '\'''\'''
genmd DEBUG1(20): Removing duplicates from array 'gitignore_include': ''
+ log_message DEBUG1 'Finished removing duplicates from array '\''gitignore_include'\'' with total of 0: '\'''\'''
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Finished removing duplicates from array '\''gitignore_include'\'' with total of 0: '\'''\'''
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Finished removing duplicates from array '\''gitignore_include'\'' with total of 0: '\'''\'''
genmd DEBUG1(20): Finished removing duplicates from array 'gitignore_include' with total of 0: ''
+ array_ref=("${unique[@]}")
+ remove_duplicates file_includes
+ local -n array_ref=file_includes
+ declare -A seen
+ unique=()
+ local unique
+ log_message DEBUG1 'Removing duplicates from array '\''file_includes'\'': '\''*.md$ *.html'\'''
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Removing duplicates from array '\''file_includes'\'': '\''*.md$ *.html'\'''
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Removing duplicates from array '\''file_includes'\'': '\''*.md$ *.html'\'''
genmd DEBUG1(20): Removing duplicates from array 'file_includes': '*.md$ *.html'
+ for regex in "${array_ref[@]}"
+ [[ -n *.md$ *.html ]]
+ log_message DEBUG2 'remove_duplicates input regex: *.md$ *.html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: *.md$ *.html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: *.md$ *.html'
genmd DEBUG2(20): remove_duplicates input regex: *.md$ *.html
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ log_message DEBUG1 'Finished removing duplicates from array '\''file_includes'\'' with total of 1: '\''*.md$ *.html'\'''
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Finished removing duplicates from array '\''file_includes'\'' with total of 1: '\''*.md$ *.html'\'''
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Finished removing duplicates from array '\''file_includes'\'' with total of 1: '\''*.md$ *.html'\'''
genmd DEBUG1(20): Finished removing duplicates from array 'file_includes' with total of 1: '*.md$ *.html'
+ array_ref=("${unique[@]}")
+ remove_duplicates settings_modes
+ local -n array_ref=settings_modes
+ declare -A seen
+ unique=()
+ local unique
+ log_message DEBUG1 'Removing duplicates from array '\''settings_modes'\'': '\''info md'\'''
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Removing duplicates from array '\''settings_modes'\'': '\''info md'\'''
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Removing duplicates from array '\''settings_modes'\'': '\''info md'\'''
genmd DEBUG1(20): Removing duplicates from array 'settings_modes': 'info md'
+ for regex in "${array_ref[@]}"
+ [[ -n info md ]]
+ log_message DEBUG2 'remove_duplicates input regex: info md'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=remove_duplicates input regex: info md'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): remove_duplicates input regex: info md'
genmd DEBUG2(20): remove_duplicates input regex: info md
+ [[ -z '' ]]
+ seen["$regex"]=1
+ unique+=("$regex")
+ log_message DEBUG1 'Finished removing duplicates from array '\''settings_modes'\'' with total of 1: '\''info md'\'''
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Finished removing duplicates from array '\''settings_modes'\'' with total of 1: '\''info md'\'''
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Finished removing duplicates from array '\''settings_modes'\'' with total of 1: '\''info md'\'''
genmd DEBUG1(20): Finished removing duplicates from array 'settings_modes' with total of 1: 'info md'
+ array_ref=("${unique[@]}")
+ [[ false != true ]]
+ :
+ [[ 1 -gt 0 ]]
+ display_settings settings_modes
+ local -n modes=settings_modes
+ [[  info md  =~  all  ]]
+ for mode in "${modes[@]}"
+ case "$mode" in
+ log_message WARN 'Unknown mode '\''info md'\'' for --settings'
+ local message_level=WARN
+ shift
+ local 'message_out=Unknown mode '\''info md'\'' for --settings'
+ [[ -z _ ]]
+ '[' 20 -le 40 ']'
+ echo 'genmd WARN(20): Unknown mode '\''info md'\'' for --settings'
genmd WARN(20): Unknown mode 'info md' for --settings
+ log_message DEBUG1 'Final directory exclusions: tmp .git .jekyll-cache _site utils new_files social-icons _posts'
+ local message_level=DEBUG1
+ shift
+ local 'message_out=Final directory exclusions: tmp .git .jekyll-cache _site utils new_files social-icons _posts'
+ [[ -z _ ]]
+ '[' 20 -le 28 ']'
+ echo 'genmd DEBUG1(20): Final directory exclusions: tmp .git .jekyll-cache _site utils new_files social-icons _posts'
genmd DEBUG1(20): Final directory exclusions: tmp .git .jekyll-cache _site utils new_files social-icons _posts
+ generate_filetree /Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/utils/output/combined_source.md 'tmp .git .jekyll-cache _site utils new_files social-icons _posts'
+ local output_filename=/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/utils/output/combined_source.md
+ shift
+ exclude_list=('tmp .git .jekyll-cache _site utils new_files social-icons _posts')
+ local exclude_list
++ sanitize_patterns 'tmp .git .jekyll-cache _site utils new_files social-icons _posts'
++ local 'input=tmp .git .jekyll-cache _site utils new_files social-icons _posts'
+++ echo 'tmp .git .jekyll-cache _site utils new_files social-icons _posts'
+++ sed 's/[^a-zA-Z0-9_.* ]//g'
++ cleanstring='tmp .git .jekyllcache _site utils new_files socialicons _posts'
++ log_message DEBUG 'Dirty pattern: tmp .git .jekyll-cache _site utils new_files social-icons _posts'
++ local message_level=DEBUG
++ shift
++ local 'message_out=Dirty pattern: tmp .git .jekyll-cache _site utils new_files social-icons _posts'
++ [[ -z _ ]]
++ '[' 20 -le 29 ']'
++ echo 'genmd DEBUG(20): Dirty pattern: tmp .git .jekyll-cache _site utils new_files social-icons _posts'
genmd DEBUG(20): Dirty pattern: tmp .git .jekyll-cache _site utils new_files social-icons _posts
++ log_message DEBUG 'Clean pattern: tmp .git .jekyllcache _site utils new_files socialicons _posts'
++ local message_level=DEBUG
++ shift
++ local 'message_out=Clean pattern: tmp .git .jekyllcache _site utils new_files socialicons _posts'
++ [[ -z _ ]]
++ '[' 20 -le 29 ']'
++ echo 'genmd DEBUG(20): Clean pattern: tmp .git .jekyllcache _site utils new_files socialicons _posts'
genmd DEBUG(20): Clean pattern: tmp .git .jekyllcache _site utils new_files socialicons _posts
++ echo 'tmp .git .jekyllcache _site utils new_files socialicons _posts'
+ exclude_string='tmp .git .jekyllcache _site utils new_files socialicons _posts'
+ command -v filetree
+ [[ false = true ]]
+ log_message INFO 'Generating directory and file structure, excluding: tmp .git .jekyllcache _site utils new_files socialicons _posts'
+ local message_level=INFO
+ shift
+ local 'message_out=Generating directory and file structure, excluding: tmp .git .jekyllcache _site utils new_files socialicons _posts'
+ [[ -z _ ]]
+ '[' 20 -le 30 ']'
+ echo 'genmd INFO(20): Generating directory and file structure, excluding: tmp .git .jekyllcache _site utils new_files socialicons _posts'
genmd INFO(20): Generating directory and file structure, excluding: tmp .git .jekyllcache _site utils new_files socialicons _posts
+ printf '\n\n## Project filesystem directory structure\n```text\n'
+ filetree -e tmp .git tmp .git .jekyllcache _site utils new_files socialicons _posts
+ printf '\n```\n'
+ build_file_list final_files dir_excludes pattern_excludes gitignore_exclude gitignore_include file_excludes file_includes
+ local -n final_files_ref=final_files
+ local -n dir_excludes_ref=dir_excludes
+ local -n pattern_excludes_ref=pattern_excludes
+ local -n gitignore_exclude_ref=gitignore_exclude
+ local -n gitignore_include_ref=gitignore_include
+ local -n file_excludes_ref=file_excludes
+ local -n file_includes_ref=file_includes
+ cd /Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io
+ readarray -t files
++ find . -type f
++ sort
+ [[ 1 -gt 0 ]]
+ local dir_excludes_regex
++ build_regex 'Exclude directories' dir_excludes_ref
++ local 'caller_message=Exclude directories'
++ local -n patterns_ref=dir_excludes_ref
++ local regex=
++ local escaped_pattern
++ log_message DEBUG2 'Exclude directories patterns: "tmp .git .jekyll-cache _site utils new_files social-icons _posts"'
++ local message_level=DEBUG2
++ shift
++ sed -E 's/([^|]+)/\/\1\//g'
++ local 'message_out=Exclude directories patterns: "tmp .git .jekyll-cache _site utils new_files social-icons _posts"'
++ [[ -z _ ]]
++ '[' 20 -le 27 ']'
++ echo 'genmd DEBUG2(20): Exclude directories patterns: "tmp .git .jekyll-cache _site utils new_files social-icons _posts"'
genmd DEBUG2(20): Exclude directories patterns: "tmp .git .jekyll-cache _site utils new_files social-icons _posts"
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Exclude directories input pattern: "tmp .git .jekyll-cache _site utils new_files social-icons _posts"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Exclude directories input pattern: "tmp .git .jekyll-cache _site utils new_files social-icons _posts"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Exclude directories input pattern: "tmp .git .jekyll-cache _site utils new_files social-icons _posts"'
genmd DEBUG3(20): Exclude directories input pattern: "tmp .git .jekyll-cache _site utils new_files social-icons _posts"
+++ echo 'tmp .git .jekyll-cache _site utils new_files social-icons _posts'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='tmp \.git \.jekyll-cache _site utils new_files social-icons _posts'
++ escaped_pattern='tmp \.git \.jekyll-cache _site utils new_files social-icons _posts'
++ escaped_pattern='tmp \.git \.jekyll-cache _site utils new_files social-icons _posts'
++ escaped_pattern='tmp|\.git|\.jekyll-cache|_site|utils|new_files|social-icons|_posts'
++ log_message DEBUG3 'Exclude directories escaped pattern: "tmp|\.git|\.jekyll-cache|_site|utils|new_files|social-icons|_posts"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Exclude directories escaped pattern: "tmp|\.git|\.jekyll-cache|_site|utils|new_files|social-icons|_posts"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Exclude directories escaped pattern: "tmp|\.git|\.jekyll-cache|_site|utils|new_files|social-icons|_posts"'
genmd DEBUG3(20): Exclude directories escaped pattern: "tmp|\.git|\.jekyll-cache|_site|utils|new_files|social-icons|_posts"
++ [[ -z '' ]]
++ regex='tmp|\.git|\.jekyll-cache|_site|utils|new_files|social-icons|_posts'
++ log_message DEBUG2 'Exclude directories final regex: "tmp|\.git|\.jekyll-cache|_site|utils|new_files|social-icons|_posts"'
++ local message_level=DEBUG2
++ shift
++ local 'message_out=Exclude directories final regex: "tmp|\.git|\.jekyll-cache|_site|utils|new_files|social-icons|_posts"'
++ [[ -z _ ]]
++ '[' 20 -le 27 ']'
++ echo 'genmd DEBUG2(20): Exclude directories final regex: "tmp|\.git|\.jekyll-cache|_site|utils|new_files|social-icons|_posts"'
genmd DEBUG2(20): Exclude directories final regex: "tmp|\.git|\.jekyll-cache|_site|utils|new_files|social-icons|_posts"
++ echo 'tmp|\.git|\.jekyll-cache|_site|utils|new_files|social-icons|_posts'
+ dir_excludes_regex='/tmp/|/\.git/|/\.jekyll-cache/|/_site/|/utils/|/new_files/|/social-icons/|/_posts/'
+ readarray -t files
++ grep -vE '(/tmp/|/\.git/|/\.jekyll-cache/|/_site/|/utils/|/new_files/|/social-icons/|/_posts/)'
++ printf '%s\n' ./.DS_Store ./.env/project.env ./.env/unset.env ./.git/.DS_Store ./.git/COMMIT_EDITMSG ./.git/FETCH_HEAD ./.git/HEAD ./.git/ORIG_HEAD ./.git/config ./.git/description ./.git/hooks/applypatch-msg.sample ./.git/hooks/commit-msg.sample ./.git/hooks/fsmonitor-watchman.sample ./.git/hooks/post-update.sample ./.git/hooks/pre-applypatch.sample ./.git/hooks/pre-commit.sample ./.git/hooks/pre-merge-commit.sample ./.git/hooks/pre-push.sample ./.git/hooks/pre-rebase.sample ./.git/hooks/pre-receive.sample ./.git/hooks/prepare-commit-msg.sample ./.git/hooks/push-to-checkout.sample ./.git/hooks/update.sample ./.git/index ./.git/info/exclude ./.git/logs/.DS_Store ./.git/logs/HEAD ./.git/logs/refs/heads/all ./.git/logs/refs/heads/backup ./.git/logs/refs/heads/main ./.git/logs/refs/remotes/origin/HEAD ./.git/logs/refs/remotes/origin/backup ./.git/logs/refs/remotes/origin/dependabot/bundler/google-protobuf-4.28.2 ./.git/logs/refs/remotes/origin/dependabot/bundler/rexml-3.3.6 ./.git/logs/refs/remotes/origin/dependabot/bundler/webrick-1.8.2 ./.git/logs/refs/remotes/origin/main ./.git/logs/refs/stash ./.git/objects/.DS_Store ./.git/objects/00/1c1bf63ee5e497ae8db96cbbff98676564c1f8 ./.git/objects/00/217d3fdd764e7a9ddb7e0a7a13e171a22ab1de ./.git/objects/00/5a889938406009b91fbaffc57104590097f6d8 ./.git/objects/00/7300b114f3ca02613dfbe0fc1a02c1ed2b137e ./.git/objects/00/aa8742c661c60617a4d9ba3edb1d7ac5a88ec7 ./.git/objects/00/b311d493780030446295430cd9ad8c788a1725 ./.git/objects/00/c4a965cd2a5bcd408df4bf362b53b12701155f ./.git/objects/00/e2b78875b4cdf3882fe2f0297bbef5d6c829b8 ./.git/objects/00/eff60a6ca110a141abb9ab2c55abfe1bd42103 ./.git/objects/00/f101310c3eb3bc1dfa9c49eba9cf68b0147c0a ./.git/objects/01/1b452ae3651e1d895ea64379873ff2337e08fe ./.git/objects/01/2919a81dc43c526c33567692a80186ea208c49 ./.git/objects/01/49343376bfa2ebd9245dc267ab26b9374d64d5 ./.git/objects/01/60794162aa9fcba410d8a2fc291662d873b057 ./.git/objects/01/7195881e450654c680528b2bb49a17cf3b8efd ./.git/objects/01/87480ec9bcbc29773f0523a1e65130cf31d2dc ./.git/objects/01/a3ad9d8cf1282c0c5b67a02258a3cec02d8123 ./.git/objects/01/a5211b3ec7acdf774bde3bd881a75efeeae7fa ./.git/objects/01/e4b2a93b8d17144621d012c8bd0f3113056b8f ./.git/objects/01/f1ed0091b7efd66a3c8a017a1ab1ba1be991b8 ./.git/objects/01/f544c3f9308320190376b8683d5b157fc553c9 ./.git/objects/01/f67009c94656f9d8b6323cbe2aaff050bdcd38 ./.git/objects/02/12c00d8c1e3c78825f0fd9c2708dd08cdce2ba ./.git/objects/02/1c0474bc07c2003024a7a1397c3bc1927c7ddc ./.git/objects/02/23f92e5884fe68ad6de7b2c1a78df426364a29 ./.git/objects/02/4c5c33b12a6185178fd511fc85aba99d42f149 ./.git/objects/02/55f1e4ae3c7a555353dcb90ea2ced3e1e2ff53 ./.git/objects/02/5ab24ea6e1a1a8fab8665e7634cb3442030236 ./.git/objects/02/7c689506d32142cb651c853f6d70e64cf8be9e ./.git/objects/02/8082ee1fcf2dfca314c406d03ed4fc4c5e5922 ./.git/objects/02/833b4ad651059561c7215bf537bd75fc7275a0 ./.git/objects/02/88e203fcca04101785f33398c46f528df44a91 ./.git/objects/03/04dca0127367e67773cd96f0ae652acf2b5b0a ./.git/objects/03/07e4121007ac4baff4dd56f68e02f9478bd837 ./.git/objects/03/09b7b7550c7ac3abf8c84935944a898248322c ./.git/objects/03/15d6e8b080b5a4eccfc3335750000df6c443a4 ./.git/objects/03/22a42ba3c11b31d15b800bfe90b9f840bc05a0 ./.git/objects/03/231fa8fc2702ed9f986d56075ba8ad652a96bc ./.git/objects/03/2a900095a8c317c53f3a5920ce25ad81881334 ./.git/objects/03/2ddd5c25d848c213ecf0e24b6b2bbba67a72d2 ./.git/objects/03/2fd78788e54c562b9d0501901f63280c58c156 ./.git/objects/03/5f2400cde7151d3b30d2b4d0f575307547adf0 ./.git/objects/03/61c2fc21b55eb16bf9b03ffa32b6b5a1d721f0 ./.git/objects/03/8316a682715c594ff93a21907a0727e464ea16 ./.git/objects/03/929c08f5134ae544be6b22327522fa8bd45bb0 ./.git/objects/03/9cdc25073b72fea8d8a30569de73da61224ffc ./.git/objects/03/9e4d0069c5c26909f86c505b9de66182e6d1f3 ./.git/objects/03/b94f848a3cb9b3e2fe4bc3032b070b0357f6f3 ./.git/objects/03/ca1d61115084c4ff7b1f72b396350dbef7b211 ./.git/objects/04/1933c21d32a4a8395f5a2782fde52b1633570b ./.git/objects/04/3bfc28b0d43d52ea0e045468707994947c1ef8 ./.git/objects/04/4969b9af3d8e0ffa38b0bfdb5414fe9af0f975 ./.git/objects/04/8390834ca8dd9fc85856d1e56149a3a860e204 ./.git/objects/04/8419cd9eb95bc3b8a330cd7e408aaaab92e8be ./.git/objects/04/8f1cbe6b31e2a57fd810d59e91fe8a356d9776 ./.git/objects/04/92366a2be42c6f0372a64b8c6f4f6b2cb660f7 ./.git/objects/04/93246252b20168812a7cbd3fa20cb6672e5a94 ./.git/objects/04/9e95e7985b59c2563b812256c2e891c88ac8a2 ./.git/objects/05/0a2ae258c9f41ace8762f51dbe7b7eff87202a ./.git/objects/05/ab51e46a2bba38f1feb8572903f6abcaecd8f5 ./.git/objects/05/ba7e43718788d8ac084efb105a4a67600fc245 ./.git/objects/05/c69cb162d174d7d8abe3faaf3e43a5b2a3dd9d ./.git/objects/05/dbaabca507013aaf9fd96601e7f88c45fb61b6 ./.git/objects/05/ec1b808e9c6af15a87388499974b22388b54be ./.git/objects/05/f309e89c160251aed36b596fe1ef1cb91152ac ./.git/objects/06/002869a4ba09a40c34d0be37bd9420d8ca6a3a ./.git/objects/06/111f9a28c399719fa535ba3534833407bb14d8 ./.git/objects/06/2d8df871e76e5620cd8c39592881f477e8f9d5 ./.git/objects/06/685bd484dfef69974605517ef5907489492f7a ./.git/objects/06/6e48505e573c53160b40e02e56920a5a88dd14 ./.git/objects/06/715078416fe7a0f7153a3d1e9ec351217c99ad ./.git/objects/06/7c8c4bed00705b48bf440b3deaca8292bdfdd4 ./.git/objects/06/9b4147b64198ba9fe5b62bae3c35065f995827 ./.git/objects/06/a6a0c7fb2014822ae98af73f0db4798d63be25 ./.git/objects/06/ff8ce3971ea41e8de9ee5405778c4c108db9ca ./.git/objects/07/442f421f3f6562ff0d5edb34141ce8402039bf ./.git/objects/07/5396a47e75c3dbcdbe75f98cfbe7da43359b8d ./.git/objects/07/704471bfaeb73fdf818844bce95244ea154a60 ./.git/objects/07/a3382eba295314ce7466fdfa2ede4fae8b6729 ./.git/objects/07/ab0e6678634c8c903227fe8333f7b91ba4cefd ./.git/objects/07/b29812107b3c9ef9be71172b9e5815bd417e4d ./.git/objects/07/c1f1140e215f159ce6e356ed5af46123f60d98 ./.git/objects/07/d7d7ada1a0128cded90de301160aedcf239bb9 ./.git/objects/07/d9b9502c75148c00d9f8ed4acdc01364bfa110 ./.git/objects/08/140c7fce0b237b9d50660b9d58bb8770e68724 ./.git/objects/08/39ee82475b1409fe227f292cf1edbfea7162bc ./.git/objects/08/3ac67ada851cdc78b8e320b04075f387ec5704 ./.git/objects/08/4b6fa80e2b235e758779a4e5c7ff69803b68db ./.git/objects/08/588adc75d69d6b5030a0b713635d5c95010a0d ./.git/objects/08/6a5c9ea988c5a4d37acc5f8ea089e37cb19371 ./.git/objects/08/99c2993dab9bdadd79689c1c3accc971096f18 ./.git/objects/08/9f65a9c530b6b6f7895f2a27fa176b9eef21ef ./.git/objects/08/a070c6aec4ba2688ba4b603497b3bf4af5f149 ./.git/objects/08/adb8eb545bea5dd58d1a4dae63b33e50e68ebb ./.git/objects/08/af9082e4adadb463347d6bd85983bf89768276 ./.git/objects/08/c54d7d42d654005bc7af40f22fa92cbf560384 ./.git/objects/08/cae8a2e8f200bbd140e8ef9fbd87ca1dbfdd8d ./.git/objects/08/e375ec3c439e50b3cc01b8f291c250f551ad79 ./.git/objects/08/f093686ceb856ff884e17b8bdca1a990480467 ./.git/objects/08/f0dace749cd8897eb4ee21e8735e7f155fcc17 ./.git/objects/08/f77603335743b535ba961efc2b312cc247180e ./.git/objects/09/27969307fd7bd59d9d9df4214e3b5777ecdfd6 ./.git/objects/09/5907b67c970552f719c289b3483acaa2c3727c ./.git/objects/09/645c4229fe4e98283b8a3865cc5b62523c9608 ./.git/objects/09/649ba656be56ecdf1377d5c6227342574f0ce3 ./.git/objects/09/8dc356d7131d8a5dda88fc19c56598d4475b26 ./.git/objects/09/cd0322014190c598291952767daf216e0dd6d1 ./.git/objects/09/f25646875838273c125f61e580727bed3b06c4 ./.git/objects/0a/0a49466ad01ec495c988045f21d7aa4fba47d0 ./.git/objects/0a/110481867b29ea5d71291d2e0fe0b5caa1d225 ./.git/objects/0a/242912be347bf31de168e38d1a379c80aa71ec ./.git/objects/0a/6a448e47cea51efba87ff9e1d17cfab5040c38 ./.git/objects/0a/6fcbe96038b9c91a9cdd404317b1ab316d5ab1 ./.git/objects/0a/741f067c981806318f09bd52eed3fac5229536 ./.git/objects/0a/7523938a21d6008b1def92d2648d950eb6c202 ./.git/objects/0a/8035e17bab2c34273c94df33a77a9686a055ed ./.git/objects/0a/8b71eaa83106a5bbb4943a31533caea468b4ba ./.git/objects/0a/976d1970d515e8df63ccd6c60a0146d66b095e ./.git/objects/0a/9be38c9d57d67e4aeb4cb0e237ad95ccfdbd60 ./.git/objects/0a/d4b91a8f415f7239d8864b51e28626695d85c8 ./.git/objects/0b/057fbeceadfe3d75cf0ca321601557ac2565d8 ./.git/objects/0b/4b4b11183bd7d7baa23b5a74142596735be8e6 ./.git/objects/0b/689ec2f083c2f96dbb126020cf166089a7c4d3 ./.git/objects/0b/6aae9e2c99bccf78ab420a6efb573908de0be8 ./.git/objects/0b/7db395f4dafa5d04e1aac8703deff3da595810 ./.git/objects/0b/8f2edaf35735a2ad9b714ee5e79ffc80e0f47a ./.git/objects/0b/aaa94e9dd061ea641425663ce7552e644633e6 ./.git/objects/0b/b64629dbc122bd0a6e6645ca979f314a7da920 ./.git/objects/0b/e166bbaaebe8a46ab22a2026a55e9e47b931b0 ./.git/objects/0c/16f1e8beab6e1176d8d8edfc532a9089b465c2 ./.git/objects/0c/4025d01e6fa6b679c4cd5b12b0ccbfd592bba8 ./.git/objects/0c/4039364e933cc1a4e8a13740866ca5a56e24cc ./.git/objects/0c/56e3f6f195e725f961029996654e0101d01363 ./.git/objects/0c/637bb8da5ea15e798af6db7d88f36124f2d4e6 ./.git/objects/0c/7a72cecc5f7e0a1068b6d44cb7cced1e0ee5ae ./.git/objects/0c/91eb4cf9e84d220af938c42c25ac7e0922bbd0 ./.git/objects/0d/33222c22eb36e135e94b59465b3beaede0c9af ./.git/objects/0d/3799913f9910d031d45df7a054ff2cf952cd78 ./.git/objects/0d/3a53aab229641f4272d55dd68ecdd34ce2a9c2 ./.git/objects/0d/74f0e94552078c82ce50c417736e722f891e08 ./.git/objects/0d/8cd311a927f82e815a317ce0b0d897922b2750 ./.git/objects/0d/95f41dd8ebd50c80ba960abc75538de528bb4b ./.git/objects/0d/9d62b80ae4595e69528cda601d142263a8616d ./.git/objects/0d/a02e19854c61224021df0235a9b0239ebe4d0d ./.git/objects/0d/a0436384eeb6ca88bc530165c108efb34b8e14 ./.git/objects/0d/a705df845fb5512f2952e89a5c42fae4368b97 ./.git/objects/0d/d0463bf783035131600432fd956f81f2ac3b18 ./.git/objects/0d/dcb8a6f13265b1fb1193183f0fe481e637dde3 ./.git/objects/0d/f06cf3b1adc2f0316277f17af8c356937ae110 ./.git/objects/0e/26d9ac65f66aa82ef89f75b60c3c49dcae6f9d ./.git/objects/0e/50ed8f880a6a4dfa96473ff5cf8b94f005801f ./.git/objects/0e/592a3f037cd0a86d3d5cb22d39be7d0cb5659f ./.git/objects/0e/5cbc37de34d67bf896d8a9f6382cfa84d884eb ./.git/objects/0e/6f1b7aa4d45301258f026a87e39ee833658af0 ./.git/objects/0e/73140a92883e084efb7406a1a65ce8e78f4d07 ./.git/objects/0e/79d7a3a1b0a72bfef516a99e689e96b910efc9 ./.git/objects/0e/7c8c97ad87c52ea53e8e3bb223146dd8ca57b5 ./.git/objects/0e/915d7c48592c105d1968d7b83ba75d1f4a53fa ./.git/objects/0e/99fb424387b8bcbbad664220eabb65e8fcee08 ./.git/objects/0e/b0dc8b2151fc9be005ca743bfb79c47eaae031 ./.git/objects/0e/cc2232a1b42be3c8da7a43b60eb1ea1221750e ./.git/objects/0f/20da9d4eadafa76edefc4fbe1cba435273a0e9 ./.git/objects/0f/4d33735c6ab4e00feace87fe58f4c4efbdaee2 ./.git/objects/0f/4e4eee6afb7d7a331dbbdb4ba03436f3851e2f ./.git/objects/0f/5322f24c6923e25b12ecc80d0a9ced49a10b87 ./.git/objects/0f/5a109853218a956acf673821f564c3e536b1fa ./.git/objects/0f/6a0b720568e2c0043d7f171bcf7ff828758dca ./.git/objects/0f/7b5d5fc94ed3f6152dcd03ecf39f5e41404e14 ./.git/objects/0f/914ffb5e7063f18e7ab171b7ba2cf763a7de9b ./.git/objects/0f/a2145e8c4c9c4969772b9a5b1ea7334eb18232 ./.git/objects/0f/befdff4ccbfe478bce2871e164938fe25500f7 ./.git/objects/0f/c0ba5d3cc3f54477a425dcf2b63c69ae770039 ./.git/objects/0f/f0433940949931f7fe8998ae0084ac422fe85a ./.git/objects/10/251c7dda98b9526c2e3ebe37c0563d4ab1327a ./.git/objects/10/2ea434d03fa2fff264f46e582e2a9b1bcc265a ./.git/objects/10/388d6875cfb6959da8fac80721c5ac8ee4bb0b ./.git/objects/10/4a2609b08be749f241923f81c74f1edaa35d0a ./.git/objects/10/6863ac88bd5e71423bbfd2b653840696bad256 ./.git/objects/10/6cbc0eb5af88c478af4c61fdd397f0d0fd0c6f ./.git/objects/10/92e03dd6211ab31b35bed5c4ea05ed9789c55d ./.git/objects/10/ea8f68ea505f7df9c20115e6ac91f40176e74e ./.git/objects/10/f9c8fb8f6f6740ab8257cc7facbaf0c5279fe2 ./.git/objects/11/09fad7a1dfd7e3e08201d205267f884adb9ab2 ./.git/objects/11/0ca08b6e02e4b715b9d72727eac25f974910b7 ./.git/objects/11/1b8d34ec21000bce81756daa9a572966da2616 ./.git/objects/11/3984bee77508114bb5a99af1d86c1cbc75f410 ./.git/objects/11/426ef5eac4532c9aac65fdd48f6edd0d76bf4a ./.git/objects/11/451fdb558e74f57ab01011bd7f2e2c7fe11840 ./.git/objects/11/7e59c3bc1c4cf459cfd6dedfca3486dd57e84a ./.git/objects/11/90dfaaf33230f39b48f0440b5be5b104838fe4 ./.git/objects/11/b6149428ba11690d0d214b9f189c052ddb95da ./.git/objects/11/e2f4d008791d86ea3a05071daee139d56730bc ./.git/objects/11/e5946f39d1546f22da8edcbf3be91b2511212b ./.git/objects/12/0ff9fc88ee5319055f9f0976e39ce549586180 ./.git/objects/12/190c6a6995df0895269def5185c3e0046fb1b2 ./.git/objects/12/27aa4435c4888cbe069b0d4eca2fc6a5bd0791 ./.git/objects/12/500f7e5647740c28abc3c13c370f32866c2824 ./.git/objects/12/561fc0864e5916af4eff2cd9ec3bf42edc104f ./.git/objects/12/7633ee8775be1d6505cfb7c7571d72091015b1 ./.git/objects/12/7ec5de57facffb69dea74d188a21aa7f836b02 ./.git/objects/12/85613a24a4642c098226d2eecaedc2ac0ba127 ./.git/objects/12/944203ead57014c2099069fd77b7e6e36719d1 ./.git/objects/12/ef85fa9750c84e82e80904b4cb04160b6b0db5 ./.git/objects/13/01b5909da73e270f329d6715f3dd8e08fa2244 ./.git/objects/13/1f49e6a83e1b1519cebef99af5d89645464802 ./.git/objects/13/22afb2054a8e78ee0cf5acffa7bdee1e24a1ff ./.git/objects/13/2f0062e0468c95d687da6265e1ae500fd42f73 ./.git/objects/13/4eae355e96ea448932d2d54b02135f0f0d7b41 ./.git/objects/13/5cf103bed1172b67cc31cedef318d59f952dfb ./.git/objects/13/66ec9c1b1ae853d8db63dd1db414074960b9b7 ./.git/objects/13/6d0c4263012a32aec2df11348241564e4aff8b ./.git/objects/13/993225b4c789cf39571176c74254db0480c652 ./.git/objects/13/af359cc343a9d916e00260a4dc63758e59dd00 ./.git/objects/13/e19d0116967262c9f8668b87d97938fede250d ./.git/objects/13/f035651a3178727ac82c17c8eedcf17aa0a679 ./.git/objects/14/0f2ed04bca0d348ab7f819a419d9e563489ceb ./.git/objects/14/2acf76b407acf78c7d6cae7694fa5e6f555ee0 ./.git/objects/14/57d9d64fc7a844deb54087a2392f29074dfdba ./.git/objects/14/60d257609dddc44de7157bd2d5678e6526e553 ./.git/objects/14/6719a333f8b4bcb4a4955c48dcf566a272a39f ./.git/objects/14/6f686c9c0a63524557e719ea9d0f6dc7c149c8 ./.git/objects/14/97f4784bf89181a6500e4913a9f9a85a4f3ee9 ./.git/objects/14/bacd2ecdb992dfa911378275a512c8377b72a8 ./.git/objects/14/c52cab6d2f1662692cf66107a7a2bd5daa761c ./.git/objects/14/ccb3973e8e96029c6c579dc0225209668340d3 ./.git/objects/14/d884027deb141e1495b89bc9b6cc88c250088b ./.git/objects/14/eaec8d4695c8abc39c2fe7efcdf7532c5e5c2a ./.git/objects/14/eaf239a0eb2ac6668f87f161d2a77ba59398cd ./.git/objects/14/f933279c4f840db18e0678421417f6fbe63b35 ./.git/objects/15/1a59e637e9f133107e60c7e6ce284d96c8f3ba ./.git/objects/15/1e9e04f5148e484fb6adec72f4abfb86c6da22 ./.git/objects/15/346c2057642d5e0ad12ee78c158bb6976fd245 ./.git/objects/15/3a5d6e289f8349e33247c4fc2413f424ce51a8 ./.git/objects/15/534bb4b4dbca87cee0b23b95200c7fe03ddbe9 ./.git/objects/15/57c3b769d56aae021b7b3b681402e5e2957572 ./.git/objects/15/608905d6e86052e5bb76b1f27634630752a8a3 ./.git/objects/15/7c2df8448577b7c5c47895f81bb4550c95a85a ./.git/objects/15/832738e1411a49a8523a65ad7a17d51f7e35f7 ./.git/objects/15/a8adbd567eb307f490597a6e31fd459e00df3e ./.git/objects/15/af2b4c83b8bc06ee1543315f9a6708e416286a ./.git/objects/15/bcf0f3685f990eecea6ee20d9bdf960280caec ./.git/objects/15/bf5b93732a2730fec3bfcac5db5e6e0cf559c0 ./.git/objects/15/c978f032933c93f8c700d7c0d5266fdf1e8625 ./.git/objects/15/faf4a5c61b7e6b8e89788fe40bfa6167060731 ./.git/objects/16/0686964e3eca2b3493c2c1761f76e5e786eb51 ./.git/objects/16/1d3e22ff0a428b4da5d6239a6e45946b11b775 ./.git/objects/16/23d75e30512dcea48884d108f64ef3dfff8963 ./.git/objects/16/240f863d35fa1ad0c11ef47eee5b06bae5d484 ./.git/objects/16/276f71561a8a4c15bade8c1da0818b198ef9c0 ./.git/objects/16/7d1faebd736c6fd3891d53458c8dcddde6d503 ./.git/objects/16/87053733608acc42fe4d09c0321cbcf47387c4 ./.git/objects/16/89fdc7f41b1e2649dd8084cdcc31f691b49c9c ./.git/objects/16/a1fd86e20a11b4dca8e0e285ce16a3a98cae69 ./.git/objects/16/b3f49def144cbe3f68474248a361c3a292ef6f ./.git/objects/16/bb3670a3a5b2fd1683604491671ab75019fbfb ./.git/objects/16/d45faf0e6eb0ecaad6c20a446b64decfd94f35 ./.git/objects/16/e5c74d78dc942073acbb5b543a0af9aad114e0 ./.git/objects/17/0a0904d3b5b89c67983965e25858dcf37e7a25 ./.git/objects/17/0ecc5367465f1f27730f065eb399659f10abf3 ./.git/objects/17/232e8dd4a2440684a9d2fd046c5f7e3bd5bee0 ./.git/objects/17/4024833ca8160e14e3ac76a6ce0c5813fee344 ./.git/objects/17/5121bed37742ebb1fba40682d50b68aae99414 ./.git/objects/17/5e201324b0ea4dec48794e4bc86a12b34169d8 ./.git/objects/17/70132b254c5802801143ac1ee2f7036d1aaf71 ./.git/objects/17/914d30822909c83e78112a2a7519749a36a99e ./.git/objects/17/b76012f8bd4b6fe32b70c4002aa09ff6ba1df2 ./.git/objects/17/c5c11af62f918572081f0ce3ca62485537590e ./.git/objects/17/f642b17a766a01f1452e1fcec67f15cc2d6be2 ./.git/objects/18/0e006b9db6e0e30a3a6e2027b65debef6887da ./.git/objects/18/4c34b541a6ea3d83a16d2cf78b6ccac64816ac ./.git/objects/18/55bc58d96cf9fd61281433a8360f91ca1ab4e9 ./.git/objects/18/5b5a1b168b4cfa74367e41c3c95964296a286e ./.git/objects/18/6fa1008ede20b13bd1a79f84b60271d6c9a092 ./.git/objects/18/c083059ee978c08f6b41f6c42a054f2d39b2aa ./.git/objects/18/d7a15a9b6204ab5ba01cc1855ae91624fcb1a4 ./.git/objects/18/e0e982f8b8bfc9060361c83a0e8347a53842f4 ./.git/objects/18/fab85a1961fd5ebba4431ac9c40dec440efff0 ./.git/objects/19/0aa0498bd23fd55b4d46d98207a4bbc2c3bc87 ./.git/objects/19/30766436424d8457e26619ad17f5f0fb48f1bc ./.git/objects/19/341c733f7c721e89fb385bd2ca138550a925c1 ./.git/objects/19/45e9310ee27f0923836254c817721ce2bcde1a ./.git/objects/19/68a56a060db4bed5bad84684a8ab57cb872081 ./.git/objects/19/9e3b40e8034095c870c1e0c0b0805a328dbec8 ./.git/objects/19/dcd778ccd4963a9c48eb05ae7d9e5c6b585529 ./.git/objects/19/e999889f9bdb2e361df61be6451ba12aaec605 ./.git/objects/19/ff66171fed2c3f46921a437e041af35d08c763 ./.git/objects/1a/101cd4819940431f3b14c43380b3906f5bb804 ./.git/objects/1a/3e38e86887a7c3942ff5db1affc6be77b82bb0 ./.git/objects/1a/658c32234ad63697a9c0ad87a228d7a77ea6e5 ./.git/objects/1a/6b66af465feee934f5e5e8fc5748944f0994b0 ./.git/objects/1a/7ea66e97b3d0a560d8554926af0b9ba213ab97 ./.git/objects/1a/83983d6b6056fe6cc5589e96112e3da998b009 ./.git/objects/1a/b315caa3db89c924832898f1a2005af985473d ./.git/objects/1a/b5e3ebb0acd232cf420c161cbaaa883c6794c4 ./.git/objects/1a/c6edfe2c3722109493d65ef13bccd5ce9bb45b ./.git/objects/1a/cb8f6ab7454196bd7002e1b983b64542af0883 ./.git/objects/1a/daa50a65fdac95983e0ae8e6dbe88d8248ba4f ./.git/objects/1a/ebfe1001794c2f7ce9562752ec4707fca828ef ./.git/objects/1a/fcd9c786c7cf2173e1bcb042c1541e72950b8e ./.git/objects/1b/0fba54a7671402be40c63bab0ceadef65d030b ./.git/objects/1b/2d6c401d13e788cf8b705af3761c1b9eb170b7 ./.git/objects/1b/30d0e552a7140403f278108ff1951e6e073c54 ./.git/objects/1b/35811c7a169fd14d13f3288be8abdef1d1e3ff ./.git/objects/1b/39cab98c81c6875a112b0b90e43065423a9864 ./.git/objects/1b/41c0faac633e95eb5e5867e6c9708b37d6b187 ./.git/objects/1b/4fbd75a72ba98ee150b32717207d804508ac4e ./.git/objects/1b/5433dae1dc36e3ac97bc6b6e28a6500e91dda7 ./.git/objects/1b/55566f36fd4b45f558f9f960979755439a2a19 ./.git/objects/1b/5ce3be847228ca01dc3c54e86c7ebf394a6858 ./.git/objects/1b/71f8cc0fd8b6a444630801c7e26397d568e32a ./.git/objects/1b/92e9ce74718e09a6bcc0f3b55322b7da14518b ./.git/objects/1b/9bde4b5dfed5b3b61c86d6787e8a7ae2ba8d24 ./.git/objects/1b/af70938e723cddd82e34d7633d18e19773a7ee ./.git/objects/1b/b4c85f7501b46e8eb46401adaf762dba081209 ./.git/objects/1b/b53d27822536fe1f8be71b99437cccb2c52092 ./.git/objects/1b/ba1e368f72c56dd93ec8d1e00690bed4bac90b ./.git/objects/1b/bfcf0ed12c81966c390eb60ba6520fe4cdcace ./.git/objects/1b/cde8ed7a17ba138db526052369565f44612eb5 ./.git/objects/1b/dc2806fc733b53a478bbb5cb2ca5d261c78d85 ./.git/objects/1c/06a9c82e42df32b6477349f8601439c8ecb240 ./.git/objects/1c/0be81b4cbe7c2b9cb9cfd88fcfcebc03cbf3a9 ./.git/objects/1c/2264583284e244258ad5c0b459be931ff0c59d ./.git/objects/1c/3c67626a8ffc2a214c10e9e0c9a5948a644d45 ./.git/objects/1c/443b2dee2ea255d60961ed3a5846752a9b8686 ./.git/objects/1d/1aa19f6c388aa271a8e27a681ddabb062b9063 ./.git/objects/1d/688a170c092276349e2f8dfa86322bc7f54db9 ./.git/objects/1d/7ac6b8d8e103dbf217f159e457292cd617f121 ./.git/objects/1d/7de2d657c52d2a09fbb8cdd8f2797809a92892 ./.git/objects/1d/95de0c4ff4ff59c785915ce49e035ad1cac4dc ./.git/objects/1d/a7ed88e6c7d1df0624af7470e465594c7249f8 ./.git/objects/1d/ca7c3252e8ed1a446dd67c5b02c821023aae71 ./.git/objects/1e/109bf48ee2fd86395a5ab6af48456e09bb11a1 ./.git/objects/1e/16fd0f284e9770b4fff26e29eb6d38072bf5eb ./.git/objects/1e/511173d16ffd2dda5fb2fb89b123d28caa4cc3 ./.git/objects/1e/6f8f529c6aa0740175de5b8f01cf224b3066f3 ./.git/objects/1e/7f57ea1f4b3d855faec4d3e33297db2f47a0d7 ./.git/objects/1e/b149197a86b3d15cf972e03da695759227b465 ./.git/objects/1e/ff1ae22628462d00f84c0ba2883be7ff376a3d ./.git/objects/1f/0af4594cd59c75f9ac0e6e590526878a0dc64f ./.git/objects/1f/19e3ad1ee87f708d4305aaced88a205482af9a ./.git/objects/1f/2358deb7eac2a1627759b15ac17b42a34a337b ./.git/objects/1f/2ac63905dd774bfc9422e65233753a408a1f11 ./.git/objects/1f/754d979470bb8305f83151daf0de26a5f90c88 ./.git/objects/1f/834de7ec7231be4f939c919d12d563c811e2e7 ./.git/objects/1f/8cd606dd87c8c063db6a3806363ff37ec5cb66 ./.git/objects/1f/b85b464e75d35473397bb5b04a4b593872f3c3 ./.git/objects/1f/e0e63c3b9a58a4259336b48e72a3cb0804d0c4 ./.git/objects/1f/e16333dc4e2d383d9fb2d90bc35dcaf3e36c97 ./.git/objects/1f/e1ee4ee599e9fcc4dbd9f56520b0cb63bad779 ./.git/objects/1f/f075e8cde343bf867622a4074a47b54dfaee3e ./.git/objects/20/185ab49689c565694a260e14539a30c4ec9acf ./.git/objects/20/18cbb911cc67e440fbe0c838b20d76a528a1aa ./.git/objects/20/335d9e3bfc6a6112c841bbf33f48f171185fec ./.git/objects/20/444b210d40d04e9b58dfa93bfa7dfd10600d06 ./.git/objects/20/706d5869d2831b34c5ac55927f9ea623806213 ./.git/objects/20/7de60eb603d245f966af77fe6674f0947020d7 ./.git/objects/20/88ef1a5989af6fa742d08c48d7cb6e5ff8d08c ./.git/objects/20/a5fa214cc6a7165ac8bc3d99103ba82f146c3c ./.git/objects/20/b382736cd25bb5aceffa70c83059f4610deadb ./.git/objects/20/f8839f1c95df83491f67db60e9a818bc05fd55 ./.git/objects/20/fae10e395176e03712b936ac4b85c24f4d33b8 ./.git/objects/21/0a9fb2e4c5be69dfa95b6892257a8e40a8c990 ./.git/objects/21/177c94d69da13a7d10e13819b7e9d0cb75e8e4 ./.git/objects/21/1dcdd03b64a301dd6380e2ada0bb8ca8b69eee ./.git/objects/21/1e4a05171d0f14f061748750f7771ca3d19873 ./.git/objects/21/40fd28a69a2b541a45c02db444404e5b0d0c9f ./.git/objects/21/682ae9ed7cc28dcb504d8db8f3ed5aa3e7a222 ./.git/objects/21/967136db5e89a3ea3cf6c19be4003f3b193fa6 ./.git/objects/21/b489cae79b0e732e64f4f3fe49b9a600234495 ./.git/objects/21/c5bdeeded03169afac920e569da36b122a11c0 ./.git/objects/21/d23905f87af0b87ce1e39af39acf609147f60b ./.git/objects/22/090b537d4c1db06c6e38349da288f6a6e22135 ./.git/objects/22/227d2dd67feed5e1ff67c50890e4a1382a1e88 ./.git/objects/22/334727ab1e5990faae85205dbea3fa0938f01f ./.git/objects/22/37052fce384b7141efdd136917a536f5d4c21f ./.git/objects/22/3af4fffe985d801d53ca0e945ec83880a2a80e ./.git/objects/22/8cd8736cc27947644f43457642059e8b68abc5 ./.git/objects/22/d6470a59fa7cf1c8f07f687edab25866b5db0c ./.git/objects/23/048504e1cb4c620c20e4c240e2ec7adb502a24 ./.git/objects/23/0f632938b007316ed999f6d440d88ec544d33c ./.git/objects/23/2d6f9798e47e3400a12ee547239cd57f3826a8 ./.git/objects/23/3e347e3c70599e0b757acd78d6546a10597928 ./.git/objects/23/462cc98a38c17f352c68fa04c34f3a9f6375d5 ./.git/objects/23/72802adcd5014c22437cd876b8b551b2d755e8 ./.git/objects/23/72f2207a684dd5f6c4de9075d29066cb838247 ./.git/objects/23/8544b7f6e0a263e5651c87efd86b6bf94556b0 ./.git/objects/23/87e8b880d301ea3651d6bc84cd7eaacfe41d8a ./.git/objects/23/8f4573e33a5f7e343d548d141a27c15b32b04e ./.git/objects/24/143c280eb87896283c9a332a10bbe3c1626522 ./.git/objects/24/1beb254660ca40995b0ad1e769b03fbe3c81f1 ./.git/objects/24/262d1a5a155376c9de9e3731e516be28fff525 ./.git/objects/24/4e6665ff1ef5e7c153cddd361a692e1904aec7 ./.git/objects/24/5dd716561fe39b437851eadc30e6af5b632ab6 ./.git/objects/24/62e7cbbb97c59ecea2ca1ee91395bf006488c4 ./.git/objects/24/87d8eced3f80ceff98ecede7f90d3c54909651 ./.git/objects/24/beae198bbffcd46609e245e556ff0a589d3b69 ./.git/objects/24/d4cc7f1c8ee823c33b0a7a787f03bacb369c34 ./.git/objects/25/15dac341e495ca98d9f48122d3218b0cbd91bf ./.git/objects/25/3e8fb9a7865b5579538d9efc5596c146816b84 ./.git/objects/25/3f14a717a40418b0d2fa33287962b79e841707 ./.git/objects/25/4a6873d28636649ec76ce164eeee1639cad848 ./.git/objects/25/4f4d5b76a4de60e543b95b2ddd1ac36abb7d49 ./.git/objects/25/932e6eb7ad59f48702af60a7ab40b645e23dbf ./.git/objects/25/947f07c40a2080436c3e5ebe6b2c6c8f271cf5 ./.git/objects/25/c8d0a8babc9ebfcc76df6c1a7c8e678a8d69fb ./.git/objects/26/088b019e0264645c42915f6814597647cf7b08 ./.git/objects/26/0ccdbc5f90de69936860e32a7af83fbf25dfdb ./.git/objects/26/3594fb3dbd13c60acb80b234a12332c46c2771 ./.git/objects/26/462f5de830f3ffbf96049d7ed15ed2c0ae56f6 ./.git/objects/26/52f5f42c003f125212dd61f95a3a8a37cb45d5 ./.git/objects/26/57b8eb62188d2e45143cb05e434304aab2c81e ./.git/objects/26/5eb731130f3d562a99acc57bddd351397b06a2 ./.git/objects/26/8608e189f233aefb28c30f4f9d0f9cb42329ee ./.git/objects/26/aa7f13c83f70ed07fbc50a5a5b38ab8345a75a ./.git/objects/26/ae26e3fb6dcde7287d519514204dff425aaf8e ./.git/objects/26/b21c90604c8e16ee23dfe70360d85877076893 ./.git/objects/26/b6bd2191b81540c0cd2b6d8e02d97d33c867c9 ./.git/objects/26/bcf9d8c52cf94eda9378a311a3f95b9849a60e ./.git/objects/26/e85f9ff667f5b7dbc80fff37f02c38d9796a18 ./.git/objects/26/f9bbaeb263af1dd1231deaf66ff8253ef8db96 ./.git/objects/26/fcca498a7649877ddb7ecdcd752ca46aad586b ./.git/objects/27/1845c48b284b99e5349a76c950afa9b84985b0 ./.git/objects/27/4f27e7a1547ff47f39a2145ee95c9ad050ae46 ./.git/objects/27/4f4576009b83b9214728049896d408fc224913 ./.git/objects/27/5707062916635069d622dca158ab1193fd4879 ./.git/objects/27/711e356919bfee19cc454d26d228928b194a34 ./.git/objects/27/82b05419e05886c500c4482002fc36414f5a14 ./.git/objects/27/94f9f48895853e19488b3ce381c1ec7ed74ca9 ./.git/objects/27/a153d5755f8647a24d178d37e8918387f1863f ./.git/objects/27/a9934f9fef31ace44aef57904e3ff0c0ef2bc5 ./.git/objects/27/bf60656edc24bdffa5ab989f33e3a62a49a2a4 ./.git/objects/27/ef115257093ab32a425089b28174e5555c51ff ./.git/objects/27/f76ed851e55dec170db04be73df3aae20951ba ./.git/objects/28/2bf1d0ddcb25a2fd0b3e51ebb6ec26e2800234 ./.git/objects/28/2d60ae913434a71ee81fa70ecf738039adcb90 ./.git/objects/28/30d7b9aba2d9fa10b9049e03aac4b07497fb13 ./.git/objects/28/32613e7ff7c80dd0a0f95785bd1266c337067f ./.git/objects/28/441bc95995eb007e1b411b2c30cc8f4ff80f97 ./.git/objects/28/5a7198cdb6eb620eb1950c011364f98cde5905 ./.git/objects/28/7952a3ad805cd39dd18710a47af6186d3ec143 ./.git/objects/28/860c0bfbb125f2fcf847d105d80d6ef02fb08f ./.git/objects/28/9ede3b08898660bfa2e572c746d6bc793e4a25 ./.git/objects/28/a99493c4b1234a054da5c444f64e9563220219 ./.git/objects/28/b4978856326ab4e6a875af69aeda3b6fdc3ae1 ./.git/objects/28/b5b847aa51dac92b88eaf2c27a27a40ad7ce32 ./.git/objects/28/d3f06d36d03bec122bae688cdb18c5d474346d ./.git/objects/28/d4f1f8824c052d9e3de10f42d6ff5af44ec65d ./.git/objects/28/e413e00adad8c27ca4f0487e8b62c8904dff1a ./.git/objects/29/02156de6e1b9366d82613fd6178d3de416ead3 ./.git/objects/29/5c56d62b3a925896eaef9b18896912c542f365 ./.git/objects/29/6663fbcad6622dd8fd5c03390c595a2be6ad70 ./.git/objects/29/79305a29d8a3e57ead1c9df82a153b6087d6c4 ./.git/objects/29/a25e7ce9d999bc23c2355b313b2b989d93c71b ./.git/objects/29/d53eb7d13728c5f27818fa32c9fa89514531fd ./.git/objects/29/ecf06de7f099b701a5c953da7d2e528c247325 ./.git/objects/29/fad584ae684ec2f6144f74c0bf4cea8e6ba212 ./.git/objects/29/fd1b9469550a4720a334ced0e759b48b8e27b1 ./.git/objects/2a/42e5a8d3b193aad5b1ef7e3dfbc68df3d3f22a ./.git/objects/2a/4bb057b88e1dc97c8f7a8674ad8f74e0615c53 ./.git/objects/2a/515c4c5bfdf332fa4ab2373992c6d487cf1e41 ./.git/objects/2a/aad1d6b52e0c864d075239a58ebe7dae4efeca ./.git/objects/2a/c5b8fd603e6f965e72382bfc5db24a8f7e2faa ./.git/objects/2a/e2b8ca09ba3365258a47877c43bfb896bac072 ./.git/objects/2a/f130cca8fabf515730db7928ee3801d5d7dd3d ./.git/objects/2b/1ffe6e2b2dced0f8daac6dfc1c30cc85f977ac ./.git/objects/2b/2aef45ed50a9fbd9934b5ff313c181db9ac5b7 ./.git/objects/2b/4ed0ef1e2cc370b7a8186ddaa622f22540f9b4 ./.git/objects/2b/8e3575d8f7892317d49a0385ef523f0051105b ./.git/objects/2b/953c399fe344775484342717f6b1d6cc03a307 ./.git/objects/2b/d666f6abbc5f9f0a88feaa1c8a66c16cd84aa5 ./.git/objects/2b/dd3fd5c63b50226f448c3898156449ac3de91f ./.git/objects/2b/de7a8d2e4b9a6b180530c99e930405a8097cc0 ./.git/objects/2b/ff964b77a97a816d36cc3d7a4efcd34315de40 ./.git/objects/2c/0e0f7eae724a12a268a8f90be147f0485e9b3f ./.git/objects/2c/11e59a5b5ad6c82c7534808a1497e93b2e434c ./.git/objects/2c/2543bc2ff309425715ab68aa529cf9c9a624bf ./.git/objects/2c/479d44cdf94e88efed08c7b71794195c17d7e4 ./.git/objects/2c/5fd5823b8e26d08c3efe49ddb8ef180e96d596 ./.git/objects/2c/70ba34a5d2b812ae0413149374af1488467357 ./.git/objects/2c/991758955f8621bf37c9d74b161d7f7d2ba067 ./.git/objects/2c/a30a270e7dacece9de895aacd63eb0f078e72f ./.git/objects/2c/bb7a1e5c802d5fb29414dde3c59a319a277b20 ./.git/objects/2c/dd945c11f9a48d2323b8ac2c5512785f81eb01 ./.git/objects/2c/efe367b545a8fae723da8aa0ea3d001acc5cef ./.git/objects/2d/00a70cb825856124c5795faae6eae19e24666e ./.git/objects/2d/09a367476fd183d8f7d9dbdab60be2b8da9543 ./.git/objects/2d/42c97b9c652b8296a20f9f65b30da9f55cfbd2 ./.git/objects/2d/5ad59cd7f8e499b1a4e24bb28ca0b3a12a4621 ./.git/objects/2d/8d745d0cf2b92915f02de064cd3c40d5b52376 ./.git/objects/2d/d02e2db3327470a3514e27a89ddd4c10c158cc ./.git/objects/2d/d4b4c65739517070e45cbc45f06eebb7a93b6a ./.git/objects/2d/e00c7b5044ea75ca05bd1960ba964d7a7f6d09 ./.git/objects/2d/f975be8be815bdac7cffe1361ceef945087fbe ./.git/objects/2e/318d7d5b45b9383239bbcd863b037a328e5267 ./.git/objects/2e/461af2783a845c2203398dee8cd26b6f4d4142 ./.git/objects/2e/47b14868f034c2d492191587c1359e177098d9 ./.git/objects/2e/4886462aad03e7675efd732146011e5d0ecbc4 ./.git/objects/2e/4e4cb3329ec7134993bd1f01bc9fe93bc7b45c ./.git/objects/2e/7fa628a09eaaf6b4c766031bb8d9a9eedeaddd ./.git/objects/2e/911fc9e2de26b237117fff6dcdc32a25c08538 ./.git/objects/2e/aa89050cf7b0074130b30fd6245fde758405f9 ./.git/objects/2e/fec2fa07acc85d30371669d677c470390dfff2 ./.git/objects/2f/13d41418b4361c469f4b6ecdf14d075e774a4a ./.git/objects/2f/1a87fe80235a15e3abb105e7ca7ff3a643fcc4 ./.git/objects/2f/1cd574c8b1853f22ea0c184a9d2c238fbadbb5 ./.git/objects/2f/398a2658c0a80c473ee12de734f9551dbeabf8 ./.git/objects/2f/46c3598aea73115b6367130aa92737b6135f96 ./.git/objects/2f/4774f4d19a9ff24513c5cdbf2a61fe365f8905 ./.git/objects/2f/5c4ab4f185aa40ca16eaa47b91181fbb3f419b ./.git/objects/2f/68bf29c481e365d81029571a77e87851d7547c ./.git/objects/2f/68c9b0ee8d212b1fe83f19d24012c306cafc28 ./.git/objects/2f/6928b61627ea89c89c130c2388335431f3911e ./.git/objects/2f/886bc4bac14b82b0be60cf45484c4a823045c7 ./.git/objects/2f/a8684b878ccf9ed7561b374d7afbc2f222f60d ./.git/objects/2f/aca6185630b9b2e22530099b5efeba3a479710 ./.git/objects/2f/af9b36abb0e203679c0e369526dcd6d16cf63e ./.git/objects/2f/c4d6d1c1d2cdea147ad675a91fdc3d5902bf4a ./.git/objects/2f/d15596ceebfaabd2eb51d700ca6503d1dbfd38 ./.git/objects/2f/da38c93c8924f53c070e4163cbd6248e90a753 ./.git/objects/2f/de5e745d866cff9f01e5bc524267008d321bce ./.git/objects/2f/ebb8a9c1b4dc41585ccfa2b6d9660751868dc4 ./.git/objects/2f/f7ccee7f750fdbaec06181353dcbc6267ecc9b ./.git/objects/30/587d8164a94862e28dac7c0f44578934294769 ./.git/objects/30/5d8497ad769c255882efd8b8ed2b08e3d37b8c ./.git/objects/30/70a10b02ecfc043785bc6f422aadb4ae79b8af ./.git/objects/30/8751bf6b8c0353dd854abcd8d61a9c7176761a ./.git/objects/30/a5c521cb207ace57f25d199977febeca1daf8e ./.git/objects/30/ae7b83cecbcece66fad5f14f812220439a86bf ./.git/objects/30/b141ee8ff1a82c9872e9a6190d174c4aa0d533 ./.git/objects/30/b17c6599ba82e86b6865b20750f2d61e00be33 ./.git/objects/30/cb280d5a2ff50d900061659a363704133844bd ./.git/objects/30/dbe24f71b076362b4487e41b3c79c45000ddf9 ./.git/objects/30/dd1a110c914bb092101066386f49bf75c3f063 ./.git/objects/30/defd526e67a429b432c647c54cf4c617c9857d ./.git/objects/30/f89dad53d58babb52704b0c4be76b6a9b1ab6b ./.git/objects/30/fc3b150d0d343ab340a1b7bf8ab285106dac19 ./.git/objects/31/093c90c0da0d1dbd579cf6366a503d5ee96d34 ./.git/objects/31/10fbadace6d93bbe5da3796499178ad60134fb ./.git/objects/31/11361a50e80fd9305b0959b1d1746774afb3be ./.git/objects/31/1329ce5471ba34c2ecf3f515fb018f5aa83831 ./.git/objects/31/4aa3d1328296e839916f500b4f0ef9a617b63f ./.git/objects/31/59df5594e8687aa226bb52087a02d6e0af6c78 ./.git/objects/31/78f25c060b4294565b1ed2be990c2caaf3f0ba ./.git/objects/31/89259b8a41e586dc5a1524dd237f24192951a0 ./.git/objects/31/c68f4512c434520fc8bfdca4141a8444f69204 ./.git/objects/31/e1ef3e34dc4ac3537d19e225013b783d7787c4 ./.git/objects/31/e7447e2345c671e8f3a6ee01af9eb93b824eb7 ./.git/objects/32/021a702c1b7048cf80adfcc79d3e2f332014a6 ./.git/objects/32/02cad28ae8249ddc631080b252f06372a5b4ba ./.git/objects/32/3684c96eb89e7315e5179b80a66d2607d081bb ./.git/objects/32/438b668c06a388ca7501e00ce25ce6cfee2ae8 ./.git/objects/32/87feb7cf906f1cecbc519900e44e9a5321713c ./.git/objects/32/97ec2744b4de556d771f241557f2f6f8fd2fc1 ./.git/objects/32/c2293e5bfdb285f6b594d28e9aebc953c42125 ./.git/objects/32/c80370419f05e9e79fe00d4ffb582ee90adedf ./.git/objects/32/cd05b0c1d9644e2c15959ba7a2248afda4a1ce ./.git/objects/32/d2f87e9e82d0da6fb6e120673649cea5e0692f ./.git/objects/32/e11cf7f1eb228185ffb71c4e6ce8644f8c5f98 ./.git/objects/32/f13ae24ac6beb551c7a7ce6b572100894489d2 ./.git/objects/32/f7676d24b8743a554431f0b4b561b7d2e56897 ./.git/objects/33/251fe7a3813704a1106f38a2712eaf3dd47913 ./.git/objects/33/2aaa130cc1ddb849296fd0135fec6054e1a278 ./.git/objects/33/912c65fbe50bb2b7a75fc2c89af233134ff7ee ./.git/objects/33/a6d62735acadcde82f72e168b20a32a6c4455c ./.git/objects/33/c1f3aad80f75ba5bd1342684a1ea46a31b9176 ./.git/objects/33/c85fee9a4e2b1a13f5413388f7d6f599111791 ./.git/objects/34/002ab9eefc4282fc9c788e8725cd8eed51892a ./.git/objects/34/0848f3d9b9e1359398e9c31da574661f779119 ./.git/objects/34/1cd028db86b3f805280ade57a9c60a7a3b1f03 ./.git/objects/34/21d54d4374f6eefcd67d421a87cdcfa8b8b1ac ./.git/objects/34/44a0f525f6a926b69803de029ca24b16b36306 ./.git/objects/34/6bed45d87d4ec56d922594d25e623c6ac42f76 ./.git/objects/34/7082dfbd00905138392a4ed656a5a50d74bd88 ./.git/objects/34/7efba7d5e225ad3f29d330adc123704fcdff87 ./.git/objects/34/873deceab40f55753d4bf99907aeeb0a078a3b ./.git/objects/34/8aecbc030dc2273b37b3197d6beb85cbb8cb7c ./.git/objects/34/d19999054c81a0956c0aab697db953f22abac0 ./.git/objects/34/e048f510754cb147697223280a1041aed9fa4b ./.git/objects/35/0cb0ec55fe36a631e23756111637ed546747a6 ./.git/objects/35/0dedabf2c33d15fbb308d017bad9a248d2c57b ./.git/objects/35/24fb17f4416d30aa10fa14efa1db860b78991c ./.git/objects/35/5856180e6a894b6a38517d84cedcd3b60d5a84 ./.git/objects/35/823954eea3884fc27491bb12f53eacf5a1cc03 ./.git/objects/35/90262a19155ed7519d2307119b7968dccbbe60 ./.git/objects/35/b45b656022605f7487853503b4c00242640034 ./.git/objects/35/cac0c902b00430ded0d3eeab5f26a7ec1306ec ./.git/objects/35/e1b2c9d56a0b0f0e4555175098ef801d4ca067 ./.git/objects/35/e49c64a569c659421d43ab889709fcdfd6fb82 ./.git/objects/36/2b654abe2553dfb0fb182e11ce0f7f8943ec79 ./.git/objects/36/55b315aa6da848a047c5663d2591e92c339b14 ./.git/objects/36/5db0fe83a903f637c394cdc27938de539c6a15 ./.git/objects/36/5f0d5b813915e4548bf1d364ae689ba329424d ./.git/objects/36/64e419a123686ccd4a9b51f7bbe1c60199ae2e ./.git/objects/36/82bcb3e426f2ed366ca1c31fee9ed1b14556c8 ./.git/objects/36/cddd6111cce6fb69db21c6e734b98633748ee5 ./.git/objects/36/eadf0465acf6bda1cecc87be7f173703380ebe ./.git/objects/36/f5fcbcfe44ebb506906c1029758ff691ef4e45 ./.git/objects/36/fa101d83a2bbec97372d1e24eadc2b84119c20 ./.git/objects/37/1128a7a989e78d7b4f76c08ed5afbd008c548c ./.git/objects/37/1fc29ae825012819cf3cf2c75b9a62fe14462c ./.git/objects/37/2fcc5229936e8e27a001ab59e6e2d738d6195b ./.git/objects/37/32c141bab6aff2678ac136f686e3f0c6e3935d ./.git/objects/37/34dcc0e517c42fe2abb5c4afad44a273663684 ./.git/objects/37/770dac9eea744c07117d462829a497081cc31d ./.git/objects/37/83a5698678f4e688649397d7ebc040dbf3bf3a ./.git/objects/37/903507f046aa394852af2791fc28254e1a5514 ./.git/objects/37/a99530567ecbae5b387beffe3882103260a448 ./.git/objects/37/aab26ac2daa707b83ee19ee89a66b9ecc11f28 ./.git/objects/37/c0c4ad07346bbdbae8133605b02c5cb4cf9fe1 ./.git/objects/37/c845f1f43c23c868045ab69165667c7fc08059 ./.git/objects/37/ffd6092c51dc664a8378fb79f20346c56aa897 ./.git/objects/38/09676e66177c90f90427ed6d69edb5a560a743 ./.git/objects/38/1d3d8a8213499407e0bb08973e2a4869ebc8f6 ./.git/objects/38/2e82533dbc086115cd7dbb1c6d360df0d136ad ./.git/objects/38/2f60906329c3e4b816252192ca743e933c4d6d ./.git/objects/38/3966bb8cc571b98fa6c4c6b7ecca3854393286 ./.git/objects/38/63db7efe7fa5dd8c894aed6fb4a52f0e486c4f ./.git/objects/38/684a29bedb4d44ce00a2b7c54a02a627337716 ./.git/objects/38/83964384ffb31aada4d1282a8c6920c55d4ac5 ./.git/objects/38/a3328f325e3a22b75f461edbaa10850dc13994 ./.git/objects/38/bb6ace653906b12c765a8e83d0705c7d69cfad ./.git/objects/38/de2247795b1a4e487bc40477ea7565b78d4574 ./.git/objects/38/df04869e65d2059a49b623d9f83228fc789344 ./.git/objects/38/e81d8af2355295226d1dc1924d1f70e85157a2 ./.git/objects/39/008079d685085819b547ab9c023231e4c075d0 ./.git/objects/39/009bc6e54945bc1271e322bd6a3cec4dca5298 ./.git/objects/39/2194dfd00286d934606fa65c8ff688b83e8bcd ./.git/objects/39/3f1901dc827b08fe864ed95385791b18953e64 ./.git/objects/39/46e593b647e57e41e526b8606804b73c67d391 ./.git/objects/39/553a28d0abd824654339e002eaefcca65e87b1 ./.git/objects/39/6cef55d4ad3415f1c0be62727eb3f890cf1202 ./.git/objects/39/6fb1a36966f0fb48f6f48bda35b5c1dc5eda00 ./.git/objects/39/9084795a47cc7b463f352475f7989b3e27d1b3 ./.git/objects/39/9e0ff72f5f9aded6ef2d2b98416d3fb02bf14e ./.git/objects/39/a2613fbf204039cfc8abef19d2e7556e582213 ./.git/objects/39/b10cb7dc9ad42fb50cd57084353676c9418999 ./.git/objects/39/b81a10739a22aa310024075693ae6af2f80417 ./.git/objects/39/c93075cdb861f33b069b65c5c4b3281907885b ./.git/objects/39/d084ee6ded55ec6efae2ed88aa1b18eb29faa8 ./.git/objects/39/f13c54f7711963caaa8b64e66fddeb77748380 ./.git/objects/3a/1087d4d04c1c92baf194cf82d272c997dc913c ./.git/objects/3a/4a03f4e488c319c1ea7cc2c87e268927358a8a ./.git/objects/3a/65aeab2f744ac576383e8765d8398a95207e77 ./.git/objects/3a/7ad97ff4d72911be94c6277c48eb897c24c090 ./.git/objects/3a/b155ff51f5b3ba3a1675e69340472effca6408 ./.git/objects/3a/b9b0a317bdf11caa19aa01e1c1610e37a57928 ./.git/objects/3a/c98450ded73aad98b3d03d1a487a0ecd2820a1 ./.git/objects/3a/c9bee22849f0e0315f91e3e8b91d50cdfd5169 ./.git/objects/3a/dbfecd36fc07d0bc2aa9b305f193712019a0e2 ./.git/objects/3a/e2f40d96d8f7443ae224ed1f72b17c65839a1e ./.git/objects/3a/e3f321d34750a07c4212c71ef9dba3e8b825be ./.git/objects/3a/f01db3828837ae0d7c646beb62d835fc93cd29 ./.git/objects/3b/1817c473b29b994d0446bf3c0d585b391b8549 ./.git/objects/3b/3717edc8c7cf3dc8ea817bc5ed76983318d3a8 ./.git/objects/3b/387723b6e81f47616a4ff3b20077410c764149 ./.git/objects/3b/3cbf51c25d25b71046b1d51438347b88f16aab ./.git/objects/3b/5455fcc44854713e510fc4ecf3528ea8c520ca ./.git/objects/3b/68c05a32789d62265d48ac07d1d52c7ed728c4 ./.git/objects/3b/6e005f3ce1b43fc6b53a073fc7d6a63a692511 ./.git/objects/3b/7488499126881c2a1d82e8837a0c527292f875 ./.git/objects/3b/b503e2f80093c7b5893dad9565211186b3a3f1 ./.git/objects/3b/cb86a2e6de7058cc0b9b6324529a6003263180 ./.git/objects/3c/0441cf0c8d01e966a741de231dfaef3977e412 ./.git/objects/3c/13d75c70ce0eb333f8b063ae14c8e34ed352e9 ./.git/objects/3c/1c0372b3ec3545bf9d90aafe8a86bdefdcbd47 ./.git/objects/3c/31a31aff8520869f969c4211e5a166562e7c61 ./.git/objects/3c/5a182c8cf793a11e1471b919b8619c074344c2 ./.git/objects/3c/a40d52d9bc694a2367b3899297a5bca4685811 ./.git/objects/3c/a749511c2ddd672b49597c11c4c20a62d9118b ./.git/objects/3c/a854450181a8e9257cb9635bbac0ae9d7f6083 ./.git/objects/3c/e0fbebecdde88142f48d0b80092f5cbea8d37b ./.git/objects/3c/e33e03d02a9287298908036a8d321a97b5cb9d ./.git/objects/3d/05d0048874ddc2418a0c60de4fe8514b9a41a9 ./.git/objects/3d/3be94474bf35f2c6c643035eada0ec7e8a0f9a ./.git/objects/3d/46fa535076742e2f5386afb96743ba6da7ae56 ./.git/objects/3d/6b97b95f1acdfe4ad077cdef774a31a0b808f6 ./.git/objects/3d/718ce2430bd87940164209b79dbcd762236748 ./.git/objects/3d/788b17122dedfcc01bf239961d78b768f71a7e ./.git/objects/3d/9e293bd459bf493993609ffae51bc32178e234 ./.git/objects/3d/9ee8bf222bd22fb90e947479ea58061a61f9a3 ./.git/objects/3d/b8e351c69465b03d17ed8eedbab38c52b199e0 ./.git/objects/3d/c5bc2a7c02c134b1ef1d5affd21242c6fd2e99 ./.git/objects/3d/c85cb23e1193787e1877d4cd7060383b94d829 ./.git/objects/3d/e9089fc643b86bf1edf4d6b880877ac05d00c6 ./.git/objects/3e/0c136c09a1c4bc1ccca111a966908c66bbd63c ./.git/objects/3e/19ff8def9d5f6ba924bc1e7ad1c8d5b8cfd17b ./.git/objects/3e/1f367fa54d27ca167aef19d5ff272300719e1c ./.git/objects/3e/29d21dce700e9c5aff07c3db69fe11d8ff2788 ./.git/objects/3e/344cad5c30f6c2c6dc7152309a0b38895c13f8 ./.git/objects/3e/35126ba9594c2884349941db71be9c3807ea76 ./.git/objects/3e/48af58279470aa0fdcc99902bd9e4fb36c5b6d ./.git/objects/3e/5daa64c331eec7a6fddd77b2f3e90ab8b76e04 ./.git/objects/3e/752629399d6cc168015b6876f1cdd3a215e805 ./.git/objects/3e/7de1883c2330ff6b0f31e0c66ed523d221a720 ./.git/objects/3e/8192c4702c9648efbeabca9b7c22c2a92b9937 ./.git/objects/3e/892077e19921f2c27924161966e3a8d5581e8a ./.git/objects/3e/8bd125e83d615074c12c7908f9eabb2054371d ./.git/objects/3e/989830ba206a71ed27fa3c95f713ea341e1daf ./.git/objects/3e/9fb272347af98a1ff61ee6d62f77aaaa5956eb ./.git/objects/3e/a10c010bc099b96e8b66c66c3c0e51e38dfa12 ./.git/objects/3e/bfbe0c73343baf790c674441669e0acaca67af ./.git/objects/3e/d0e4be9ceb95b4efe24952c4629044bc572401 ./.git/objects/3e/e173448d2e66e814d344ca2f5a417d5025ffa4 ./.git/objects/3e/e2d33ca3ea37f54c873fa256d581a7235f6af7 ./.git/objects/3f/37bddaaf58d0e62fab3f293f0e4b95c4e28238 ./.git/objects/3f/38c543004a5ae32111476bb99695187ac57e00 ./.git/objects/3f/55f41a4f7a92fb89a8b064bc69710b587a0bbc ./.git/objects/3f/5629827e176db6e008d9714fe07832efdb1c20 ./.git/objects/3f/5ca68adef96f2887d896801b5bb710191d2cd2 ./.git/objects/3f/6b4853d141fef40d84ae21d02af2f3ec561462 ./.git/objects/3f/7106be5ba7e20e9ec91451ae2396aeab2572f6 ./.git/objects/3f/7c7ffcbe2d97adde43a42d2ef9ae3259956834 ./.git/objects/3f/7f716db28d44e50253a4b0c5687ef92e861943 ./.git/objects/3f/85ff760fd0d6e30e9474fb5e2c042f659222bc ./.git/objects/3f/8889e124798146768f5443634dc60320540b16 ./.git/objects/3f/9a343d6d64f945d1a78cba86c12dd51d7357f4 ./.git/objects/3f/ac7a251be4a5c18d7e912a2eefac3b64556803 ./.git/objects/3f/bfd699f7f49d4bdf97c6241983f14e6fd5caf5 ./.git/objects/3f/c4495da71a7259f6851a04d8f784e984f3d140 ./.git/objects/3f/d088fe9f6ecc541c431a4f27b977fc08f9a49f ./.git/objects/40/02f17e2dfb6e866d2b6c0ae5cb733c4fea2b1b ./.git/objects/40/19983ffe99c66cc1dc5fda9d3e63f0eae306d7 ./.git/objects/40/1fe113fc39bffdfd7cef7fdd0bbf3674eb0e42 ./.git/objects/40/25608b81adc3bc69a14aa0b3a2baf98a760025 ./.git/objects/40/3bf477c03dae224b0fcd4586038d106f644329 ./.git/objects/40/58156c3cba7ed514052b3228fc263f07db2d44 ./.git/objects/40/8fa26f210979f8a3349e8e7b10160c7d25a98e ./.git/objects/40/a280cf201bafe24ccb1a275c5685638649905e ./.git/objects/40/a3fd9fc9c27fda53ebc2b2d8802e38d3408de1 ./.git/objects/40/a9dff6b85e16a1cd239b234f3dc26fa989d869 ./.git/objects/40/b91ce4229bcadbdea29ddcc2cda11973d31a29 ./.git/objects/40/bc43bdc77947d80ff98404ede34a883e6e237d ./.git/objects/40/cbf9031d876e1e288a7e6e077a72b409e0ddd0 ./.git/objects/41/204f4386f7eef8c74acd54a3bb279905740800 ./.git/objects/41/2e5d6764a8b1ce09953365345c78d70387c383 ./.git/objects/41/3d50f87a321143df5a1ccf7dd137c8505c336d ./.git/objects/41/3e6287d20f4c1ca0496f631386de9539599db0 ./.git/objects/41/672b1cfd360e9360acb655e9711d3f51e7fa8e ./.git/objects/41/8c95bd4eaeb9aa83c5fdb0d7944be54ee07309 ./.git/objects/41/afae0efb42a7e1997823b5a5ef870f6b675f51 ./.git/objects/41/afe8e5e9224d095e278a838c3d10d6a1962f9c ./.git/objects/41/b7a0b558101b3ce7a9ac2bee71c35dcf75401b ./.git/objects/41/cce0329db4cc67ab4146ce6c5a0d2e23d0df96 ./.git/objects/41/ec0fc2eb38eec45eec7e309af49e6f7733a319 ./.git/objects/41/f19badd37e53182fb12b28314409bc4f5890fe ./.git/objects/42/12102b49c6220d58eac8916265d8e0602a7dcd ./.git/objects/42/17f27e08e2f97d2172f490ad06b34d151105ad ./.git/objects/42/62a4953e8f08c84d03d0bfebaff27f02206210 ./.git/objects/42/6c4b9cb113ed8832fb09c29f503e5613974d0a ./.git/objects/42/87f45a1c340db992fee0101bbac06583c2ed03 ./.git/objects/42/8ce3f67a3282652e40eabbfb75c0d032ec5c91 ./.git/objects/42/96700b9059ece42040c95bf68eb20535652a80 ./.git/objects/42/afaf8284df3bafdf173621ae410456be2c5878 ./.git/objects/42/b906f125d6b077a79ca0cdb877855c411e0b08 ./.git/objects/42/b933787b75d0f6294a3513f739f625f05d17b5 ./.git/objects/42/d3f32d8dbff39c9848746ce3daa1d1a0043299 ./.git/objects/42/f0b1207c98a409a62bfb8dccdbde9e9a9da082 ./.git/objects/42/f1fdaeb48476bdb62e8e2f7ea7d3aaf9c49cf3 ./.git/objects/43/244819c03fa3cb81656510193ef748ff8f49b5 ./.git/objects/43/370a8acab91617ea4548667f7340837e80dd06 ./.git/objects/43/a228531be8ee11befcdf832fa1851292388b6c ./.git/objects/43/bdbf123b603e49852aa874c49e797ef390c26f ./.git/objects/43/d9b9768cc0299a2ea8dcb4aeda2c95ac0df0d3 ./.git/objects/43/f2137c74d1c6ffefdbf344d3215c5ef6239a3a ./.git/objects/43/f51df67ef0ed240c5f61c63d7022e67d212251 ./.git/objects/44/0a15ed5bfe09df7449c779491a86449ca6165d ./.git/objects/44/26759785f02cffc4117dd2555df7fb3f591ce4 ./.git/objects/44/28b1423acab5449638d2c2f7a8c39ed3a8cc12 ./.git/objects/44/5dd30184df50de4b77b3107ca3b5e3c8405a39 ./.git/objects/44/5ffe53ac3af1e0d9aae0729e1794934f076604 ./.git/objects/44/69ec833b52c7c4c809911ae806de2b02d8fde7 ./.git/objects/44/7616dd8a08c3aa4054d3227cacf52b65eb48da ./.git/objects/44/8d4d45a3d3d422b70f2e1be8c166c9a48a56c5 ./.git/objects/44/a792bb0ad85e48df36f5e838650a2177d5c9f3 ./.git/objects/44/a9560126183808c736830dfea3141995447dcc ./.git/objects/44/f124b152f3d6d3359f1463de3d80acd2773e2b ./.git/objects/45/026ce23064fd07e219e070d6a6921a84968475 ./.git/objects/45/4e9eade47d3d24d8f07bcd93d2872bb2ae1017 ./.git/objects/45/6268744531b654ca95bb995d47e70bd297eec3 ./.git/objects/45/90441837cc8995811b01bfb3e83087143d696b ./.git/objects/45/f22bde1f816ca7c0eb6d8d09c977515873c8c1 ./.git/objects/46/086288c374ce05cf5239d27099adbf48161152 ./.git/objects/46/0f8025f79ca6728511c77746a4436a6b4ced68 ./.git/objects/46/13e1617bfe25b72dbf381d0da6e309112fbcbf ./.git/objects/46/170cd448dc98a0a34d7d0a27c257e1df1b0c9b ./.git/objects/46/55ce1d1faedda8ac75a2ed221535aeab740cc5 ./.git/objects/46/6c650ad88e13fff422b90edf0ad53f221f2816 ./.git/objects/46/891ec815f57b4da7ab755803883372b5d11ef1 ./.git/objects/46/8cc23d97d2fb4b2df653f3cab34b9717e39a83 ./.git/objects/46/99d9ce13f3a84610ce0021970210a31847ced3 ./.git/objects/46/a3a696938e460fd6b740aab42633e472900ec4 ./.git/objects/46/a4571a7009709b2b1c265e2e0772b7425ec74a ./.git/objects/46/ab618ab5231e4c5fd9f72d81440f973f7ef667 ./.git/objects/46/c851176f575c54ea166d2d9cd7db501dace0d2 ./.git/objects/46/eced89507576a6122fb83bc2cefdd060f31fb7 ./.git/objects/46/fa2ebfaffcf4831727fb75fe26f7741f6a8c9a ./.git/objects/47/13b4fb89f6466b14acf6d4674993c7c7c7ffc4 ./.git/objects/47/72947bf021f12788b17cd9773319b0fd6905c5 ./.git/objects/47/a2ecaaabdc08e2be31444d11deb5fff3c63baa ./.git/objects/47/b0e9783e97086ffcb8f9b51eaf706138114c27 ./.git/objects/47/d39cf5f459d5a65059d92f0735826f5c103084 ./.git/objects/47/f0ac2690a4ec2ddddd43396bb58522c23adda0 ./.git/objects/47/fb553acd381b1047203acebd2148c2e1cfd038 ./.git/objects/48/04a2bfea314f6f535a1dea73f96d16f031dc20 ./.git/objects/48/127cca1c6d60c26a281788edbde3358ca124ba ./.git/objects/48/250d51d4a8d78303f449da0e866ab44302dfdc ./.git/objects/48/282c96fda79e25fc42653cb5f67587b60d0b9e ./.git/objects/48/3e2322cc7b2c7e1d554c93f4620631384342f6 ./.git/objects/48/59e96210628b75bbdca9f9a9b59156d3b40415 ./.git/objects/48/78fb0c7940b25f7fffac4d8cf3c43142b2b60e ./.git/objects/48/7d1311c63dc8d534dca961b2b1808a5341996c ./.git/objects/48/7fb6b7e637e6655f5eb3003ee1d70ae9e0381a ./.git/objects/48/80030ae638edef96532c33f5f14e699039e618 ./.git/objects/48/ac7e41e7cac7ab61e7e6be45d7fb4282a2ef43 ./.git/objects/48/c891c74ac5e227f253a389d66f14b8308ad8e8 ./.git/objects/48/d6e3ac1f09c583c4aa1fb6654bc04cbba5a550 ./.git/objects/48/dd48f0052c21c84a75b2e1030ea902c0bafeb5 ./.git/objects/48/e09d16fe67badf67a80b77c5d4e69553ea774b ./.git/objects/48/efc0f51b070100e5774eb2351d6130fa33efda ./.git/objects/49/37a300eac149b336c9c451c504ce2b77bf0a15 ./.git/objects/49/56f971ece2af70372a576b405c5c3a32434caf ./.git/objects/49/65b8d6220ecddcb13470a5bcbe90b7133dc0de ./.git/objects/49/7f1afdf1b705d0cbb5a2adc0e8d04428c8a72b ./.git/objects/49/801ce2a0e82e2ac1ee55c82bd37c297e670235 ./.git/objects/49/b28c0795a09d4b2d3b549f292c960de9f62761 ./.git/objects/49/ccaa1120b2fc3d3419471201b9ff787c20a91b ./.git/objects/49/d54be605551c7741aeaf3320a94679006bb9b3 ./.git/objects/49/e31fb81c8ef822ca183ed726f9d92b91cb3b8b ./.git/objects/49/fc2de4160bcb84e43597dc6bad23ef845b63b6 ./.git/objects/4a/1c3d54fbdfd7b0c309230acf64fbf041b52585 ./.git/objects/4a/1d23169c0b5199df39f8214c577b93a1b369c8 ./.git/objects/4a/234f181edfa479f89353a2b1aee13b7af60492 ./.git/objects/4a/3f69a5d45822172210233e5397575d2dc4b8d6 ./.git/objects/4a/486bf9398fedd039fc9896f74121ce98b92b29 ./.git/objects/4a/48a5ac892b93e7d4685d0c766cdf5ad064a194 ./.git/objects/4a/5b318ba344412441c00968314fd5e154d87984 ./.git/objects/4a/9212859ac216e251944ea1ede2d164adb980a3 ./.git/objects/4a/94660a1d5e98e23742dc2c63493536d829fc5b ./.git/objects/4a/9bf777d198a1e77abe4f61d847d1b6fee15a75 ./.git/objects/4a/9cc15aec162b0e4a009eb74cf5604567504874 ./.git/objects/4a/c4625171881b215bab1cb3ab844ee95e12ff4a ./.git/objects/4a/cab78340787e5700534d4908c93599d44109fd ./.git/objects/4a/d1b538bd3e88b77f851bb9f1010e21615048c3 ./.git/objects/4a/d95b53f8a972d09df1be56502eaffdc9373e7f ./.git/objects/4a/eb02754a63f906b3f70a1ddbba8537a1681056 ./.git/objects/4a/ef97fee270242423768429db85a7dfc4ecd1b5 ./.git/objects/4b/2c80c37b992d2b9d57c511f54f6460cfd84eb9 ./.git/objects/4b/43f535e86d9160d5a765d3cf8547122644d890 ./.git/objects/4b/4ac10d8b310afae19042201b457b1557cfb0e2 ./.git/objects/4b/4b78b24412d51d452e46aa1c8a3f99739f5e6e ./.git/objects/4b/52cda5859f96c41e18e15519edde1b8443a8c9 ./.git/objects/4b/601737ccba73e32ff0bbfc75ef60110f39e804 ./.git/objects/4b/7bda3f8ce4ed23a8a938e71d8b747ed232f266 ./.git/objects/4b/8b16333c87e41cbe8363f6fa4dd53aa8fc29e8 ./.git/objects/4b/9dbdaee4309ef8633ecf4def1b880866c1a1df ./.git/objects/4b/a95bc1236e67c0ffc44d2f8104fb01be5f323b ./.git/objects/4b/b4553c05ef6ac4f929b90924d84f601a28f1fd ./.git/objects/4b/c6ace0e88ebc62f2610e90296649eb0a609823 ./.git/objects/4b/cbfe35914372c66e96ac3d2fc946469ff58c25 ./.git/objects/4c/102a2b8a763925117a674018f9db9ae356e74b ./.git/objects/4c/24fd7e963f413feda9549fa30ab6d396251d1a ./.git/objects/4c/282eab3d358c6e042e53b906028fd17e99c082 ./.git/objects/4c/33371d29c22827def4cbb5821e1cfe3a4a5328 ./.git/objects/4c/3888c6d290ecc9306438d332ca597f56b5a8f5 ./.git/objects/4c/500ab5ca259cbd64cec1f11f397a2f67d472d3 ./.git/objects/4c/6ce7a8461688fac24d5f4ed33c772036a14055 ./.git/objects/4c/7873742d10cec57a466e68bd7e930286aac047 ./.git/objects/4c/a1b07ec559068edad5c68451017e2a0564a4a6 ./.git/objects/4c/ab85f3b17b52670212a77efef39c43d591cb77 ./.git/objects/4c/b96f6fe27fb68f93c12b36b69d86de3bc46ee4 ./.git/objects/4c/bc4908665184f842507af145c1a9d888510255 ./.git/objects/4c/d1c150117d65156dff35de828ba6890caea6bd ./.git/objects/4c/d1fcea6197a34af9268f7f318150da493a46f4 ./.git/objects/4c/fb484fc34a45584cf8ff3c0bb6ba0e4e19f29c ./.git/objects/4d/1631239826dacdc7409940177150ae39f65e12 ./.git/objects/4d/1893d44b43602a582c38aa92e972ab35e95a42 ./.git/objects/4d/2f35957fcc309eb739094ef208689ee55b4af3 ./.git/objects/4d/5bcdbbd93f5aed754b1de3605920cd3b4fe7ae ./.git/objects/4d/75cfaa5ee34408b8d870c5071ddfd1f6af7743 ./.git/objects/4d/76f69297f9005e998c3d8ca5f891de315407a9 ./.git/objects/4d/a11081b02bda31b2c55e15917d7b50b88d68ae ./.git/objects/4d/a9516966a746cc68f16dccbf585b1afeabc336 ./.git/objects/4d/b4c043f4c3d4db83a6deb3b841f1ee82677dca ./.git/objects/4d/cb92431a8869bf575449322080fb77cec82e98 ./.git/objects/4d/db60473b7ee3a08c27bef32b5e1b95c068dbd0 ./.git/objects/4d/e8aa68ec279eb1e17d99fbbdfc7d58c3f140ab ./.git/objects/4e/140879dc131ebb1355e1dfe8bd54a9b3fa575e ./.git/objects/4e/40c9a7ec3f983ca906ec0cc13997006be76183 ./.git/objects/4e/665fc11fed3bbdff024ec60c84e316cdad7b93 ./.git/objects/4e/6d424f265d2a3f584597ef33a3f25e7d288d8e ./.git/objects/4e/6f14a26753e980e82a992e9f359f5e55300138 ./.git/objects/4e/7438754450ad31715bb40d266cf973168b945d ./.git/objects/4e/760a601ee27e890dc57703c5b6a3e521619a61 ./.git/objects/4e/7953ee74cde82831d9b1c8a00b7ea8a942ece6 ./.git/objects/4e/a430450490bed4a4f2a6f64724c6c77dcf8251 ./.git/objects/4e/b794a1bb15d4bd30e254d82e6417a6d2d6a07d ./.git/objects/4e/d34dc05f99ca65f5bcb0731b7801659a621e72 ./.git/objects/4e/e9aca02a7bc1b9fcf308fbc3ff8b4ae39b65e0 ./.git/objects/4f/102d6575650f3f37809cc6e2cee1f9cc3b01d7 ./.git/objects/4f/12da1f6acf3b2b21f1dda88dca440ed7195aa0 ./.git/objects/4f/564a6133e218c02d5960bac1788be66aba7f50 ./.git/objects/4f/59756c3bf99fcc7cd9f44b32779fc8b823db04 ./.git/objects/4f/5d5b2f7f0f80d2a4069c15645136bee12798f2 ./.git/objects/4f/70bcc40a2be789663d238c5127d507dc0b69bb ./.git/objects/4f/7aa2f19841b5dd554a7d2d6967aa2f88d0894e ./.git/objects/4f/853f14f8f59557e653b02fac4a25f2d421d152 ./.git/objects/4f/91f9aeb2ed0478529a166a3f8d7491b373726d ./.git/objects/4f/c57543bad1cad8ca041629c2feee9919d70f11 ./.git/objects/4f/ce44ebd74be100955a6b56a48d6233c7fadb21 ./.git/objects/4f/d1df1325e6cbfd10d782b0bbbb120a42698c69 ./.git/objects/4f/ec26a8300b49fd4a6c4a96076d0604d24970e7 ./.git/objects/4f/f7aa85596a8c2d456d3bd56ba6e56066838507 ./.git/objects/50/051b5a2baccb8a01c368089cee8412862e0833 ./.git/objects/50/0bf5608b03d0cd42e58b33ddaecf91ccdc9afd ./.git/objects/50/238447d19dec920e11b6049df2a37e767476d9 ./.git/objects/50/2df5700c9b42f1833e4d932104f1eb0c4efd41 ./.git/objects/50/47c76fbc71da4bd7a89e3b2a6bd9fe85e40b2a ./.git/objects/50/4f31390bb0cff1f13b9fcd6881456349b45217 ./.git/objects/50/557ab187cf405d67f67b91ad376e3ed1435f5b ./.git/objects/50/999212499111003e7802c3c588b5300a862c06 ./.git/objects/50/9b91a166e34b86fe99537b5711ba2051ffe467 ./.git/objects/50/d5f8aba45e0333cb23d160bfc241b956d1c059 ./.git/objects/50/dc74434fa3526530904725e8daefc037806a85 ./.git/objects/51/14eba010c01544f406300bfba6d2165a616e64 ./.git/objects/51/1f04dcdcffecc6f1bea3df32b2b49c883ecbf3 ./.git/objects/51/2f35fbb12ce524ae0a8d72ef5815ee76ab0529 ./.git/objects/51/3182b0a0e511e38f0a223da691c3bedfdd70e3 ./.git/objects/51/3cbe700507c529dae591fcdefb5ad3f98791e5 ./.git/objects/51/4ce7412115e96ea2a8edae8a13ec613c11bffe ./.git/objects/51/5139b7ee63730c93fb62cb851c90c049561fcc ./.git/objects/51/75f12e2d680338871aeb006f126ecd5ef05c0a ./.git/objects/51/78d64a44bea4c1cd4c77a5ebe57431488af848 ./.git/objects/51/7debcd259683955e58c48e450b660d6255691a ./.git/objects/51/80762217effe39edc4d2227343afc95bca9b91 ./.git/objects/51/878868e4b68f64cd42aaa56137fd569210d14a ./.git/objects/51/9123f876d98e872551449838ad9f45a968a115 ./.git/objects/51/b397e070122fecb72c4308e18aebdef55d2e4e ./.git/objects/51/c046d8b3c4d513829ef2e6bb20bfbeead5f10a ./.git/objects/51/cf812786e55c66bbb56bdfdbb5f59c3bb385ee ./.git/objects/52/0cfcfe3b84ecf8f717cb9fef822071b8ee3f76 ./.git/objects/52/29e97d6cfe84ef5dfd4b070ce7b90e21e554d1 ./.git/objects/52/7e36076bc2bd2a4af7f3d959e6b98e7f93f16d ./.git/objects/52/80e638bdb77ed91143bd9c509279d7cac16be3 ./.git/objects/52/82a6ecbf8b6f5b3f0bb4f6df3da8fb7d638f8e ./.git/objects/52/8c81298e7692e0186f8fc473b18677ece16a48 ./.git/objects/52/c8444657b5c18aafd80c256f3d24f72dd18577 ./.git/objects/53/09667105c85cae347cb3e15db6395561336aa5 ./.git/objects/53/0a687310cb0352ea600d0c172a91168418141c ./.git/objects/53/178d0c5d6b9b9fe36eb0d61ecaa98e7d5d2ea0 ./.git/objects/53/5219222ca4578a68f85779474066a25d661dfb ./.git/objects/53/848baaf80bd721d7fb1fee4019f67fd4ed83f2 ./.git/objects/53/88e701e9f25503f8054b66461de1d8ad608814 ./.git/objects/53/8f8041795e0437b8641e4d8e3e9599c7dc9dfc ./.git/objects/53/9000b4f210c3452072e0579014931830fd4cf5 ./.git/objects/53/afd170757b1802e53ef51339a9be0caa0861e7 ./.git/objects/53/d3863b43812c22edd25cb9f27d04adb56f59e5 ./.git/objects/53/d3abafcbccff7e4ea5224767fd5936c6c1ec99 ./.git/objects/53/e154f12970f0d11b18af1b16dc7347b1ffa0db ./.git/objects/54/208e51644a5cf111744b2ee4c8223a261b8fd0 ./.git/objects/54/23f4ffb883fc8d10ce2dfb1ba619665dda787e ./.git/objects/54/523429e7fc29a6e7ed3ab6baeaac947b3f5819 ./.git/objects/54/83178f5694ad35a02536735f7ab46acc3a5569 ./.git/objects/54/8ad707b27b1fdd2145bd85b79246944dcfd65d ./.git/objects/54/9f28b3aab564da31caf6538e4a32261fac943a ./.git/objects/54/da623d0feb5dd8dc4b27a0f4ec2d0d12db651d ./.git/objects/55/02b9da7d069a973344a30596fe2520e9af2c87 ./.git/objects/55/151c9f6f838bf80f7ae1f1430c943702e671fc ./.git/objects/55/31bbfda61498343d9d873406f39f41db2b5f06 ./.git/objects/55/58a82de239de6d99a16f43af93d44ea81f74a5 ./.git/objects/55/5f6f2c36bb3f5b5feba45c4477cc6b5cf221c9 ./.git/objects/55/893ea5fcacf3e2cfd0069db4607c6462deb44c ./.git/objects/55/94e07fe75e84a335a4c0917e64dc8a05e812f6 ./.git/objects/55/b6d289deda262b764d97b5c50f9ee664dcde01 ./.git/objects/55/b886694647782a22d66b45aa90be1e9b3a77f3 ./.git/objects/55/ea789c6c33d0c2c84270ab7e1d979728886175 ./.git/objects/56/0d5cd581e61eb21cc762a85185ceb8585b938d ./.git/objects/56/12a071abe3e964890b3d34d02a023aad48cde1 ./.git/objects/56/1cbcbfeb7c021bf348db098c332ca4b2d0e6c0 ./.git/objects/56/3a5ba1e68caf71c47928e6e73accb6237acf03 ./.git/objects/56/3bd62a876d1408f33ffcd7e1d7c05d4532b61c ./.git/objects/56/3f375ba6d8dc3f2cb7dbc046d073a3df3b75ee ./.git/objects/56/3f652d74c1e067cfc96fcb159caac06a5499a4 ./.git/objects/56/5fcd1f02251c300e255a942698f9c427fc5f13 ./.git/objects/56/79d2ccfbe490f271ea16c5f176d1342c31046f ./.git/objects/56/9859db53c50d3a6a503938a7d747f5b746ebba ./.git/objects/56/98770950a47cc544aa3ddfe6adb918812ae218 ./.git/objects/56/a53b18c579bd355603069196ab3fbee73c135c ./.git/objects/56/f573bc83ca309512d1b27476e132b42528c09d ./.git/objects/56/f8f27224f663506e96d8ec4ddc90afa833ef55 ./.git/objects/57/0f27a8cfdd5fa86b1d4385d907de952b3608b6 ./.git/objects/57/15d2d78a5f7d4d3bbf8f3c696ded9b300df56a ./.git/objects/57/31b9dcaf061e47a1ac86b372ea9dff08308c2d ./.git/objects/57/596603c0291995c3cd69c3e9b0bd033d80c0c7 ./.git/objects/57/66df623e22aba205f5f98856f4f382d077181a ./.git/objects/57/77dab11bb10147c0fa8ad284e2d5b55c8fdcbd ./.git/objects/57/853ac77d3e668b14105b2210de99fd1294f2f2 ./.git/objects/57/8ae2a14f5fca46135000137ddbb52153f4aa4e ./.git/objects/57/982f3f9f20e506afbacc359e9cec7750786fa8 ./.git/objects/57/c4f61b1f677d832ebf5d57dbe49572b65b655c ./.git/objects/58/23da9acc50a5d388a06a3d6243e24fd28b1c99 ./.git/objects/58/4445ae7de4ed74333be078b2a407c0f9696412 ./.git/objects/58/44d645cfd038d4dedf4bbee7804b5bb1a01323 ./.git/objects/58/5edfbea95fde3bfbe424997d2e0ad29597ba02 ./.git/objects/58/72cb79108eb7fc44ec9a60e5e8c66899213cf2 ./.git/objects/58/735a9a48a5742fbef230d78b8b48d4b727615e ./.git/objects/58/794c71a1cda40a64857f9536bd42191e3d4ebc ./.git/objects/58/8cbe160ceeab1ebbd671ca17f4ad55f4bc5aef ./.git/objects/58/9a5360d486ecb15ecec61ebaf849b40a1ba1f9 ./.git/objects/58/a3f23994dc4948da4ac6d93246d4a52447bca5 ./.git/objects/58/bad3be740575c801d0a815ace821b351ff5ec2 ./.git/objects/58/c41d034b982cbe8ded0e55919e59d32d3b0d15 ./.git/objects/58/ca1ea8c556f9cdfbd31f64a9bb45281c3033d4 ./.git/objects/58/d8bd6fdb26fd94f4aacb56c80a3d84729700d9 ./.git/objects/58/e4f580bee9d135c8c6af24e164e8daadfdb5a3 ./.git/objects/58/e70082e96be1348ea0d473bae6e20a4396c95d ./.git/objects/59/082d7a6310f8f559efcd046651de2e80498403 ./.git/objects/59/47236e8bc20ff5fb96ec9bb117e9cc739e8fa6 ./.git/objects/59/4e9c77472958feca88c2e3123b34ccbadaa03e ./.git/objects/59/4ea292286f3f9f6e3be140278c457231cbbe18 ./.git/objects/59/70ecf3ce38ceb5d04fc62f1df09bb99f19b85b ./.git/objects/59/8477e511a400ce4a7acda92c8571591f5e9935 ./.git/objects/59/8dc549a7bf26880ccecc8ea54dcb3b34d60608 ./.git/objects/59/95dd7682e18adf52e97576b23bf9e436ba94f0 ./.git/objects/59/a67f04ce42b3821dd46338bf228a894429989a ./.git/objects/59/acf64bfa24363e82a114d1b49b32da8d8cce2f ./.git/objects/59/bd5c05d692296abe64dafed6d9e55bc1ee5486 ./.git/objects/59/de044d50c3c9f4a51371c516db671a1ff59fe0 ./.git/objects/5a/0d4bbc013eb6b24a24697ca48a0a0bf4bae09d ./.git/objects/5a/1cb6f9d0e70e8e66b01835d0ec9c193a89fba7 ./.git/objects/5a/1e119bff0f2ca4196a342d40b605846e264d73 ./.git/objects/5a/313b5249944c1fe2a52d798248030a6d0b29f9 ./.git/objects/5a/379a04f12ded4485b68a55936faef228de2b45 ./.git/objects/5a/520cf8a33fd58af5854c4778536510f71fcbf5 ./.git/objects/5a/533d73f8cabd020ff1229443f67a44557a9351 ./.git/objects/5a/5f811c2e09a5dce0f6e2b45ac862b5ca8451be ./.git/objects/5a/8bc9ea5886c3c6508ae32da528751ba1d688e3 ./.git/objects/5a/909df16a376cf9b91ef68b74ef30c4c6dfb0fc ./.git/objects/5a/9c251535995de7839ecadd98925b2130aaf8d9 ./.git/objects/5a/b71b63b6969bd23b133f5f64db2e3f0f503bbc ./.git/objects/5a/e54f19ad903c0aea1579a8a10dec59703773b5 ./.git/objects/5b/25a69c73005deaefef874ce94c6217be537296 ./.git/objects/5b/42961c80c5b2787e9b38a07946dc196d9b230f ./.git/objects/5b/699ff01554621621d11f2bdc23dbe34accfcc4 ./.git/objects/5b/997ce6a50ff4a97ed5b2cf25bb888866847a62 ./.git/objects/5b/a68447cbf9082fd86d335c1a10814a45e8fd7d ./.git/objects/5b/b8666f2bf4fdcb4315d29ad22a198fd6ed9e71 ./.git/objects/5b/ff5ca21c356d56a869e0eaaf508324ba5bba55 ./.git/objects/5c/149eeb10705d702853c9aec319c0c780f20dc4 ./.git/objects/5c/1d2d376ef710710fbd1a0c2d8f37071e052aed ./.git/objects/5c/29e7a75edd5c01da13ddc2882247431d9816ad ./.git/objects/5c/42cec2f2695936f12c427c8efed647daf54188 ./.git/objects/5c/67e9913eed774cc08c6c1a407ed93e7ac36541 ./.git/objects/5c/732924f8b7be35597f3edc94cad32e580fe519 ./.git/objects/5c/8811c7128cd9ba8e292b9601f1e6431f9fa2d0 ./.git/objects/5c/8e8635652ab82e52904046ca4afa110d60b72f ./.git/objects/5c/9aab5fd38db6bef4ca3bc56542dd32c33ebf09 ./.git/objects/5c/a2794df5bbd9f33ace06c06eb88af57460c4a5 ./.git/objects/5c/a2be071ffdf1e8ea0ac84e7de32eaaa1025bb6 ./.git/objects/5c/ae610b34e73fbad6049adc39bce6a040d10bab ./.git/objects/5c/e3efbb52bfbd87135194cfefbb23e3c08f14fe ./.git/objects/5d/00eb4f7c1effaf218e2388f683ebc33d5e6a84 ./.git/objects/5d/1f6bbaea0ed0b539908d397960bde258510a62 ./.git/objects/5d/2ed16ac70e464a0575b5cd96944321e72f9455 ./.git/objects/5d/36439bfb59e7214eb694fd3f641b1fbd46ed1a ./.git/objects/5d/58be7a7a95f5710abcff77fbf40218fd2a6210 ./.git/objects/5d/5bc52307086fe17074883b0f28ca84412a8d43 ./.git/objects/5d/7b84906d61ae25498a56e43f5060ad3adb2aee ./.git/objects/5d/86d875f247cbacd3078b4eac477c51762b84b0 ./.git/objects/5d/873e755b035f7311d73ce0d25902a63554e16c ./.git/objects/5d/8b2cd2cf9c424508b843c6cbe2e59a277fb832 ./.git/objects/5d/b8cb90dbb9a62c24acb41af1dae913a46f7c71 ./.git/objects/5d/dbd80772982f15bca8f141ae05b9a6930cfccd ./.git/objects/5d/f6690988a13d76a9febf85d00841595ca97086 ./.git/objects/5d/fe5dde997b79f7a38cd303152c19fc32da2109 ./.git/objects/5e/0917f95c91b1effe4ee0720476eb1815b4c233 ./.git/objects/5e/26d9d6cf6797afd5575a02adee1c82464ad45e ./.git/objects/5e/35516e34c6573ee89b758a656703aa5eb7c82c ./.git/objects/5e/4b0fd40b412ed9565ac8d9a35a001b86ef7949 ./.git/objects/5e/5da7581c83bdbac07790f65b885e5f492160c4 ./.git/objects/5e/8f9ee4ec5761f7dd447ba09de0d11bf23422d2 ./.git/objects/5e/ac0dda8531599245bcf7cb9b848a73bb17f2b6 ./.git/objects/5e/b27099afa89681eec4182eaa19bb8b6100214b ./.git/objects/5e/c6bc05014365bbf2915fc89f5256abe98420df ./.git/objects/5e/fd8fb3e8541f973d73f1701c45a5193a4932b7 ./.git/objects/5f/086e86c2b86ab85a7197cd976f0632b8b4c687 ./.git/objects/5f/1dac00554c540e3ae04b30461fa72f20955905 ./.git/objects/5f/273e6ac7b981bc3f891793e020e57de4b350ca ./.git/objects/5f/28612cbd4834a5993ce7fbee110d8feab1adbe ./.git/objects/5f/41c0a20869bbe4c58811b4bb89f253a4d40e0a ./.git/objects/5f/48bae4bf5fd25e6390a0d2c5d8ec7dbef23fd6 ./.git/objects/5f/6786be096994a18d1dd7da0b9299619e6e6c12 ./.git/objects/5f/8ca22f17e09337f6c91d0cab94fd933e99ed37 ./.git/objects/5f/b3a7a62b8b95a07ce541f9a01b220a12fc130d ./.git/objects/5f/b9c0db2f9afe6844574bd9322fa853f85b44d3 ./.git/objects/5f/dc404d1657707ec2da4206b981afeeacf286e8 ./.git/objects/60/069956389076bff0f26062b0007a88865249a5 ./.git/objects/60/08a32b5e85ce66779f5660ed6b110442f57cc9 ./.git/objects/60/2336536873fa8c14a11b2001e2384cba367074 ./.git/objects/60/2b1d5a2e06106f40e2689b3afbfb75ae7ceab2 ./.git/objects/60/3659edf0f35af492a9c468a582c2b71e544b32 ./.git/objects/60/427e0debc48f000082d9fa339158083d4719b6 ./.git/objects/60/5303c360054ee7b70299c9999d6c60e2ea8cbb ./.git/objects/60/591c3831328f61c8d1372b8efc7c7e8eb31915 ./.git/objects/60/640e216061193bdd4c4ab12f81c7c210f0e0de ./.git/objects/60/675896882a2b0103bb1dee83ad86b799931255 ./.git/objects/60/6fad7e362d91198bac60e7d013b6153e58d926 ./.git/objects/60/7ee521f9bc6de2af2154fae157aa43b8477ad2 ./.git/objects/60/937b1b5ec85c5a7b50e60e8cd909b5bcb0be95 ./.git/objects/60/c32b08aff2405c071c9232bbd34aa3f5c9d2bd ./.git/objects/60/c4c206f238fc147fd0931122de21531f36dbd9 ./.git/objects/60/c52acc2815be83280d260c9557df25043c38fe ./.git/objects/61/07e5dc64c86294aed56f1e1fe45dc188f9f9bf ./.git/objects/61/1579f1ed6c93f724eab977a2f41c87db95f48e ./.git/objects/61/18ffc5bb312ed912f6eeee2034871e983d5d47 ./.git/objects/61/2991473f0844284d4526547c9c20ccfbba5dd1 ./.git/objects/61/2f3a0b0c6aec763435c915ca3b9b5224cb5f73 ./.git/objects/61/54b72798877ac4fb8d5088b1fb735395c240fd ./.git/objects/61/603ed7c5c0ec6ef462461f3706d0feadaceef8 ./.git/objects/61/736c0bcddedc89d25e0a0c4f20de8006ae4506 ./.git/objects/61/8de1083d240510a81eb41686447e1138786c46 ./.git/objects/61/8fc800f8afeb9d532d9e83c07b0e72b4ccf88b ./.git/objects/61/93752e3fa071360572cc4f0b3a09990283d0d4 ./.git/objects/61/c7e354cc3b242f0e22490583c0813f9cccc764 ./.git/objects/61/ce2eb408af1b24757196bd5fc822e3c1707000 ./.git/objects/62/18d47134c4bfa4aaca1c3644dfb0a5da29039c ./.git/objects/62/33db879461cbab601eed6f059bb96855814ca7 ./.git/objects/62/34465c1611c598b9bbab5b2ab0e553c9f601e2 ./.git/objects/62/4dd2269c177c67d2035231b12d7beaf13c1f6f ./.git/objects/62/62e54cf4f2785844298434ce1876e00fff30fc ./.git/objects/62/84c7673491e2847932bca227cca19b51a7422e ./.git/objects/62/889215867ffe59ce28621eb4dffe026e174825 ./.git/objects/62/93416dc153d226a11c6d81c934905e435245b1 ./.git/objects/62/938d457a0f3ca74b775531dc255ad4a133fff2 ./.git/objects/62/a650fd0b96d4db4f4de1caa7c818c5ef084ed6 ./.git/objects/62/a7db7a953c30086fcad8f9819d1a1527e961d2 ./.git/objects/62/a9e6e71f1c23332128404defe0fed18d569d80 ./.git/objects/62/ac9d71371f5e8db110ea078091f65e49e0a439 ./.git/objects/62/c76284bd014696a94ac2a1724bbb27713ba811 ./.git/objects/62/d4e96bec968c150bc365212a925df57358909c ./.git/objects/62/d73d269385ed1b24066fec98c49e8539706d95 ./.git/objects/62/efb68825cd766a4ae9ce036ee477d09ebdcf8d ./.git/objects/63/30de53832f83445dc85d70c2b5cca1c468dcf7 ./.git/objects/63/445e6dbe2c9e4be351294cbcf7c496e43b9af1 ./.git/objects/63/63a63551b80d0d867e24b2346fb6d5ae7ed110 ./.git/objects/63/a9ae33230bec3d02dc3563076cc45616231c86 ./.git/objects/63/ad8bdfab5f464773573bb4989487835a4e0d5d ./.git/objects/63/b28cefa8be8efac4948eac79f657bdd68eb528 ./.git/objects/63/ef5b980b1f84c0d0bdb691f4093d62c473a2a7 ./.git/objects/63/f24092988361fe258d1335fb3c2d4b5e5fa7a2 ./.git/objects/64/005aea34852ddb6c4f6bd71d4494a0c79c1080 ./.git/objects/64/149fc0eb5d5e4071e071c91ccda52c0eb6aa9b ./.git/objects/64/30517a483717feeeac7ce459603dfc77de44ac ./.git/objects/64/3b472c99713e5e5b9d3e1e925e06ed1c6281b2 ./.git/objects/64/4b372932b38676fbfdf5a9753d46725e67ace2 ./.git/objects/64/58173df0a5fdfa1d57e1bbade9765a85779205 ./.git/objects/64/6adb63aa5a75da3a0798e5bb02d8dcbc12a746 ./.git/objects/64/95cb3433f6aecdda2f493920d62ce2092e976e ./.git/objects/64/c9cdb40d71c7785adea9bf425621ddb4ec746d ./.git/objects/64/d2f14cd345e5b8369b5ac61a8a62a87eac3a41 ./.git/objects/64/d42f975e502619d36deddad91ab764cf6b8ca7 ./.git/objects/65/2eac1168d798ae9e3e898c4ec3e7b0e37fc9cb ./.git/objects/65/31b823c8bae0846f33404e379228df9e7951b8 ./.git/objects/65/3fc2d190acb62302b868cc13a8e9c9261d7d23 ./.git/objects/65/7050746983ee56b471b3dc1a9c32b98fa751aa ./.git/objects/65/940a994619a369679f17ac19027c75b5b426db ./.git/objects/65/9f9eb16900bdf382de2213de7da1b8cc93a8e2 ./.git/objects/65/b5fc48fa70aaa7ca35c333ee11e2b691e4f394 ./.git/objects/65/c047334228091aa56a8413cd68b085e9b2c180 ./.git/objects/65/c823cbc3753e63fc1ce9968709f876267920b8 ./.git/objects/66/00482b1b7895997b0d959364845a1004655fb6 ./.git/objects/66/384ab89893721d52a41fcdafecc616d41fdaf9 ./.git/objects/66/7366fbcbb6655d56666292cfed134220a76105 ./.git/objects/66/85ef1081a260592cf905bb3014d8e2893a5e19 ./.git/objects/66/873723a64ddea528ac077e6f23a6f7963d5951 ./.git/objects/66/8fcea57d18f06d11f6bfaffbe3187143da8fe3 ./.git/objects/66/c08e5248645336bcbeeea83ead54d84ac587ef ./.git/objects/67/009e2f3843031ecefcdc03207ffe5ab3058aaf ./.git/objects/67/01d8515ae6f5893fdbf43639e35af5de085e19 ./.git/objects/67/1197e8a6457369d7dbced0ede4f576e77559e5 ./.git/objects/67/822934d53fc9258b1bfbd55808faafe25c6cfc ./.git/objects/67/9d1c662d844bc73ef2a8294097a80ec882e638 ./.git/objects/67/ae6b78ad7c77a232911c960225c7c3110b8680 ./.git/objects/67/aeb5e42701807cd8c9b1be49ad4f8e18b3f502 ./.git/objects/67/b4de7e5826c540fb286927bf92ee62c45aa057 ./.git/objects/67/bebedbee28909043b49dafa5c069153bc2d3c6 ./.git/objects/67/d58c52d24ea8d6cacafabf5282fb59b14cdbc4 ./.git/objects/67/ede6b965d71ef64f5aa7cf1785b8b00dcc80eb ./.git/objects/68/01eba742dde78d540684bed2341f8f4999850a ./.git/objects/68/1028b10ff32a4ca59bb0c9da3a586d63104061 ./.git/objects/68/520b5aebd7f75028a4586e6e13e88090f67f27 ./.git/objects/68/5a0f3cddfbb4144af1c86c3314714d260fdef7 ./.git/objects/68/7217110a1afe4c8e69cd98a9eb6eec95042456 ./.git/objects/68/86a6a8bc3af320086b5ad9fac5ecfb2c0e36cb ./.git/objects/68/98eff1f13e03c42cd8a4f1069f0ae37f03863e ./.git/objects/68/aae0621421a624f0cb1709e594a82b0dac2eab ./.git/objects/68/b7283afc0fce5c97e4ff09a6dc032c910f5f87 ./.git/objects/68/df2c96f44fb932ad5876a6fe4df2cd3d22a555 ./.git/objects/68/fe837d4512a0023c636b803e11b19b1e208f96 ./.git/objects/69/2483d526d1cebda3e5da7369a4d92b5fff6dbc ./.git/objects/69/38f178c69b0001566ee73e60891ab5bcd4286d ./.git/objects/69/423a0bf01188ff5b88d577ca7e63f7b78c028f ./.git/objects/69/973a58c935d20d32e02c4ef97b3301541ec03c ./.git/objects/69/a1ac2d1ae8da255c79ad85a17b9911451baa21 ./.git/objects/69/a456fc2cfcb1fbcc8a66393313421638977d81 ./.git/objects/69/bef66e26e3a17f8007fc5a2e84d7301b08b9ac ./.git/objects/69/c3516c0054f38b400ec8e2ac01eae838a605ba ./.git/objects/69/c86f070fa985568f3db4933941f3337f3608f6 ./.git/objects/69/f1e8e55aecef4fecedf3d990273bfed66479b5 ./.git/objects/69/f49f5dcfb70cfade004beed56b7d1abc898ff6 ./.git/objects/6a/212a4dd638d753edf8efb2f09004f9adda0d9a ./.git/objects/6a/4ef24dfaf98018df15ed2045da1514acdc39cd ./.git/objects/6a/51e2e408553577b9890301ef9fa937d1d3c247 ./.git/objects/6a/835f3c39d61368b78e4e26f07a3d388d2389c6 ./.git/objects/6a/acc0254b0cf670a522219efa862fdd1c0815df ./.git/objects/6a/bc73d52eb57ae9ac34ea3482dfe67cf035a2dc ./.git/objects/6a/c40d1af1572f825b8bb534fe21a8bc5564ef5d ./.git/objects/6a/e65260dac39e677a1528e749e3df28127e7496 ./.git/objects/6a/ee3015da7375c609302581b9f86560ea01e628 ./.git/objects/6a/f81b6aeb716abeb2c3ed0ad73c3c1bd2b821cf ./.git/objects/6b/48c7ad2699b1c331b6a2f274a85f2f4fa07fa6 ./.git/objects/6b/53cd5e15943532c9e0a3c6934b0ef4eebea14d ./.git/objects/6b/845603c48292ed7001242f0d812f05092aba1a ./.git/objects/6b/bdb259a431ee65873ee607e39617180aa1e9e0 ./.git/objects/6b/cc927db64fedbfd651a6f6755ed0cf85bb3f3c ./.git/objects/6b/cf15f0a97cdd64bb21601ac63d7a41ae5ed858 ./.git/objects/6b/eadc7272f67600c012ed48f512886d7a3f2031 ./.git/objects/6c/005620e0c46148c83d3a1fa1eaad89df9c8415 ./.git/objects/6c/133010b4a8be0956c7c4fd9e8a91935d0dbd31 ./.git/objects/6c/13f8b851c687a5631ffbfe456f0915f127a3fa ./.git/objects/6c/5347164d793ce58e41729c2b723ba3954647c7 ./.git/objects/6c/5d466692e8d02657144fcdf08b762ddbca982a ./.git/objects/6c/6b2da689859bf7263655c9d27dd7bc68106287 ./.git/objects/6c/79eaf6464acca55614c0061ca69db1aa86f96b ./.git/objects/6c/96959f4641b1fe610cde5582bccfbfd7056a14 ./.git/objects/6c/9cc3d6e5714060ca03e3cc185b01f4de27cb3a ./.git/objects/6c/b17a6cfccd3019aded75156c1d796bc9d1628f ./.git/objects/6c/b369c4142c9a30e4920152d182ddf1bccc0a3a ./.git/objects/6c/c7cc249676503ca135e2c6c092dd60fdffd003 ./.git/objects/6c/f7f2b7abf23442cb55a87a6ba833ed980816c5 ./.git/objects/6c/f85eab72781ba66b62f540fd9ccccdc7d5c06c ./.git/objects/6d/0de5b7ba45a34f5b35f7901be3c005edb545c6 ./.git/objects/6d/280fd0c5e52c7f7ec8a4d781c91957509acc6a ./.git/objects/6d/3ae3a0e3bfb0cf38975b4835c6ebd9ad04fc52 ./.git/objects/6d/4d6614aa7274d4fd4988ac4fb485a74e1daa40 ./.git/objects/6d/61e63b5285af908e71dc869421474d82978b57 ./.git/objects/6d/88788062ab1b5f755f62146d4ffd4d09e9b796 ./.git/objects/6d/a86517a00911bc094bb7cd85bba308f704d40b ./.git/objects/6d/c9e77c9dfe7c807650384c1d2cd88ecc2f1ffd ./.git/objects/6d/d01e99d25c02537e84dbb7ab437c6ae26976de ./.git/objects/6d/e1de69dad6c0aaf411bcb009691c10ebaa0667 ./.git/objects/6e/29244d0e51ef4f8b858781e666daac44f72607 ./.git/objects/6e/3e0c2a55486cc3e4e655b5ce600db8148f8065 ./.git/objects/6e/4830b091dc37b7d779b9dbab39a4bca7e22674 ./.git/objects/6e/4aa9212c74017d8a2556bbec51c1281a936113 ./.git/objects/6e/699ef4fbe0ff7983ee8ae761b5a9ace75be898 ./.git/objects/6e/6c70abee219a1947d19045b30bff8a7b1c5e6c ./.git/objects/6e/79402e9934b51832d5592bf3f2a080897efbd2 ./.git/objects/6e/8ca0f280d237357c488f46b82e5ba3fbfed719 ./.git/objects/6e/bf72c0ef6211361787c3629330849cfa9862e2 ./.git/objects/6e/c2e761a7e3f2612586f1a0908dfb340581bb57 ./.git/objects/6e/c4cf889e6f3cbe7be0d1fe77cea15c6b357c53 ./.git/objects/6e/c60f31f7664f15d9e91464c69d18be67255332 ./.git/objects/6e/de0bcd7ada811786fc768b7fbd12a7313893e3 ./.git/objects/6f/037aa3b23439cfda6d5a21d91722f8ed657e33 ./.git/objects/6f/2c2e80a4d0098bd43e94cc20eb9cb87847d1df ./.git/objects/6f/4bf0ac076d05f7a6fabf2ad2fe332d44ba7b5d ./.git/objects/6f/74e720b4714f69de8cafcfeb710bfab082077b ./.git/objects/6f/869947c24f3bd2643ab067c989893d798dcfdf ./.git/objects/6f/c17df10770cee55789ec6e46763123cf08e165 ./.git/objects/6f/c863207b98f43e56a3db344b58090493c7d8a5 ./.git/objects/6f/c8a64ff968a34dd32bb3100c04feb5e4541282 ./.git/objects/6f/df8b589871c8b35326f2a1d2c7c33a446e12f7 ./.git/objects/6f/ea3f479806dbcf6db63d6ccf0428470e85ca04 ./.git/objects/70/177dcd0aeff464518346bb5af6a174c57a3142 ./.git/objects/70/316babde8bfa3d61aad43a8f375a25f8638933 ./.git/objects/70/3e855d523264f53023160106f6c82debc931ac ./.git/objects/70/508a144d1c791eb35b3263691e5ea62cb3a197 ./.git/objects/70/5a9e63015e3e37778fb5c3a6f5c0d8a5eca1bb ./.git/objects/70/9fdc60792d7a973e4403790dd7a13056eb4694 ./.git/objects/70/a25714b12e84d5cbdd32b4ecad2e8368d81ee1 ./.git/objects/70/ac53d94ba200f9786ca2dfd5b2b1584ee40231 ./.git/objects/70/e63d9518297130198959dfe32de03e5f1591d9 ./.git/objects/70/ec4b2252dbca03a7449dec1a7a56e9b5f3ca1f ./.git/objects/70/f3295713dec03092339990e53a7708cd9cd2ae ./.git/objects/71/03fb300b8fa8fb8774b0ad126f8b647864eec5 ./.git/objects/71/208a0e0038774017e2a31a3658452981d62b14 ./.git/objects/71/298e98e79014b3fe8487cda2691550c2b9c3fc ./.git/objects/71/4f3478d39c7bfa548c7ee0003edccc580f8e61 ./.git/objects/71/5691e6d2c39e135169a9456e11d188f8f0dfa7 ./.git/objects/71/5d8a0896180320437b4551bbe0d889f4797328 ./.git/objects/71/66ffcc0b1e8a27eb524652be765790456017c9 ./.git/objects/71/8e4bf30242f01dc8d306a298e47564a28615ab ./.git/objects/71/96f77e25c3efcb0dc3ad876ba33cd0652e2428 ./.git/objects/71/ae08528a9e2ceff13c934508dab33e8764bb96 ./.git/objects/71/badb241887af48265fbde8784aee431350b7d2 ./.git/objects/71/c8ed8a8bfea5322271f1049c6d8fb58e51f993 ./.git/objects/71/e6b2e61e596bfa732fbc102e2bfcd6fddd9833 ./.git/objects/72/071de5b780e9b2e4af1554c848ccc12ceaa89b ./.git/objects/72/339509f6860ed67b060670f79ad3e184ba863f ./.git/objects/72/46368548ef7ec5b72c2974b36d7f137bd7dabe ./.git/objects/72/94868bc5a040a1307d76abf789c9ee20e1e89f ./.git/objects/72/b1b391f2bedfc2ea8dc0b1079fc1c31e941a40 ./.git/objects/72/b41dbb4c41c70f8663afbfd66c04d238a5a216 ./.git/objects/72/f565a48ac113ba61ec17b30a78867d97851316 ./.git/objects/72/fa1e609b4bc16866f746a97306ba4af8530200 ./.git/objects/73/2897a9221f2b0d4e27a9722fe83b92691f41c8 ./.git/objects/73/3768bff3cd36da2b2b6ffad114117c8a6b77a7 ./.git/objects/73/3faa53aef876a2898222235b28095c837d9154 ./.git/objects/73/59c29261929b3d16309698333d5d9c9301e9ea ./.git/objects/73/7f110191e13f6d069a22b385e40ee09354ba9a ./.git/objects/73/7ffd11954155ffa17eeef8e66a1d3903ee71bf ./.git/objects/73/8ce24902e5cd7c64ee27bd33a75f9ccc4aa361 ./.git/objects/73/c6b014bee52450049f08830342924eb328e491 ./.git/objects/73/f5a6a5cb81ae356d943d155efbd513b4ad7d53 ./.git/objects/73/f70fd64577a92cef52a712887af7e0baa27bd1 ./.git/objects/74/136d6645a55eaf66652e38dedf31e7c1714783 ./.git/objects/74/171d053528e2aee67028b05ed025f5994b2bb2 ./.git/objects/74/5c21038ee4d6ad461f269e6db7bab7ba54765c ./.git/objects/74/61b73a9624521662d1f515cd5111621fb655ed ./.git/objects/74/69b830ec5fe6a7683e6bcfad45e8b93756ff10 ./.git/objects/74/6bceef1d4bbbc85e5c1e19b38971d7ed9ca059 ./.git/objects/74/72335310709c97a9fcdc4d7b4674de5ad8a441 ./.git/objects/74/77c3bb4e1110bcbf42c62bb019110009b364e0 ./.git/objects/74/7ea49b71de2f2984fa7d7676bca66c94c3606d ./.git/objects/74/8b0f7ed40037512ddfbb1a5404c54df0a2df2e ./.git/objects/74/9a9922a8b8d168921978540581ae116a6b549e ./.git/objects/74/9f421a3a44987c2964501927b5a6edcdc583ad ./.git/objects/74/afda456a7ca03f96525364b593621cdd823067 ./.git/objects/74/db22090b44fc6e94eff2797b038452b268f1b9 ./.git/objects/74/f269a20285034bde6202367c0058f03a6c0264 ./.git/objects/74/f83fe32ad0a5030588417dc5c38b092fb55c76 ./.git/objects/75/069acf6c14ec769056324cbb5da692f11b6452 ./.git/objects/75/29e6b494e18b1843667b87f293ef53710b97fe ./.git/objects/75/4aeaec64ef7043c6c10c7ba328e7839b7e2ac2 ./.git/objects/75/552df2ef3a4ac375d0ba6604096d0625827322 ./.git/objects/75/6d5503ea3ffd9882421d524436013926e4d66d ./.git/objects/75/745c6e7e7461647fef21373b0dd5320c80ac35 ./.git/objects/75/95b4d0914740292c9e237df06a9f83d3639ca7 ./.git/objects/75/a79b864b47c38ee6dcf6e4ad615a689eba62ac ./.git/objects/75/bc2f0b13f0290db9595203740bdca1e3c4e855 ./.git/objects/75/f17f232fb85f85cbe03b0ec9d1c12f9adefca2 ./.git/objects/75/f3d2724037db2b6b33e512560140aba5290980 ./.git/objects/76/2088517a426e683d7047548912d905919681ef ./.git/objects/76/369fc38b7b26bda73bdfd8d1026cea022caa45 ./.git/objects/76/3c5dda1ac60ba6eb196ed5c0ba5bf7464d956e ./.git/objects/76/50fc4821b604ea140cd03ea75c66e4e118a414 ./.git/objects/76/5f05ba3b56d71689cf6eb03ab3a219726dd152 ./.git/objects/76/62eacd6c750ab8ba57f51c70d98cfa48640deb ./.git/objects/76/75ab841e83a7408889d77194462a0659d67028 ./.git/objects/76/948347273991ed6b93a8082dc55723c2f45343 ./.git/objects/76/b0319915dcbed6c46637e0ed91e0fb041b4459 ./.git/objects/76/b86f02d7a6b6c3cb8985a00d3083b72b31e296 ./.git/objects/76/ba8b53705ef8b691b0b1eab49d036c342eb700 ./.git/objects/76/bd287ada9a0bf4ba1eab249c0bd13739111cf8 ./.git/objects/76/d83460508495143ecd1255bda48c15f86730bb ./.git/objects/76/f0bb15b1f876df9c5fcdc0ec65748cb5ac8d3e ./.git/objects/76/f0fe99586e59945aa81996b179e5f4ab6b4bf0 ./.git/objects/77/01d743445c2c05d90ef67c4525d1635b1b0b26 ./.git/objects/77/0cca92aad86464d8bf3e1b986ce128c6471bfc ./.git/objects/77/1588649a27c68f6efca80b3f1f4c89b032f68c ./.git/objects/77/19ce58d7fa088927bc5649c95884da9e203f03 ./.git/objects/77/1e500fc3d45e8c73395b6be30434ea76c3f852 ./.git/objects/77/2fd5348cac29c8b4164ecf46a3fc709ab8d87c ./.git/objects/77/73550a8391358014d544367cddc897030e5e8b ./.git/objects/77/76142ad607052182d9d54467c8d35f399ef013 ./.git/objects/77/77d226af0c6686c083b025a238b3d1a1f5c912 ./.git/objects/77/88536ea95d9a6ad1584be86f04a863c88d9331 ./.git/objects/77/89e2f5091f1dc9063c340e4b14fb47e0722cc3 ./.git/objects/77/d35f447ecb46e688335d116227742e77dbfe37 ./.git/objects/77/e3a88f1cbb2bc430af61258f93d44c99f6004d ./.git/objects/77/ffd38c0e599c506427b512ba4b22eabbb93aa9 ./.git/objects/78/050236a1df7c602f204dbedec633fb7f54dede ./.git/objects/78/0e65b8aef8a2066f783ec9b0db9687921de4e9 ./.git/objects/78/1b41cb4b979f1c7e4b69868b450586512551d7 ./.git/objects/78/1efd983c1d1bcdc674934b6b080b757805d995 ./.git/objects/78/449cae5af085ab9c3942cd1e470695798aa99d ./.git/objects/78/47f63d57cacb81e0fd3ba57b1a5cd696c035cd ./.git/objects/78/5f5380324f04e86d360bb6f2f24633fcfbff7a ./.git/objects/78/649f3e833877c70f4a1b24b18b5b9a91509b6d ./.git/objects/78/76ecc50ec8da799a5aaec8b53fcfde00d13089 ./.git/objects/78/9902ad925a21d406c3faf54158e3f2ed3a78e5 ./.git/objects/78/adf8855cabc7afc28e3aff65a9ecfd2f25d3dc ./.git/objects/78/d78c0ac8ceec5e312fbf0a8400a1bad7996341 ./.git/objects/78/e74dc709340882c5b94f8f1fea2b818b6fd13c ./.git/objects/78/ebc316c5747524e3c2734868bd480f97454f86 ./.git/objects/79/0bca07ce610cef4ebf4058b425e5984b82abbb ./.git/objects/79/166ada287b13cc3f102faaf90babf6caa498a3 ./.git/objects/79/4242ed1397437ed9405516eea6d0f5c71cdc08 ./.git/objects/79/5192b3a0a03672b0d72647e5b921b78312ae0e ./.git/objects/79/b72fa98b69499c29ca93326bfcf259f172a9c1 ./.git/objects/79/d48a7700b8b813afd77d05ab3289e85806efec ./.git/objects/79/dd66199c755f9e5e9cca4bb2c5bf9b05a50dc2 ./.git/objects/79/ed4cb869f68d2918dab26fe2354c2d4c747f60 ./.git/objects/7a/055548a35762587b600706b9bc9036695d99bc ./.git/objects/7a/0b12502c5765aef31929d79727e2a0dbed8fb6 ./.git/objects/7a/10e5956114100c40460fdf3f8c11241bde03d5 ./.git/objects/7a/1f3e35380d77b72d8f17c9222c5faa1c374ec6 ./.git/objects/7a/260e7cff58ed3f69f83de5a46ecc26ee994317 ./.git/objects/7a/7f32662ad64f0f79887a5c2af40aaf51bb8a8f ./.git/objects/7a/895b08a4a40c98ce70262024567a52f82e8788 ./.git/objects/7a/98a9161b272370f86477c6fc14a872a30a3096 ./.git/objects/7a/b88b18bd7580afc40a90f1638ba9bbef2edf7f ./.git/objects/7a/bd024846d7f7084364155f344e297936231a0f ./.git/objects/7a/dc85fe87db14e8c64d9f7d25c1b7e3beb66a80 ./.git/objects/7a/ddb5ea94b4ed006afa2fcc6a977c301e1ec724 ./.git/objects/7a/ec276a06fd81a99dbb9517183d1329c7ab766e ./.git/objects/7b/0cc3de7a50bcfbf85c795048187e2dac092af6 ./.git/objects/7b/1ebb8feaf9452cc64960999a57b36c37a61bbe ./.git/objects/7b/23b832c34e3da087bfc29a85b7b7dad7983328 ./.git/objects/7b/57f8fc92c47d4832918beee626afa507899627 ./.git/objects/7b/80a9f2e5643608496fd22ee3f748c614afa4d5 ./.git/objects/7b/8409338715867ae6a40fa3d7d86ca91b07964a ./.git/objects/7b/841ed505cedb65a6774dba3cf6b20b774d535b ./.git/objects/7b/8f9706d66e133193948060b927781a9f63be7e ./.git/objects/7b/a58a3db8c2012df07c42c68df2c771151bad3f ./.git/objects/7b/b185008bee3adc3e9e02edb3f378b7fa23963d ./.git/objects/7b/b460e41476dd7cf5081633dac48d28380393d3 ./.git/objects/7b/c3e335f0ac2297f0871ffa52dd9f3004448de1 ./.git/objects/7b/f6bbf9facb75e2721c3e1ccb2dd479cea6bf1a ./.git/objects/7c/0a5afa97c7dd32551ad5878d8bea44e1dd2de2 ./.git/objects/7c/11b5b1743512a8ffdbc1c7eb6eb33758cce9ac ./.git/objects/7c/49fc9df17c842d5c8d860830f83191a51cb228 ./.git/objects/7c/4ce514a60f8f0b60a4befd0efb666165f1f2ce ./.git/objects/7c/6f942353b35239452c66dc583a41781bcf471f ./.git/objects/7c/708038c5d38a1e1c150d52f12274e2f6d2790c ./.git/objects/7c/7dadbdb5d9cdc819ea7eec241687681c7b244f ./.git/objects/7c/98aeab74f93ac8b9e21409af2d9b5c0a8ed807 ./.git/objects/7c/dba09d73c776d39fd7c03bc3fdfa250d565987 ./.git/objects/7c/f80606d77e7c20cd58c2cac96ec4ec7b4f078c ./.git/objects/7d/12ef53a4b0f30a4e90ba5fdac728b0d01d268a ./.git/objects/7d/23fb1c8248367435ca91847a11c9b547c2c70f ./.git/objects/7d/2dcf3c2376c4c96e946e45209e266a1250d334 ./.git/objects/7d/58cd153854d28649722553abe92ccacbbf8425 ./.git/objects/7d/72b789e814a2fc9ea7b3324f93dbb9c1994142 ./.git/objects/7d/7e08f85f0a050761baedd7393d8f207d3ea8dd ./.git/objects/7d/87756910e74cd84a2b29b5a58c3d6f8e131a97 ./.git/objects/7d/df6ca5eee03a9b9904efc06329a3a4a1349ab1 ./.git/objects/7e/20f3e7b5598e4c5f3390406ce2c688651aedfa ./.git/objects/7e/2e2ad2b76d8ec32c087bbd2f6a2d2ef0bcf24e ./.git/objects/7e/3c5b018b178cdb57c50f31b6b4a5b1dca3cd37 ./.git/objects/7e/451676f975db20270d4c01bf743948ec2d43ae ./.git/objects/7e/57e7b0813aba94d462e7886bb4fd7f13ec7c56 ./.git/objects/7e/5f6f29f7d25857a181e198e459edaa7e121f2d ./.git/objects/7e/6678af8007f84e3884d8749d53eff20ae98589 ./.git/objects/7e/c8734e4e5d4d864fadb1e56fc97c659b1e98bf ./.git/objects/7e/d67125bd9a6599fe99f194cf68ba457b962382 ./.git/objects/7e/e4c3a05f9e2707080eac955138370bd1c5948a ./.git/objects/7f/116ef34341714a95aab25ee37c0f653d647809 ./.git/objects/7f/24aa820e848db5bcf25e3ad7cee9eacaac4a98 ./.git/objects/7f/2e10195c3b45ab9c046a5687d3becaea3f9cd4 ./.git/objects/7f/3f111a718b481c939686c5bca612b8f4353de1 ./.git/objects/7f/4a937f3f6eac9c46b5b6dc436cb276016cbc69 ./.git/objects/7f/5c32d85a15da97ec29880595ad28085d2a3e1a ./.git/objects/7f/6b9bbf5535499aaad2e7cc3fd1d4321ba2beb7 ./.git/objects/7f/b1bec47668befc7b293869cefd9b00f0f51857 ./.git/objects/80/362457b2cfb305ce1670032e9a1e0b5566cf29 ./.git/objects/80/41083eb56bec30c21f5b273ef2965f341b1ba8 ./.git/objects/80/421e81566b4d5021626ab9645bb1f9190e2346 ./.git/objects/80/786adcd85758baea9a7488a80320935968fee1 ./.git/objects/80/88a2eb327b939e3d85fffc8c10beecaabb22cf ./.git/objects/80/9219e5203ce6649cea9cadde7a19496808057b ./.git/objects/80/b9171f2b50f480d8b796dab1888978a28d8e97 ./.git/objects/80/bf49199a02e8ff36b839466f8810cf39c848b4 ./.git/objects/80/d8d74abf79d462949334c2b445f62a334f4fd3 ./.git/objects/80/edb9433737b7ae311ddf48b77ffb6c92728872 ./.git/objects/81/34389be51676e8a2184e535f5f93a137f6634e ./.git/objects/81/619c7670c4c722d67c1859735753f21ab1ea0a ./.git/objects/81/646dc57979ad2440a78f28e8198e219e8f3ea9 ./.git/objects/81/66f53efa83ef0141eb381d3b546be547d41ab7 ./.git/objects/81/9ca6aa50c7ddcf7d98f6d7b6477ea7158ffefa ./.git/objects/81/a4ffef11a6c80e4de2b8829506f4f1e3e700be ./.git/objects/81/b4548b9b5fc342774a0bc08aceaaad4beec2ea ./.git/objects/81/c037d73e81d84896dc0777c35bccab16f064a7 ./.git/objects/82/08a26590d27537eeaffcf036a29721dc64ed96 ./.git/objects/82/0f65f1732951c399d9ded83138904902f95863 ./.git/objects/82/3d4c26c0dc282ac271cb447cce09a5976080fd ./.git/objects/82/595ebdb9011cd66e9eaf242c392edce005115a ./.git/objects/82/6059ecb9addc8bbd93f0dd14cfe5cbfbae51b2 ./.git/objects/82/863ab3a187daa374e6606b4495a42b0155d149 ./.git/objects/82/8e4034d33843cba9a5baa0d7d14ae48ec8691d ./.git/objects/82/c48e6d19ba258c40cd5b5222fd8a3de1c1c79c ./.git/objects/82/c6ca07c720e79c242ad57033717eaa463126b1 ./.git/objects/82/e1aa0320c150cdc2330d33f2ef3405962f1057 ./.git/objects/82/eb47958c04b5f1bdbbe8b1c1a2cd2d9388edf9 ./.git/objects/83/0939764d84e093081d4261242297aecf788b17 ./.git/objects/83/141207965bd337d7a3050fc140d3f8ed33b7ea ./.git/objects/83/15f8257a6fd2b0a4c1a81121c0643182ea9e68 ./.git/objects/83/1d4eacd526a3ee11fa5392ba2f6c5c9fa46cf3 ./.git/objects/83/21246a61b10be0f67b64a3001be5d9f339092c ./.git/objects/83/36d99b08317e1fe6bcc470297b9952c9584daa ./.git/objects/83/5586479a3072daa417803b3d64edca0cec58dd ./.git/objects/83/64888cdb1777eca26732274942a98f7c00174c ./.git/objects/83/6a80c7028fa22e42ec7febb38b76c3b2e7bff6 ./.git/objects/83/7bb70ac3d4515ccd3c5f351657068792806c4e ./.git/objects/83/8842ff765f9654d91330c633e184af4c0872d9 ./.git/objects/83/bbaefa8e4d6ef0151e0ef9e3fd328026b73839 ./.git/objects/83/ca5edbd7761077265933b2f8d12bff30c85fc9 ./.git/objects/83/e584cfdf3d639be156fecbbb8ed383e931a960 ./.git/objects/83/f0d3cf7244bb063929654220455deb9011fbd6 ./.git/objects/83/f2da14154300ff2190580fc81015c84f5390de ./.git/objects/84/12a5df6b85050e1c20d2531bae1d130d372eb4 ./.git/objects/84/902710c25bb92ecbe607e99d70094d853955cd ./.git/objects/84/a01b17ae829910476ce413b752b19f19ff763b ./.git/objects/84/a462452545c93cd01f3bea75c4084f3d533ca2 ./.git/objects/84/c1017717a069e54b8446a67eaba1c75df45b4a ./.git/objects/84/c31b091964c0c32184a037297095f71167c9d4 ./.git/objects/84/c329bc3bdfbfbf7e25498f4762ec6bd5cce383 ./.git/objects/84/f3b2035aad21a23a433b0328bf1ebef99d4bf1 ./.git/objects/85/3643465fa3012be07ac3887ac125aa50b85391 ./.git/objects/85/3781c16be7ec487bf3b773964f8c1bb7937dac ./.git/objects/85/46dfb7514ae0a5b0611f3a0ec4d71fca6e964a ./.git/objects/85/4e6cc065deb5b1e3d17fa88be0c9cd821f1253 ./.git/objects/85/565cbd8d69704234774a7b4cc069340a5abac1 ./.git/objects/85/5c6fb963d38737019671e150bdf38cb37ec853 ./.git/objects/85/5eea2630c7891918c0018f4a3340197d986979 ./.git/objects/85/95fdc8bb2ed1df042f2ab04d72c4cae97edf2c ./.git/objects/85/be1bf27e4fb6ac820f8858dcc8edf38f6cd52f ./.git/objects/85/c5ea55b476153d5eaa8650301f34618d1feea7 ./.git/objects/85/ce31de16d0cb84ea39f982f011319c36405cc0 ./.git/objects/86/13898c19a03729d21899a7616e81d7e8109933 ./.git/objects/86/3665ee933ccf2472fb1d04e668a4b059fecb3c ./.git/objects/86/42fb73e6fbdfb758893983e9d15498d43cab7b ./.git/objects/86/5103698f74ae7764b970ff87b21e9a86e71815 ./.git/objects/86/9225ce3f7c93aa1012ec4549ed5256464e3e5c ./.git/objects/86/9508d45427ef6ca7e1986214b7304ca1c9605e ./.git/objects/86/a0cbe07539237c7fb23c88096953845940f9b3 ./.git/objects/86/aa943f39fd1ca71287ff0676cd82ae2017a6d8 ./.git/objects/86/ac8b0cedf5ba96cc45a80aeb5596d7870e7d16 ./.git/objects/86/ca3a14330144acaaecf7e853791f9645ead1c1 ./.git/objects/86/e6eaf8832ee2b093c2c92c205e295072b36f6d ./.git/objects/86/f27df8a8d2dd0c6ee4c4417445abb7f20b9291 ./.git/objects/87/21980e763701c8d19f8cbcaac2a4f5a33361a5 ./.git/objects/87/45777ab02a094d3df4b87028a8082d46d3f3c7 ./.git/objects/87/630c456ecba1f791035dc3e87d96fe40b2a962 ./.git/objects/87/85155ec333e5e6ee3decd3ff47845cb7217c19 ./.git/objects/87/95d86c69cc2feaae18f88a299283e884e1f21f ./.git/objects/87/b7b716090eedfa996eb07b01fa7a869d4f8077 ./.git/objects/87/cebf3413b75e6dd0e5e84ec42093fb41fe4361 ./.git/objects/87/d684bd3636c21b6776535ccb8ea3ebd6f99d68 ./.git/objects/87/f4c33ef20fb5bd03146b0a1cf514f5cfd65029 ./.git/objects/88/11a14da0eaa53d444c450d77bd89dc6d98d6fc ./.git/objects/88/1fb53570b441c9ddd19a6269c4ca164e816da9 ./.git/objects/88/20c07afbb0414c003226c525ffe0b0655fd858 ./.git/objects/88/69a5049768aeb3f67bae844c1cbcd8c4109e3d ./.git/objects/88/7cb330d1335e6c8adb0a0e9fba69de228b094d ./.git/objects/88/b6e297baeb2fad309bfbac549c68d695d3b224 ./.git/objects/88/bc7e6e30984a64544898579aefa30a9c9a8e10 ./.git/objects/88/bccfeba72578c8369012a564e182a988ecefb1 ./.git/objects/88/d2d7ddf157a7ef6a77a01b1266be9926c8685f ./.git/objects/88/dd253618ec23c38bf44d1c93d9020e7f94d0b3 ./.git/objects/89/14c05aa8a7feeddefe8986c93bcd72323e8abe ./.git/objects/89/58b94dd8fc10143a29abe8efc1255191cd58fe ./.git/objects/89/65b15100b81dca92393de84b17e5d89fa03f96 ./.git/objects/89/66214a5cf0c1fad1bc02565e37eb9916d5f896 ./.git/objects/89/69d6de5ad9a46a609b1f1ea8c788602e2b7d33 ./.git/objects/89/9e96e446ea4bff248f9d0f52013783e3b6e5be ./.git/objects/89/b94ba324c66140f41a6ab25b5ea181b19eb7ab ./.git/objects/89/c3f4fc9d0b8617b3c420b4835748a9127b2896 ./.git/objects/89/d14231b68936df97298a95929273912329b3c5 ./.git/objects/8a/1608f88d5968f4634528287c848319ebdeb5f2 ./.git/objects/8a/1fc83bedb12376ddf9d89eaaa96fb520eb19e0 ./.git/objects/8a/2f784ae75a56620160e66168d390c6c6242f30 ./.git/objects/8a/3471269c1a569d0c549dbb881e8c21cd332db5 ./.git/objects/8a/35aa087b5e9b9ec627e54abaa05c770c5095c8 ./.git/objects/8a/3d2d5c023e27390b825ad030faf62df822eeac ./.git/objects/8a/409bd747c087a28b079e44678a37181d677348 ./.git/objects/8a/53cbbf70240e09cfe3d842189d41fad4f6ada7 ./.git/objects/8a/5cff561fa4f98326cf4a42e933e15075ae6fba ./.git/objects/8a/61bf135d1bf57d2b48937c393b7264d3fc6e0a ./.git/objects/8a/6ea91c7efb050db13086a342f3e6d217661565 ./.git/objects/8a/8ac7add722242dfe7a5eba6382148333351ef0 ./.git/objects/8a/b10c3ed9ecf04097472a0246919b7d0cd436cb ./.git/objects/8a/bc568ec08550f6f816e2aadeadd0e364009444 ./.git/objects/8a/c973f8faf13c33982070181adc5635b3ce9ea9 ./.git/objects/8b/2dca0b8a1546c0b2bc9b2a3e95ec615758b0d8 ./.git/objects/8b/4753e933c11db9b623dc31db1ac41226cc6403 ./.git/objects/8b/4e0b28c83e707c74fcfc6a53f3f084033cfd58 ./.git/objects/8b/89d1916b99da9b211e99214c4a4f59484f25ae ./.git/objects/8b/986c1dd46d9d846a709192c185a34f1cf281d1 ./.git/objects/8b/9effa65b2229ca5dbf2a99d2d7a9628c408e66 ./.git/objects/8b/bba31ea374c3c4a548ce7de1bc9ed8f50c0ae8 ./.git/objects/8b/c13448aa1de2751def9023a43d02567f477b28 ./.git/objects/8b/d706f496158487c9de8f0cbe9865377c987eb4 ./.git/objects/8b/f3f2cae6b77c005d8d22c63e41f02d060d0d05 ./.git/objects/8b/f66f3f46d5c18092f35a6810feaf5230ccf952 ./.git/objects/8b/fee251e1ff46537c54413a069a21532c41b55d ./.git/objects/8c/06b80722e2dc67af3621a79dc6dfa7fdc3d292 ./.git/objects/8c/490acf569755aa456bc09bb9d3866b7e130466 ./.git/objects/8c/6a8138d6685a2022d820f84f4831b2b11ac0da ./.git/objects/8c/7d126de45b18e028fdf56924e97d8d0c1de46d ./.git/objects/8c/ac73313d147bd0ce67004002299997d68cbba5 ./.git/objects/8c/c3718465c06d4435004976e5ec6255414aa643 ./.git/objects/8c/dc7766cc071114739d5cd54537f99936feb37e ./.git/objects/8c/edf957f41ef470688927da131141430899684e ./.git/objects/8c/f2890887eece7262bc2ba7a06a6506baafc9fa ./.git/objects/8d/074add7ab6e94241471ecc1450b38d98027c48 ./.git/objects/8d/2ecc1234e9548e78a8acbb33985d896bb59ec7 ./.git/objects/8d/2f3827f92c9a4a4d262276fdad45f4f224a8d1 ./.git/objects/8d/56ed5e1ed1687154c35b1f97dda792a026f2a7 ./.git/objects/8d/5bd58790d8352a72e69a8c006d894447c7883c ./.git/objects/8d/6f0b0b80dab50ca67fcd34e3a1e85175ef4b87 ./.git/objects/8d/ef8448c53dc3a5336524f5c01a13a9d45b02a8 ./.git/objects/8e/2874dc8faa8532e5b855b46aa7317925f5dd58 ./.git/objects/8e/2b4e3e5f1bef2718a1a873e4009d70118b44e1 ./.git/objects/8e/2cb51c0ac2a8fb17131c4319ea8f240f00eb92 ./.git/objects/8e/2e4453dddbe6c4c644e514ab93dc9a42e0e67d ./.git/objects/8e/449b53e9104963b00d2cb3270d63a5a9dd697d ./.git/objects/8e/7986fa76d74b5b5b4be6d9d3ccfe72668dfa6c ./.git/objects/8e/b1685a0590bc3afea9924ad70394a711bb3b24 ./.git/objects/8e/cc1c1f2eac31605a6001dd1530ffac59717708 ./.git/objects/8e/d3436d6910119e5de6952973e2f8a014cc08da ./.git/objects/8e/ece3e2dc95e9ace16b13575043510df9fd365f ./.git/objects/8f/0c3c2b658f89270e90b67a677147e0be2c28e6 ./.git/objects/8f/234768c0f24ca58ac4f18ef2f45840a483da95 ./.git/objects/8f/340b9ce14bcc4c6e3eb18531e0e2c23a54d5ce ./.git/objects/8f/68676b5415c0f35d337abe42f40af9dc04e84f ./.git/objects/8f/8ac79cf64974094d547479993d9fa9856ab44e ./.git/objects/8f/991634547bad3ab154ecc4b00333cfbc7fa5b1 ./.git/objects/8f/b8704d11700f5792f04b9fa8eb4427afc978a6 ./.git/objects/8f/c33cfea198bae6c728516149aa03b38c0d5855 ./.git/objects/8f/c7e75ab98e3dc7eaf66e82eea8f8f755909939 ./.git/objects/8f/ce98e57368da120377f8b48b37a29da4f731e2 ./.git/objects/8f/d46295efdacaa6755f62904469d3d9e21b732a ./.git/objects/8f/d55fde4ba98379af9a4b004adb203981272045 ./.git/objects/8f/da0193f3ad1c0c367b1dff23d9e757d0d05786 ./.git/objects/8f/da5885aed3dae39f8ccbdeae6e0fc5dbd301e2 ./.git/objects/8f/f5048fe060e4e58b972144f15b02e0e1182cf9 ./.git/objects/90/0889a59edbd99b2d923021b00a46f2c6c98eb6 ./.git/objects/90/0f663896ba2217e3fc9d1c80d8ffdc6d6cc4ff ./.git/objects/90/36d563da3daec878dbe76d39e50ef99948ac1a ./.git/objects/90/40abe2fd55cad4fa0b6624f443a9b6689e13e7 ./.git/objects/90/481e28bc324b256ea37051d60872bedb2a8ea0 ./.git/objects/90/50e4951b020ebac4c5581ef4406153ca459b49 ./.git/objects/90/5b6486b5176916a31f5e0f8ce1eb000727d2c7 ./.git/objects/90/5cd50b23fa3712d2a0e1e02209421977af6e88 ./.git/objects/90/864ea3b65897110935f0b289f8f7514a22283f ./.git/objects/90/8afdc787565a08c5a84be9f8f6b5daf02258f3 ./.git/objects/90/ae85a5bd8e3a2d8e8f0fcfb4f490e263a48a52 ./.git/objects/90/c59c238242ec985bcf417994e96fc8f32202ef ./.git/objects/90/f040273de97365900bcab06a739a4eb1afba44 ./.git/objects/90/f505942d744627145ca6a865be0201364d20d7 ./.git/objects/91/0da9dd0716a7f9601ba18e37812d76e0d19767 ./.git/objects/91/5fed6b88dd6f16cf825bb941f20cafd698f312 ./.git/objects/91/86fc625cb945078ed5e53420d8a645c428db87 ./.git/objects/91/959f6be0df4445ae6cdfa70a7fca92caa07db6 ./.git/objects/91/a9608efed44ae2dc314e1f13a44c700de084b7 ./.git/objects/91/c4407670554c23f4a4c1ab9d5bcdbab4b51d6b ./.git/objects/91/c6318f76baf7e985c64bd708dbfcad6f1d39a3 ./.git/objects/91/d3b81b481a64117c0bd9f1ef1e703b68cfe90f ./.git/objects/91/e4e37b8207bea887307e54ac4d21f76e1de83e ./.git/objects/91/f77d9e2bcd6a6569f3e6dcb5db6ee4a93615a5 ./.git/objects/92/11be719ac5321e55a0124137388dca65c4da77 ./.git/objects/92/311595c2801e0b495e10092588a81da51c2a4e ./.git/objects/92/3f40ac0745f6a7f3a16429d8d8d7b100ad5b1a ./.git/objects/92/50b4262f545f3d7d14ddc71f5a490a6fe18ad0 ./.git/objects/92/75df2ee4a4a987dbb1c9bb6f24289ff677c2b8 ./.git/objects/92/82af0c83ee25b1f5c02777488fa832d80480cd ./.git/objects/92/9349d761b1c53487b9239298ab9c7b52f6ac52 ./.git/objects/92/bb269496de226622ce52fc61ba8e16e0182888 ./.git/objects/92/d07a988cea0bb0a6e242426598b1360f806c61 ./.git/objects/92/d27df77812b9bfdf3e3c30a89ce4ade8173d72 ./.git/objects/92/d6827c64637c0d30c0f5f8490e9d909911b36f ./.git/objects/92/eb5b72292af162941816b0e8e8a0771a271dc7 ./.git/objects/92/f6f5ceace595e5eb53351515e7f43e501b3116 ./.git/objects/93/01f84f2a0cd551f4bbc64a21db0dc20c445adc ./.git/objects/93/2897dbe810f02ddd9e926e04a05c024f8e6c8c ./.git/objects/93/53854efa271cdcd85641cc830028dc97d5e4b0 ./.git/objects/93/8027561732804cd9bbe790baa1164fbfc7abca ./.git/objects/93/a80060bec40f829539f85a71fecb6101417f8d ./.git/objects/93/d33c77c47949aed23f6954b7616e1fd0ed1836 ./.git/objects/93/df6425b1e6689ac63834b532f28c39d51c1ecf ./.git/objects/94/02f26144b7b3e936c7a22d16a4c9099ae83cb2 ./.git/objects/94/209b7ea95fcf639ed59609d3c6b0d4c6e84a49 ./.git/objects/94/2b0b0b8842158f17fda66d4169490b301ac7b6 ./.git/objects/94/3c09185a14ddad821929a961e9e5dc759aeee7 ./.git/objects/94/3f1e37cc8e950fe976a78e440940cc7dba01b0 ./.git/objects/94/601fb4dad9b9c2b08db7b65129dfa146370a85 ./.git/objects/94/833c329c4afcd9e1c6a4ba6e1639761465ab83 ./.git/objects/94/988d5692aac76806d28ae94676c8eaf162a697 ./.git/objects/94/9b27402e0d09f0f00b35970953f3887c5ac97a ./.git/objects/94/d3059685b544dac85f36250a70836110006d08 ./.git/objects/95/4b13d7c6738a9635797e8fe5d8c069bcb02ece ./.git/objects/95/5d56b47faf4ca580fd38bf89745874ae9a5c70 ./.git/objects/95/915be6c0d1652811694da79488c109c6b7f6a8 ./.git/objects/95/96a3b0989a45db0cc963ce7f1296b68d072323 ./.git/objects/95/cc8d9a8b446532ff710c652f61eeb01ffb79ed ./.git/objects/95/f30f748f430f3123d98d38a0aa595a07c76f4a ./.git/objects/96/106ac596ad4beebc5c82704c4c2e17f36cf346 ./.git/objects/96/13879652196b789da0569e6b1f861f6c914a60 ./.git/objects/96/2a6f165329b03cdfecdb0f6c90bfdcb9418052 ./.git/objects/96/2bdc343875b0b694759679d84f1135912d3456 ./.git/objects/96/447cd05025004e53ab8a3651fbdee44b80dd86 ./.git/objects/96/c496a6809b56de2ad6e644a3ea0e555971b15c ./.git/objects/96/c552f760039233810865993d906e4eeda6431e ./.git/objects/96/eca371d3cbd6ec80e2cf30fb275beb2f11eb5c ./.git/objects/96/f86f416fa1d974a87da978cc683bb348675d48 ./.git/objects/97/35e4789d81384431ded71bd369f03d36ee239d ./.git/objects/97/563b6e64fdef0b854d0ee4de839f24e30bee40 ./.git/objects/97/57208197e53ab828c40b5fa47dde3760a11338 ./.git/objects/97/609409391e70606960b2fec561e4670abebfe2 ./.git/objects/97/6ede4716fe48a09c9cc2f33e53de9a94e36c9d ./.git/objects/97/ba215778c25f789e9e7a6dfb164359e48fba20 ./.git/objects/97/c22e8864f0a4614e85dc1772b81bcf9d9cb40b ./.git/objects/97/fbdecb18d820c613c5943173cfa355f9a94903 ./.git/objects/98/5ed25835a13f5e7e22d5794a635bf1d71ba04b ./.git/objects/98/6b5f02b077e1de2ab3695607ffb97652ca7787 ./.git/objects/98/6f689c7591525500e84c5dd028189270174aad ./.git/objects/98/820f5c739cbfb5342064310c8b4d8cbd72d683 ./.git/objects/98/8e9ac4cfa379168969bc63f9ec79ff253697d6 ./.git/objects/98/8fa9fb7972fea7ec84b9c47bda7fb59bae37ec ./.git/objects/98/9918c7bd36aa293a9f0517f89834b3d4d82eeb ./.git/objects/98/9fdc43eaeaa17ef16191ccc9b447f268567eb0 ./.git/objects/98/a272251bc511a64f5a6f82ac74cfdc067ced77 ./.git/objects/98/aa029bcd13626ac76e449cf284e2bd98e4371c ./.git/objects/98/d365b90daa5a93e6b58f2d7c4e8b9d147dbd6e ./.git/objects/98/d54d9215c536e8dcab3b46737028c399423035 ./.git/objects/98/e15b757a925e105f3e44392570ef8e173a2225 ./.git/objects/99/20b31784f9f6b6f1c293132da2473a6661e379 ./.git/objects/99/323ec1f7181509729e548e741833e05a380f59 ./.git/objects/99/86a5d039bf12315a5409c3a8d73e2e97e05c0a ./.git/objects/99/ad8b1e2d7643c214ed62016b0f674881dcf483 ./.git/objects/99/beb4f82d0118162600db5df00f952698a92d4a ./.git/objects/99/c301fb301f0d598250431adc2176f7951885da ./.git/objects/99/c718b45b051744469e347a13d36b7e3cf770da ./.git/objects/99/d61bbfb7b30994ef3c7de1bf3a4a34b40c95ce ./.git/objects/99/e6a2c617a3182e4cf1be09ab01bc8ad15fe1b9 ./.git/objects/99/f457e01ec1bca56cb3f3adef47fad41b60c8d7 ./.git/objects/9a/0b6d1f3ff04a579504a7a2bd266bdc271da5de ./.git/objects/9a/23d1dc298deb5668c2e7c2023838d37db6d000 ./.git/objects/9a/31aa92f46475771f30ab2fed782b5082865275 ./.git/objects/9a/36ff4696e52795fda9436a1149646733aa7efc ./.git/objects/9a/47a1177e2cc34cd2c48430cc8c6c01b41d0983 ./.git/objects/9a/5e1e5dae925b3f67f21cb520d7c34f008210f7 ./.git/objects/9a/5fcf5c1db91a052ff7bf06afe3b4281539980f ./.git/objects/9a/6981a310bbbf78751eef1d1aaf8e590367f5dc ./.git/objects/9a/7450abd8f8d1d669f4f682429259a7a5ecb9da ./.git/objects/9a/82d99f4ee5d36f97b5d21e8c7f574135d826be ./.git/objects/9a/8828d9922ba0f3671d5e43e6d72afa717fa574 ./.git/objects/9a/8974d72561fa20b93ae64dfc92657857c4d6f2 ./.git/objects/9a/9b2c0b8f535cd51b076d87db17c928563525bb ./.git/objects/9a/9b4dcdb0e4568d010c60c72e81c7acae375a89 ./.git/objects/9a/bdc634054deb659d684788677b52651289d105 ./.git/objects/9a/d8f2be4b0ebbb88fe84a88870c2cebe15160ba ./.git/objects/9a/e964548e58586ec180a9b30ba2d14f0de30611 ./.git/objects/9a/ec5dc1b7da950d10f8b598d76c33d5f960a0df ./.git/objects/9a/ec9c308e4799d66f0be1b2f5b347c67888eb6b ./.git/objects/9a/f71c4f4e80804c11249cd31d16b7c56eb94757 ./.git/objects/9b/2edd5252cb9b6158fe4ce56217d1a78ccd0109 ./.git/objects/9b/346e26013892db092cf301a31a8b5712e6c7a2 ./.git/objects/9b/468a5ac60413ad155b4deed94405bd2613aed2 ./.git/objects/9b/8df1b9f671a37f1152bdec8c7ac3585a199ba3 ./.git/objects/9b/961afdb0d36e49dcc32f818260fdbc0da7dede ./.git/objects/9b/afb7a62c7dbb062119269df20b73431a8e6d6a ./.git/objects/9b/b3b7444a1b802cd39405291b1afb019b641236 ./.git/objects/9b/b8b139a6d7e2018e413103ee158b8ba2c3dd39 ./.git/objects/9b/b915012612b743b44adf22eea2c28dd0018d53 ./.git/objects/9b/bd8047e95b2ef944dd23814fafc47123a39dbe ./.git/objects/9b/d396a9d47e0ff4185cb8dd12f2b1daf567b68f ./.git/objects/9b/e98f18964130def20cae6143db2071252e4356 ./.git/objects/9b/ed06dd832a1c2182031ce7bf7f2bdefacd8862 ./.git/objects/9c/3554d3983a022e0519c802f8ba7807c851851f ./.git/objects/9c/677d123cea401b37b630ab9ce535d45bd88071 ./.git/objects/9c/6fb5bd5ae7cc14d2209c0f718cd3b5dfe8502b ./.git/objects/9c/79004cb1881b260a877bb3f66fc17d59cd1b83 ./.git/objects/9c/7bec3aec0358fda3a8b95353ecb515d183dd81 ./.git/objects/9c/bc799c23f64909bd70761ca3196337547e0c4b ./.git/objects/9c/c21e8f4a3b53a10bf39535f179b8382d72995c ./.git/objects/9c/db0b2007155d3ec95b185b83e199b551c96579 ./.git/objects/9c/f00fab82bcf409ba884e44e492bb2c9a78984c ./.git/objects/9c/f48bb24066703add60ca774ab80cf59ecf92f2 ./.git/objects/9c/fdf852ec865cb9b8f74804a7e08779c3890429 ./.git/objects/9d/0e6cf6bdc9b334d68b82b390d111be83526dae ./.git/objects/9d/2dd7b4864d1833d0c3b23b2d9f24bbd37a5b95 ./.git/objects/9d/3b9e382969f6e67b9d3ba8b95460226a8450bb ./.git/objects/9d/5cedac9272a0e56ad4bac79e22c76c66ae7dc2 ./.git/objects/9d/607966b721abde8931ddd052181fae905db503 ./.git/objects/9d/7796b8a3068f33744f39640c84b40138c81cf0 ./.git/objects/9d/c4eaacb92a8aefdcb5b702cfeec655b8b901f6 ./.git/objects/9d/f2be5119bb27607ccacc53bbb5452b22351f17 ./.git/objects/9d/f2d2d196b5436ed15d46bd7b1a60e1a6de15f0 ./.git/objects/9d/f3625a70208532d625fdb8be33b7ee5459f749 ./.git/objects/9e/00a21ca1a4d962779910edf91bad843d87d8fc ./.git/objects/9e/1d46f0e4d4789bc6cdb6b4fb608e9b05e533e4 ./.git/objects/9e/251858fe46fb5f1bb17ba8a6b229bb160e592a ./.git/objects/9e/398c35328611b0bfb5ad2641d3f4c511a15a09 ./.git/objects/9e/46d590c0b7c422d626051e350559d6f8b35c47 ./.git/objects/9e/4a46bfb942df7f5f54a788f4ddcffcd8b449b7 ./.git/objects/9e/51a8a04fc6bab42ec9a50a03c98baff85de980 ./.git/objects/9e/64d05aff66370e781fda73b7872505137b6e95 ./.git/objects/9e/6baa06ce13899561d44a2e62d38176eb3f43b4 ./.git/objects/9e/ba3eb8e65c143fb75aabead6f0cfb65477bd91 ./.git/objects/9e/dd6a9a2306c595902cfb39c09f07ea9e68be74 ./.git/objects/9e/e139f2a93e862a81a0c9acfded4ff096235821 ./.git/objects/9e/e7c02771a21f8e4a84aa6b988650497dc63683 ./.git/objects/9f/15da316cf0aafc00c020e0a94b91230319c0ca ./.git/objects/9f/2060239163074c34be79330da91362e45dc6d9 ./.git/objects/9f/56b2d0f441331959100e819f8ab578f4b84d39 ./.git/objects/9f/755d9faa13bb886708f43889180c21f7700e4a ./.git/objects/9f/7de67f11467bd3b4659864baf5c999c969d427 ./.git/objects/9f/881787ce21797f46343cf2f0adc2099d5dd886 ./.git/objects/9f/a108133b04112debe9e64b92185c60a268e3cc ./.git/objects/9f/a5728d9dcf0616d77a369ac7af4fc53210969d ./.git/objects/9f/d3bdc0e9292f1eab7220008ce2d3aa0d157dce ./.git/objects/9f/f35808baf73ae26043f8a55906939fc7ed3608 ./.git/objects/9f/f4b253fc4e7baf08951d99db6fd4423a235002 ./.git/objects/9f/fc4bdad2a8549e0ee3c49c6cd05e3ff949b6d7 ./.git/objects/a0/0482b6136cf8b50dd70d29743fa754573c7515 ./.git/objects/a0/0487f95aced4b45c8234a76724db745926b1ca ./.git/objects/a0/1322383dcdd2adc1a2cbc404ea45ce5d8cfaf3 ./.git/objects/a0/220be3bba105424896db33c2ca1447137eb1b6 ./.git/objects/a0/3e5f93c1d85dc248e10f100baf2db9dd7ba4e7 ./.git/objects/a0/47a0e8dc09c37da8123aec490d4133e056613e ./.git/objects/a0/4cb525d59bb919175abe36e324050cc98d0a80 ./.git/objects/a0/513c2053c63327939b66c13f0d432f98e6643d ./.git/objects/a0/57952d22a13d13c40418f831d0fca871b700b0 ./.git/objects/a0/7fc7c8fe5b76c35d8db589b42a8474c86b2455 ./.git/objects/a0/851948126caf139419bb731b4a88864c6880a8 ./.git/objects/a0/891f563f38b0900eb12126983a36bafd2dcd03 ./.git/objects/a0/97001e3929cca21912ff6c63744eab36d890fa ./.git/objects/a0/a9c3eb4786cae9a659c5874f8b176d28722d67 ./.git/objects/a0/b9b2206a89cf731ccd3ddc5f6b69c4e767e2f6 ./.git/objects/a0/d1bc7b5fe35ad96e9fafcf561eff09094a3c69 ./.git/objects/a0/f0462084ce58467f5203c5c183757b4f4001c9 ./.git/objects/a1/300687c6fb6ee7bfb9553cdd767d624f8740fe ./.git/objects/a1/3bfe73ca23b356056b6976b3d56a0b5eca9a4c ./.git/objects/a1/6369768b95d31b9ff35e9ac4c6b43d4979d374 ./.git/objects/a1/8f892225704b41e45345e90cffa845310677fd ./.git/objects/a1/a2a409fac03d480ef15c18a4d6a95063e2933e ./.git/objects/a1/b3a82afa36222b8097742b944f4c08378b9ad9 ./.git/objects/a1/bf8904e5d4943b9669be0e3a685d1f89625e98 ./.git/objects/a1/c9d888e06969f260bc6f1608952d400191892f ./.git/objects/a2/0b0d949e1491552784c8fe4fea2b231973384c ./.git/objects/a2/2add846fd4aad1d04c93ab2d1b1af910d54c81 ./.git/objects/a2/3e9b4398a83f7c2e791dd6000acc85c0ab8ea1 ./.git/objects/a2/47c0949e9a318a28440a1a7a74358673161ab6 ./.git/objects/a2/507d200a5ee29af9c27619a488ed794146e027 ./.git/objects/a2/545b2b79ce8acf331eb1936ac0afc310c8e0c8 ./.git/objects/a2/73921d8e34ae729b080ae2244686902ca5b1e2 ./.git/objects/a2/7ca9e2e12a5c013cb2cf62360a7c643d7efac0 ./.git/objects/a2/9047d25fba27ced0086a162a545a616b4d181e ./.git/objects/a2/a316e1b54e3a95814558c3e9768496d58b669f ./.git/objects/a3/0870c4f9e2c4dda45e16ab5904942755c279d5 ./.git/objects/a3/21874cf2007a3e13935183e2bce55cbd18ddb9 ./.git/objects/a3/2d6b532fc0c945a181d7ba24596261e5a0856c ./.git/objects/a3/7acffc4305c8238916ff02bfec94fe1b338ab2 ./.git/objects/a3/7b3a561152fcf91ea6e4a3ccbe9218e9f99776 ./.git/objects/a3/82f47f5e40827ef48e0405a3a8792214fe2016 ./.git/objects/a3/8a43ef7ab6c77baa23e3420983feeb1ddb0033 ./.git/objects/a3/97234538424ef417e4846e6123ef5e6b7feafd ./.git/objects/a3/d08fca95beaed44d07f8cea84fddf38651c7a8 ./.git/objects/a3/daf6eb9bd8bc2a32645771f725bf5c6821cf7a ./.git/objects/a3/e48f1762d2c0601efa07b79ca81d1c05ffa507 ./.git/objects/a3/f724a3659a03bf81b66cdb51af934ee8b34b3f ./.git/objects/a3/fe69de0d31ad659d4ab326e1c2d458f2d7cc48 ./.git/objects/a4/1948692d317055988e96e71c71070367a892ed ./.git/objects/a4/24a8080cf1516c9c1deb6e7913acda4b2dd4b1 ./.git/objects/a4/3a1acaf20117fa944d208634918b7ae454f811 ./.git/objects/a4/62c2d917f80df818e439c155a98d635d8e67c1 ./.git/objects/a4/631c58e23276f39d553bb42c92d61757353ec9 ./.git/objects/a4/820e1c552ba4d78f986e09b931931fc8406dd2 ./.git/objects/a4/8247416a26ed95346808ba3c7ae9fa18add763 ./.git/objects/a4/88fd35f1d96843d2fc3775816d6d57190e921f ./.git/objects/a4/b085398c32a0d1e881fe0544a3b96406c0991e ./.git/objects/a4/b3bf701c9a8d71919b73f03ecdb0dca718c1f8 ./.git/objects/a4/b7a913a97c0c031c951dd0d1c4e7b3ca35ab9e ./.git/objects/a4/bc7c964028192891b3fc2e829a66fc090f453b ./.git/objects/a4/c7da1980e142f38aa3937ff25db53a0c968171 ./.git/objects/a4/e5956bcebe3b55e6db1f7c6879e09f396e80ad ./.git/objects/a4/ff75ac0bcdf370b3467e72c544a068b5ac6334 ./.git/objects/a5/0b7122a782a2be7fb4d404ebb8060df3ecd502 ./.git/objects/a5/437664e8db98896ee1a674892a5f2b5c071c15 ./.git/objects/a5/4521841d7d5dc5b09f78e3c746e585344f916d ./.git/objects/a5/4c6ac1cfac7f60def5b488c3bd1b4adcf1b022 ./.git/objects/a5/9adb31180718e0a9757db3fc1aad7704d55a7e ./.git/objects/a5/e8180ca60db59ad09a4b273993365bd7af2a57 ./.git/objects/a5/fcb5aaf65b5e52af8e2ef03bb52c3f3d51f019 ./.git/objects/a6/03b14200037880ebd8dd5fb927f4b06a25adb3 ./.git/objects/a6/1b2c5dd3f7b3e9fb9d23384c5698a1eb4eb8f3 ./.git/objects/a6/32b3d128bea8780505526496f1b4c671e3d920 ./.git/objects/a6/59de25e6638dbe3bfe44ab9e2f913e2fc04983 ./.git/objects/a6/70292edeb91ef3f724ffb4efd523a018aead99 ./.git/objects/a6/75f8b8edf9dcbf73bda154b138dc81686c864e ./.git/objects/a6/82b461eeca94d0b33f432e816e098c99b7c6c9 ./.git/objects/a6/8e733f3d50415c98b1b372df97c7c3761d5b2d ./.git/objects/a6/914a1f02c54978e5e34df803b140e7589cab03 ./.git/objects/a6/b0a044b5d5457b07af00aacae742fc9a891948 ./.git/objects/a6/ce3fcc772f9d9687f2fddd0764c64ea19167b8 ./.git/objects/a6/ce9616411aaf8e9d2413ccf6ec7db1c1886510 ./.git/objects/a6/e32926c95dcb9df4f0781ca3bfbd58186a49db ./.git/objects/a6/eb7d4b70a4ac483e16a165e451f111c50eb6cf ./.git/objects/a7/0868640636a2bb1e276aedfa1423f771e5e825 ./.git/objects/a7/1caf5ef1cf780e0188327c7ba1117452731bc5 ./.git/objects/a7/20d5300f3f7789529d57500cc39887ae4ec633 ./.git/objects/a7/4a1e154821606e93e62b70d834fab69b70731a ./.git/objects/a7/60a9250c7f41e48028d6df07b42d3d2278c2a7 ./.git/objects/a7/76e58e8b98cd38445e324e05290094faf8a9c1 ./.git/objects/a7/810c3138338633cc5fad33e55a962b23c1c511 ./.git/objects/a7/9ed7eb360d40591e8425cc516cc52e366cd18f ./.git/objects/a7/af1f420310fec5535b55e0fea93f6e810006ae ./.git/objects/a7/ecbef2a919d83c1771a38705a5c79b151b40ca ./.git/objects/a8/0a074edce0df36c087a5b36e8c34e1ea4a4ad9 ./.git/objects/a8/3eb003c15cec204de2a0c785ca36d90c0db855 ./.git/objects/a8/538eabf1413f62546f191aea2daf3bcfd60940 ./.git/objects/a8/540fbe0ac4b775baafc2d2faf7b6b559ee4d47 ./.git/objects/a8/5ceecd5201fe3b6f651692ce6d0673c0987d93 ./.git/objects/a8/5eaeedfe8cc006bb2c2e9cb08bce18fc0bac49 ./.git/objects/a8/6bf891aa4b1a4b98c6bcbc7a0c3d9ed56556f4 ./.git/objects/a8/70f58d3672d776b3218ec43573eb36a18f5b86 ./.git/objects/a8/c11bb31ebfff1b13e1df5ef1736aa148b8e2cd ./.git/objects/a8/c3bc96911c0c323efc73eca51ab1ff8e0668f2 ./.git/objects/a8/d4b80353c18977d42f0655ae05cab70ffef2f0 ./.git/objects/a8/fa9bffdc21649fdade1dd9466bd1f7ed921337 ./.git/objects/a9/0688cdaa11576a5c32e6c6a4281049027bfd36 ./.git/objects/a9/1283da8893d8af9174e80245d21edf5b156c53 ./.git/objects/a9/354f7ee8aa1dbbd5647bda2882ffed9de53d0d ./.git/objects/a9/395d3ef30bfb4ec8a6c001b1c505b6a314fbbe ./.git/objects/a9/94d1ca3c8b0e5ee31e161e0802ae0f02ce7868 ./.git/objects/a9/a0015b0f55171c07402bc04eb58e95b89cb238 ./.git/objects/a9/debf878aec2b686d9e30da8a5d52356ba8e612 ./.git/objects/a9/e7d27114101d2d7c67d1cadce52dce9c6f9a11 ./.git/objects/aa/04b7355c19c0866627407d0f23add06d5cff0b ./.git/objects/aa/2ce76bd1c205cfd664f8089c00c46373f3c9c6 ./.git/objects/aa/33151bb9648d8f78ad81a945adce2327b8a931 ./.git/objects/aa/34f1fe68dba37b8808480541eb15353f761580 ./.git/objects/aa/5ad43885cf4354427fd20ef43dd6260d25c801 ./.git/objects/aa/6d7242e9453875dbc7046ee44a6e023573d388 ./.git/objects/aa/7abafc65f0fd8d96af6427891760b568a36c98 ./.git/objects/aa/a7af6651dcf4161b0c2216ae806ae4173e8fda ./.git/objects/aa/b9616be4c904c29c12ba6e16c299db14000c23 ./.git/objects/aa/c380427f02ce56b130f851add26d0d1cf8fb0e ./.git/objects/aa/d43bec80604c12a5797beb316d6e18b183cdc2 ./.git/objects/aa/f84f278470140bced745314dfd0de1897779f3 ./.git/objects/ab/011b8db73118d4b69723937b8471399d339139 ./.git/objects/ab/142285530ae4246d652780828b8401ccf8dcda ./.git/objects/ab/197a0fe6a57c5af764d43ef62805ad5c9cfcc0 ./.git/objects/ab/3131968e8efe16581302e86bcc6d0fbf756d2d ./.git/objects/ab/478e2ea36985c0b37442e4a50bdc99aaf10264 ./.git/objects/ab/4a4901466bd23aefb45008815e3efc55a29e4d ./.git/objects/ab/8139e319e118fe5621882a8b0e20aae251feeb ./.git/objects/ab/838082dc93c0a07945dde30902b67a4ed3a193 ./.git/objects/ab/9fc96e390c885f28601214ef1d0f4a385290cf ./.git/objects/ab/acae52bfb22c8719ed1cca3505bcb9fcd6743d ./.git/objects/ab/af1fb9751c3238acee3009eecca52c3604ba68 ./.git/objects/ab/b7751895e6574a1159ca51b06a9f5d26631b1c ./.git/objects/ab/e1d489d9edce646ed40e64e2922f07d0e428e5 ./.git/objects/ab/eb1e0bdba926e6f0fb280c6024d161e895b155 ./.git/objects/ab/f9696da7876fdc787140087379fca147d47c40 ./.git/objects/ac/00e830cfcd35701095649bd8024fdab8b34e0e ./.git/objects/ac/08cdcf9508eac464f78ddfd0cf25dcf3c336cf ./.git/objects/ac/17ea2500c787788c1f7f491001a2c4a96aa010 ./.git/objects/ac/1a2349b9c1ef01c203ae219f0419ddf6f602db ./.git/objects/ac/2504a5f73aeb935f9b49aa209996f40d14338d ./.git/objects/ac/44ee17f9e91c198dd020c899ecb7ced2323637 ./.git/objects/ac/5645c1565b51fcebfed5f055291a5c367a6a8a ./.git/objects/ac/b70088ecef0d289ffb07d38e20097a435114cf ./.git/objects/ad/15adc0c5aadfbca59c677968280db8feb52d16 ./.git/objects/ad/2223644bdfded3a9b4a41971afa53002287f55 ./.git/objects/ad/2fe5f3873d19a22085783987442211dbfeda05 ./.git/objects/ad/62093461e05cbf8055efd53b88b13685d602dd ./.git/objects/ad/a71038cdd538412a5c6adeaaf756509a5b2bd6 ./.git/objects/ad/f73e6889b92a0b4feb8032bd48ea7dc651b8d2 ./.git/objects/ad/f79fb7d81ef055daa0772ed827c2409d4b8c2c ./.git/objects/ae/0bfab358786982af073123269aa4da3f24b9fa ./.git/objects/ae/1125bd32bf0ace380e74b72371e902fd748a60 ./.git/objects/ae/252485af95b32861cb85df1b255911d934ca3f ./.git/objects/ae/2e068cec0aa1a73f76339760c7f5bddddeaa68 ./.git/objects/ae/3ff08cd233b16aa360718306987f506dff78a4 ./.git/objects/ae/6686c7eadad667838628b4372476caa71330ca ./.git/objects/ae/6cbaf7def40386d50c2e2d4e66aee6d41d80dd ./.git/objects/ae/756b264f1537342f105014e31a2f5282faa738 ./.git/objects/ae/b994147981b67a2132d9629d86a3a6732f88e8 ./.git/objects/ae/da5d721cd3165c621b16bcc8fab9d7dfcbeaa4 ./.git/objects/ae/e6c415b650aa7e213c380b82c1f2781f944ec3 ./.git/objects/af/13b6cfb5a08120a92221d789b59602d23bf1ee ./.git/objects/af/3a4a98db5f068a87589a38141594ffee602e57 ./.git/objects/af/5513d6b4f42c869e63252eebbd768492491d7e ./.git/objects/af/795741cb4651fb666d4b086220753a8df16730 ./.git/objects/af/9c8e95fad6bf948fd978912f5486cdc8280534 ./.git/objects/af/ee45b1cf5d0fc92dd4963dd5d853935e9b2a00 ./.git/objects/af/f93116194bd55eee796d1a3faa54ef1e1e27c4 ./.git/objects/b0/1ccfa21fcf9c3c736c48b97c0679dc16dd2f4a ./.git/objects/b0/1e715de402f88455c6363f23aa014766a5a0bd ./.git/objects/b0/20db3447bfd179d3cbce88bb55e4b67e42c8bb ./.git/objects/b0/20e6a48ead92df18241df04e305d9f96604505 ./.git/objects/b0/2e74e98dd5931d4a46b41755a4f90520cce3d4 ./.git/objects/b0/368c6db8147e050b3b5b270b6e9371a20b8baf ./.git/objects/b0/39be17b43ee6a589e4eefd9c3de56a4ba4009e ./.git/objects/b0/39d77b6f8d3d687888158ddf5ce8e23822ae15 ./.git/objects/b0/4f3497290fb307e6c76d4485c8a4d4a6f07411 ./.git/objects/b0/6058253497ac3b3046a4e0e54e5ce812235ae4 ./.git/objects/b0/7578701bf2da2395924797d8b88c227cbc99f1 ./.git/objects/b0/7760d0995f7049e629d2390e3f567d1c70d21c ./.git/objects/b0/78d3e7e9e95c29a872fae9db278939363ca65e ./.git/objects/b0/7cb2a432b32fc3bafef9d0742d9496aa6a39a3 ./.git/objects/b0/81e7d1fe30b3d31876197da4075da03e83cae5 ./.git/objects/b0/8411fb1bf1492ef6d0521547e1b6e1a9cd4ea0 ./.git/objects/b0/8c538b58c583c98b9d135ff3c74e22ae3d608a ./.git/objects/b0/973b8a51e251fd1c00334fff30c40e8fdb9887 ./.git/objects/b0/f743190c1434832e556c9900b98a5caca7f72b ./.git/objects/b1/0e221c4908b65f021202b0005ab38ed84aaee6 ./.git/objects/b1/1d6cd088d0b3b2ee3c6351e56ba026c0bd6d18 ./.git/objects/b1/2548d31bfe0490eb9209cf80f92ba93df71993 ./.git/objects/b1/4e6daafdc8f5a63d6785c34c03f1fddb7de031 ./.git/objects/b1/d7bbd6af220bd413851baaa271844b99392717 ./.git/objects/b1/dafb6fb97bac332ce7fb288460bb218d17aa2d ./.git/objects/b1/e72ccaaff5ca740a45f8d619ee83e52d8d279f ./.git/objects/b1/fe8501fb24ea0ea5e9f5f78354c2f696c6dcc1 ./.git/objects/b2/08bf5b690f3d442dd876ffaa689098871e49a3 ./.git/objects/b2/2b9215407260f678d35331cd0947d1afb901b2 ./.git/objects/b2/a17239f30255f51dfc41bb5d6c4060939b1c81 ./.git/objects/b2/f69504f6fd2888525fbf7d57029a809a0b7f8e ./.git/objects/b2/ffcbdb16205ef29b0966eb608306e0b103159d ./.git/objects/b3/05d548bd8cb7868f887e496cad19212b5e1c42 ./.git/objects/b3/3db0b0dc6749ed6b43085e7dada8a90b1ca453 ./.git/objects/b3/671cb5a4802fecd6402f9522b756999fff52bd ./.git/objects/b3/6f7776c973b214f228871762371319c753b973 ./.git/objects/b3/781be0af4857de8185e82b3235967dd1bb5a74 ./.git/objects/b3/789b8856002e9a24ddfcee4d8bdd4bbd1bb7bc ./.git/objects/b3/85b653221e5b27983f5bba6f43250609b2adee ./.git/objects/b3/a3444a4e63a1140af4883d6bdf218f43fb9e7e ./.git/objects/b4/045c604890e411a2568c3ac701bc1406e6d4f4 ./.git/objects/b4/1736741a127d6021708addfb0e53e15ae3cf27 ./.git/objects/b4/2f6171689077544d76e3bd7e6383a7af6f2663 ./.git/objects/b4/39ed657f2622906d7ccf3700ec6cc786d8ee8c ./.git/objects/b4/3d9235f8f7bda7ee012552820013b58547abe1 ./.git/objects/b4/4dd1ab608216a07b4ad7aa580819f24ceddca1 ./.git/objects/b4/7d0cb052c32fbdb89776a05063f271975fab37 ./.git/objects/b4/7d360b8055c526dbd78ad57d3d3f25d68f9fa2 ./.git/objects/b4/9500faee3938e8f8f173ad1b030b7da0b3c6b1 ./.git/objects/b4/c8f4ec3ba07b45e7f14dcce00d025cc82bd174 ./.git/objects/b4/ce6585279528032a22d6346d7a9ec972985f91 ./.git/objects/b5/0d9f488a78a051b154ec48d18496e962d1d4b4 ./.git/objects/b5/25cc6d0b1f08ca0b725a95e909bcfb094015cb ./.git/objects/b5/4c020686ebd22b7d4e8bab17384c7fb95fe9a0 ./.git/objects/b5/60a3102fd5fe926be47e904ad63a4ca6f64eea ./.git/objects/b5/6d35aff8978337ed4081c5f931ba53a3b25c00 ./.git/objects/b5/7c9cc8504c9907004f2ec05f8a83c7da9d9d56 ./.git/objects/b5/813809b7de6b244d4f27803c4e86e613746b49 ./.git/objects/b5/97a584eee7ae0ee08186a6050ae354ee8897eb ./.git/objects/b5/b4a52902edd330b02976519f541bb4e44e9363 ./.git/objects/b5/bad2dfe6f359d3cfc597632db2b890f25e1634 ./.git/objects/b5/bb1e780ccaa05369ee689e4e640ede24d071bd ./.git/objects/b5/c38fd78f665caddb7008972db2efc11d0e3762 ./.git/objects/b6/00a7413e8bed57dadc98d7c3d798dfefa0c3b1 ./.git/objects/b6/2d783305eef29abf5aef770ad75c888f204be2 ./.git/objects/b6/32fb9e34e93f3157db3d95600fc2284c303fbf ./.git/objects/b6/3cebb006c417f7d5a4cf46694130818c5d66fd ./.git/objects/b6/4056460e04311ed5b136c06294a8cd0a057874 ./.git/objects/b6/49bef0be0a5cb2b1f8a2ee2ec19cc5240f0326 ./.git/objects/b6/57296e3052dabf8d29625b0dfafcafd6c158c0 ./.git/objects/b6/5ed74f79d615e2b7e3ff7c9d76bd494fa74b37 ./.git/objects/b6/d3d22d97a2531c221e18eef4c5e13a450201d9 ./.git/objects/b6/d9c6a0949948833f4fdd413d20f38e4a92be1e ./.git/objects/b6/e4336a8186d893c9528e5d9c36fdf58dbacd0d ./.git/objects/b6/e7b64b9fcc794fd2d17d81fb0383bd28e5575c ./.git/objects/b6/f94710d1255307cc92a88953b9420196cb9412 ./.git/objects/b7/041844173753390996e743c25207c42242e4f3 ./.git/objects/b7/135a6fe5ee9aeb3d54a40784185a270dd7d834 ./.git/objects/b7/1d0e55af9e2edaa35e3023f5ae291f132d8e49 ./.git/objects/b7/325149a55ed740bc0366df74686e8d96e16d9b ./.git/objects/b7/38bbe2537e66d5f0e704f33cd0f850359736c9 ./.git/objects/b7/52c4e871171dcd88a6cdbefc18db99ddf937aa ./.git/objects/b7/58dd51ed8f296d8f2793e844175a96ba9013eb ./.git/objects/b7/871d0215180d59a7543ca48a481850595efeab ./.git/objects/b7/a9afb64446496a9e08023d8234b25e5b9f969e ./.git/objects/b8/1b390f2084a6efacdee2d492e8f4431ed1eed0 ./.git/objects/b8/1cdd2f8757bd367d3b92e3081704dec3eb19fb ./.git/objects/b8/1e0c2b661bb034407a849a3e0b3ddfaa8f114d ./.git/objects/b8/60bc1190ed99b0990417f527eaba9539f10bd0 ./.git/objects/b8/68491997ef63a469b0c26742e054ab9cd08e3f ./.git/objects/b8/766fc9aca9ae82826078bb352724e60b967481 ./.git/objects/b8/7beb5d4a0c61cdd2318aa434e45cfdb67d7405 ./.git/objects/b8/8c8066e5679ba496e12c0c9398af8a0e72b2f4 ./.git/objects/b8/b4e731cce966f3817cfefb82d2988b880a43f7 ./.git/objects/b8/ba597746d476c908876709a0eb33afe4e60113 ./.git/objects/b8/da5431e27d2a0016db1e31dfbd7d683425e873 ./.git/objects/b9/02510452f0bd00ae4e20975d811fae12dc813c ./.git/objects/b9/1668e7264e418977dcaaa0c56546fe496475bd ./.git/objects/b9/1d43b3282cb4813b253c7c1ab5a4221d681a6d ./.git/objects/b9/6a27f18b7f5a808e30120b267f0c1b0e989573 ./.git/objects/b9/dbc580f3b9f9bd86062b2bca3b3df484048d64 ./.git/objects/b9/e29b70c92ee27912be6da75b5745f9dc16647f ./.git/objects/b9/ef2342ffff69a9a0f6b9e0c18e0203dbf1f50a ./.git/objects/b9/fe0f5729639a953e50a58558a71fdbf208bd3d ./.git/objects/ba/0374c18f6b8432031e1d3a45902cdfb6adc8a5 ./.git/objects/ba/09ee681ad290cfa2c8d0c55cde30795e0c0a4f ./.git/objects/ba/15b24146a52abee30af6646e1c5cabd83f4e65 ./.git/objects/ba/203f9038d1d61bd1d87431fb338cb46ef97358 ./.git/objects/ba/2fa12309d4a53231156cc6c7eb133d21bf9a05 ./.git/objects/ba/5363344ba622c18f2a9cfd6a4c2242f6a4a118 ./.git/objects/ba/70126a687559077403ec7e521fea74b5f53705 ./.git/objects/ba/7f27436cd1fcd54445427eed1c2e8027a9b1d7 ./.git/objects/ba/90728b3add9b863cc0ac179e4fc202302b24de ./.git/objects/ba/94ab7189cb4ca52c0c08fb56a671c4b48a1d43 ./.git/objects/ba/a6a32e6d1ca6dd33f574508803a818d76448da ./.git/objects/ba/aad3f2dc9f7fbc8062ac44c0bcb1f87bc03d76 ./.git/objects/ba/d643b380fc762fa0146fbfd75b2ac344df82e7 ./.git/objects/ba/e4998fe1d990329b4a7ab958f23e8ea0e2cc5d ./.git/objects/bb/0480a2a3292b35231a48e15acb879d5e0cb32f ./.git/objects/bb/086d6501760d8e465630ec57f714d9e8a732e2 ./.git/objects/bb/16e3421d6c60765f8b840dbc74ac9666715b1b ./.git/objects/bb/19722e6154063f57d71ae09fe2b0945e43b817 ./.git/objects/bb/1b9fd5c8e6db5010f731ee6f1c2874932eb738 ./.git/objects/bb/27d403d6e79e813ef782f04a30e8548d226df4 ./.git/objects/bb/37b78ad8b3046572dc75232742bf521adc4fd6 ./.git/objects/bb/3d573c24b270f0196fa0465ec13784117a9075 ./.git/objects/bb/650430e18e2bb72a1ab7df9d2133959f3e39ed ./.git/objects/bb/68da02b5b6259d2a222d8127a166eebf0d84d7 ./.git/objects/bb/7844084d17c37eac58c6e960eef18e2843420f ./.git/objects/bb/7e9f77c80f9051f414b4b85ff00a8cc74c218e ./.git/objects/bb/861fb4943dbf43b82078c6892cdaa4df1af5ac ./.git/objects/bb/a8538a63190d9262a1b1a9bcf1cd7ec2b979f4 ./.git/objects/bb/cfe253e42891138866b09f9bf28ca35e8b0db0 ./.git/objects/bb/de7db9c38e7ea3a99f0fa7230b21fe64fc46b6 ./.git/objects/bb/f8439b8681e33a66edbe3cc04e19c16972b6aa ./.git/objects/bb/fe7510c9c8f8b69b20706c32a5a23c6e36c880 ./.git/objects/bc/0740c400ae724abd176ecb86a694f9eeabc4a5 ./.git/objects/bc/081ca8264206cf5bfd72b137e6eb6661d8613f ./.git/objects/bc/1ff5289cb8f056272f82511b47bb74fa15ef1b ./.git/objects/bc/59eda09d735f6a7828a921e5a549f488420e81 ./.git/objects/bc/771d852340d2aedf2c0a24576febac53a8678a ./.git/objects/bc/8b4aa99f6fab72b48fac58e08be2711b64cf42 ./.git/objects/bc/9bccda338dd08c545f66568151e453a5ccc233 ./.git/objects/bc/a38a0fcd907d4b090445be3462220f0dcdc1e0 ./.git/objects/bc/aca65d2c87912493d4622ea2b08b5ceb52438e ./.git/objects/bc/b0b135f6043eae70f3ae118f544b2a390450e3 ./.git/objects/bc/bcb0d4a31be141be315a588b0aed72eff784ab ./.git/objects/bc/cadd74dbb66b9653edb0a8c4d07a6106501e68 ./.git/objects/bc/cd25157a98c25abe5f3242466bf89b32d8ce4a ./.git/objects/bc/cdb8995361dfae7b3823bfcbcd85fd7906f6fb ./.git/objects/bc/d8601ea95054d65da926e2e362c72ab04ddb7e ./.git/objects/bd/07b7a5b5b193730c4e27aba471a6a98f8ef348 ./.git/objects/bd/1270034ddfaafc9f50b4e913f576510f59f0dd ./.git/objects/bd/354451e93ead55b3ffce3625bd15d3c7eebb42 ./.git/objects/bd/39587997997686d054f24cd6ecc59467c21214 ./.git/objects/bd/3d5167bb44cbfe299c865b1ca278081121fa5e ./.git/objects/bd/4122dcd35a70c50799a9150e55de88a2d6aa0f ./.git/objects/bd/4721bc920f0b3823ddbd43d34f4394f9e1bb1e ./.git/objects/bd/859fd94f846ff970552bf26ce94ae8f1435c78 ./.git/objects/bd/93cbccf897c265ce5edf870a6d2efcd907eb0b ./.git/objects/bd/e0ed101f71b9beebf128d60b72f75ef0e74695 ./.git/objects/be/16285b8d80e688e00b0ebd6ba0af0b06dcb8fb ./.git/objects/be/221bdfae3b9cef4a7345f894d09bac2148f44b ./.git/objects/be/250e8515f41855d770a67980eeef0a031c1968 ./.git/objects/be/2fd7e46b0035398410ce456275b0d7c138ee04 ./.git/objects/be/366f1b140bc44e97d5224fc072410afa23c819 ./.git/objects/be/3e9981888b0ed44e85515410788e9906590a65 ./.git/objects/be/4be741bd87e9f8ee60df160430f0853b81ef37 ./.git/objects/be/76e34a4384100dd164d26a3915beff32a94178 ./.git/objects/be/859a09ab5a90e2fda7bba3bfba00ffbda6e6a2 ./.git/objects/be/885df754c585b99ca640aaa7fdc3104cef6b9e ./.git/objects/be/be511b8ee85c5e3af509825e813db94bed6523 ./.git/objects/be/cec627088a91e20376cd19b0bbe3600afbb63e ./.git/objects/be/fc0b55cd9b51b99c2a9f2e61745cbb23b34dfb ./.git/objects/bf/2bb8c196bea9e6c371838889bf364b5979df3d ./.git/objects/bf/60a378910625bd02fe67e738c026f6080e28c2 ./.git/objects/bf/73978faaceb0a1c3bf79f240d420d3b4b1e223 ./.git/objects/bf/76c99a5aef278b9bd6005f533022b765df1479 ./.git/objects/bf/7ba9b15820e2b0453c75485c1ce6fbf9643850 ./.git/objects/bf/cf79a8b9630729e4361ea3f4d851afb35d2fea ./.git/objects/bf/f5bc5f900f55262cefe4acdabd24aca4f7afed ./.git/objects/c0/09b84c13da51fa7bda9a6748c83e56fa761d9f ./.git/objects/c0/0a406f575828f8761b914ba7031d39892f1639 ./.git/objects/c0/0d34be32e06b78b0baaa0f4db7f50c121e163b ./.git/objects/c0/22403089238dbb42000e6689dcb9d457449e22 ./.git/objects/c0/3ef87c7e7a02f86b90977687110926a6f45cff ./.git/objects/c0/420a75d4b616f1a644ba549ae81b98cca65471 ./.git/objects/c0/550ec764cffe006e40a7d4e9e434b69ca14b07 ./.git/objects/c0/5d91822ec6c255f9f51976ecb22e84c95abc95 ./.git/objects/c0/5e29827d638bec1f8c395cc7007ac6076c6cce ./.git/objects/c0/856fe39789f5a3ff0316c8450d33f6d1e8aecd ./.git/objects/c0/8de4321dc64481041dd2f067e1fc2aeadb659f ./.git/objects/c0/bb9e97edaf51af3906f361144989f58b7159a7 ./.git/objects/c0/d0731358188e73cf479f4baedf935fc67b8731 ./.git/objects/c0/d3564d7345c60b9cbb966c9066ee04deeafa4c ./.git/objects/c1/19213509d947b0558161d63164d193dac1192f ./.git/objects/c1/262d50e8dd1b7383f741f76ea240cf84702ab2 ./.git/objects/c1/776b2d74db6bf01cf4457626f70df67024b1aa ./.git/objects/c1/851067519a1d0f8aa5ec3dfad1b7a181e1bc76 ./.git/objects/c1/99f7d417a8a65e6e95837f1d171fe96001640a ./.git/objects/c1/cf9dd8fc9227a750ae689375fb01f7fb15597d ./.git/objects/c1/e10cfb92328f7c994bc17c52069bcb8d1e9b26 ./.git/objects/c1/eff16f78afccf5f5caddea161128ef70a3f79a ./.git/objects/c1/f08caf16c62d32abc28bdd84d4443faac25037 ./.git/objects/c2/0741167156e1155cafb0431c29a80ffaf9ee4a ./.git/objects/c2/0f7e6521f660f2c871db3f9a57f836124f63cc ./.git/objects/c2/18b822fb498a1d1aad9a9e30c3f82e6904ef9a ./.git/objects/c2/299804980ed82b0d44353b5f8464769f8efc4e ./.git/objects/c2/3174971c91a2ebf437435b2feeb6380742aa58 ./.git/objects/c2/392f7d7b512fd8f8dfdc2cc7db5c30d18503f7 ./.git/objects/c2/40f936792b661e17b76da7f1ca7443fff7053b ./.git/objects/c2/4e60e386750d6cda22d2f2c7c45891bdc27aba ./.git/objects/c2/863c3e4fb0a64b7ead5ded78493081123669ed ./.git/objects/c2/97c6b4544d70d7e4cf6f345ab2a9fef318e514 ./.git/objects/c2/af5d43b9aa21aa59ab7c441caadeb415ed648a ./.git/objects/c2/c78c4f885562439d8682ba357370c4890cfbad ./.git/objects/c2/ca8b3da903651ca5165f7b103310627537eeb5 ./.git/objects/c2/f0373ddbecbcb5a0008d6de52f0b4aa1789175 ./.git/objects/c2/f8fefc6833332d28a6e3f4df11607e7c11e7e4 ./.git/objects/c3/089e3f34f052041577b4eedf6bc259978e7e92 ./.git/objects/c3/12eb1125234096b07d13291c2a6a53616371d0 ./.git/objects/c3/285282c5f9224d1a11b8f1a5c3dafdfe87f4e6 ./.git/objects/c3/4022e04d53408de21a48aa3268f0732d5a55cb ./.git/objects/c3/4784a9a3f224036f2dfb401fc16fd6bc1a49cd ./.git/objects/c3/7f49e1e6d1cf638cba5e6674806796a8d9a25e ./.git/objects/c3/8f0b481e3214d31c9bcb275c7d2df352ef2f1c ./.git/objects/c3/8f771aebdc6ebb2012d523df3bf386afbdd56a ./.git/objects/c3/bca7f316ef960ec07d46e80b2099c75fd6eb52 ./.git/objects/c3/ce42aa7cbc4d40cb3e01798a05d7e837dbcf7d ./.git/objects/c3/d2fcdb74cd8d86185cf14715e33d75bbac10f2 ./.git/objects/c4/132b8fbef24257948a495f3f891ed01c09fdc5 ./.git/objects/c4/1fc70800f04a71ee92ead11782472486cb29d8 ./.git/objects/c4/2f6a79cc9c3c90db98ef939e8ee69ef7ea5d51 ./.git/objects/c4/30069b478b06a2370cd795cbc7eda9539e83a3 ./.git/objects/c4/389c42530a2a79cf48053043ca641c1d4aead1 ./.git/objects/c4/3cbbd7e3866d9b16eba6039f51c4858e1d279e ./.git/objects/c4/4ddcc95865fa891482bf78365743f012937c5a ./.git/objects/c4/5597c17c6040a656f038f12d2444b122919796 ./.git/objects/c4/64fb413eb627482c30b044f6ab02742e2502c4 ./.git/objects/c4/775ab323033797b0c1d36b947d9a03d867ea5d ./.git/objects/c4/825a90cdaec656064c7a680d045b8fe897f784 ./.git/objects/c4/bab263a8cdb87f3b9b01f2f42ce75145de83a0 ./.git/objects/c4/c1fcc7186adb3eea63dfb9c4c1ecf2ccf1ee22 ./.git/objects/c4/c9dfef1ec14febccff8a187034ed17c388f244 ./.git/objects/c4/cef2afe6d465f987157a11af857f7f776042d1 ./.git/objects/c4/d92d6c66ebef7938c1fc437f6143dae09eee2a ./.git/objects/c4/daa0c141a8b54316dfb3a9a4f3968202390c0a ./.git/objects/c5/1ec4d08f1826fc77aa38b34e64ab598a846ca3 ./.git/objects/c5/2d9ff8798ed6847d2f4d9748ed3d30fe8b2121 ./.git/objects/c5/6363932ffad602de3c49e3424ce1de830ebd7f ./.git/objects/c5/739a6cb15b3d5d013f26ef3f00a412cc337a57 ./.git/objects/c5/7ff4a1132cf5d87283c4f20fa703b2f93539f8 ./.git/objects/c5/852070da61b5895b9832c06cb87d2f4d5377d0 ./.git/objects/c5/9096a864d1b58061a5e8432a61de3a947ba7a2 ./.git/objects/c5/a59e50c3375a922559e88f21f87a8945574c20 ./.git/objects/c5/ac522a13f6dd50feaa2589515657f8815d6570 ./.git/objects/c5/e7f5ac4a8e9ad95e61b951e7d7670a17998fb7 ./.git/objects/c5/f8c406ba1c8c28c4b12ac8ce106707a63825dd ./.git/objects/c6/2896ba00189bd306e140348576620f47666de6 ./.git/objects/c6/669c842b5daff97015af42e8d1344378ac2fe8 ./.git/objects/c6/8ac5d8e8511217eab42f6e0dd42ac4ea044694 ./.git/objects/c6/acd6a708ab52085af4f723fb53269d44c18f76 ./.git/objects/c6/b8bf0225c67d8f36693e5c24b57098fa9b0050 ./.git/objects/c6/d11b5a1e27bacb2895be285d156a988e5e88f5 ./.git/objects/c6/f7c66aeccb619f7d4ced9ee05bbacfa6b158c8 ./.git/objects/c7/1c01f8a2d469d1092376540225e736683ea32a ./.git/objects/c7/2ffe154e1a547c3d0458e2fe5c1fb21f233cae ./.git/objects/c7/3ad2b5305654425f2d277d6fade204ee80f6d4 ./.git/objects/c7/4f36868f86a73d0645b7e7904612e97f122f7c ./.git/objects/c7/56c3792a1035cf5d64fbf67dd12c9817a942f5 ./.git/objects/c7/5a2da2a4ef0747071f67d0985e9ae06a58567f ./.git/objects/c7/7a2eed5a7ea0f325ce9c42fd154b0f7925ae0a ./.git/objects/c7/7c9929ecfe3557f242a9d0cf4b1dd188a2efa1 ./.git/objects/c7/96972551b23bb7101503a3c39efe41d8031041 ./.git/objects/c7/bef6a9f01b7928c2af11baa6ed4b23fb9dbaed ./.git/objects/c7/d8a6e0a6b85de7fe60e87f02c8a63f11a6f12f ./.git/objects/c7/e1af1f4e7bb9d96282e4af1e9334f02c6d4840 ./.git/objects/c8/34251f24e6a4784d9e46801175b43b1cbba548 ./.git/objects/c8/46b8a9b1bd6596becb0edfa562f129cb02d0f9 ./.git/objects/c8/67e0b32276c069062c7369cacc277ec8b1c655 ./.git/objects/c8/95fb53a7902082f4a8a9a7d8bffabd0cb3b81d ./.git/objects/c8/9aab812047cee2364cfc5c9121e8cf7bb22a14 ./.git/objects/c8/a25cf29fc091acb2566b3917ca591ccfa4c965 ./.git/objects/c8/a880832f186b487fd961532f7971ff598fb045 ./.git/objects/c8/c36e36c2ac8421c9038a8f7b7f86f9cccffeed ./.git/objects/c8/c93d6fb3ac184e50e5778e0edb6691f5f624c0 ./.git/objects/c8/d429e14fd92d725d3a04754a0f3fe1fe0b2908 ./.git/objects/c9/0bd86de895d19638b27cf152fe08a8f7839c3d ./.git/objects/c9/136dcbc356185547ae8c7c063e62e1a6ff8357 ./.git/objects/c9/231e2615defc61bad5caf047220b13437d2550 ./.git/objects/c9/24de724ee327b86522362847e66b1f7e7a7df9 ./.git/objects/c9/255839656aea8c7e2d54fb1db18047c817b46d ./.git/objects/c9/5deae3e2bbb56d00b7a780111840fd53f22d73 ./.git/objects/c9/8a3f26c274feb32196eaa966c420f49af9002e ./.git/objects/c9/a03be7ba30a4aa117660b3de0f3fd71da7efba ./.git/objects/c9/a49c6912aaea97bec8e30c757fe04e91d2f68b ./.git/objects/c9/b9050fca723f419a7bbbd1c8d54cd4e8f35758 ./.git/objects/ca/20899701d3f1392319e9ea482a94ff0c437fd1 ./.git/objects/ca/20e4a470a086e1cb5625c9da30bd45a0b7ff2d ./.git/objects/ca/27d9a8d67cca110cca092ab18f9d1b87acd024 ./.git/objects/ca/304d5625eb9e1a9b60edca6a244d399b7b78ca ./.git/objects/ca/54c61426dca6fe4f8c6c8728833f094d44abda ./.git/objects/ca/669b53658eea8899ddf2c23a8049d9740ff848 ./.git/objects/ca/97c8b9259c4b2a2d6f13ff74079f84093f91a5 ./.git/objects/ca/beddb71ee2af8e883d163c33014d949ce0c7dd ./.git/objects/ca/bfc5efd16fbbafb524f8d90ca5ea1dbd269651 ./.git/objects/ca/ff62bfcdf033313f1b29d868f6d7cccdf7a084 ./.git/objects/cb/0865b1a27a2b20ee17cd0d47b535a87f811878 ./.git/objects/cb/1ef43c6d7f86f12886427f16989442ecc4589e ./.git/objects/cb/318f36c2f10914037ca6e5f6e7599e2ba89bb7 ./.git/objects/cb/3aa57ee9392886ad1aee10ffb596a12a3b61d7 ./.git/objects/cb/54b9b1f7235f9698bd53bb20041921f2fa8200 ./.git/objects/cb/6dcff4a1f45da39771ccd537d9da4504898932 ./.git/objects/cb/82d3eda2448fd43a94b9f7cdf577d9ad491437 ./.git/objects/cb/99e06e51661e4e8e6bc9342ff2c88577adac0a ./.git/objects/cb/a08ded8ec7ab345f64e8b6f8a1576fc24b5908 ./.git/objects/cc/039aa729c9bb2dc22408fb67e220e7caf2586a ./.git/objects/cc/101165e6d52ea3b0ac5f85e8023097f296f4e3 ./.git/objects/cc/192a09262573546508d09639fd112137c17402 ./.git/objects/cc/1cb0287003383d808a2a412c1253f4d5263d63 ./.git/objects/cc/24a217483883ecf540aa4ed035388d81c95ece ./.git/objects/cc/2c4c5d163b4c076315b5a78eedb4db1048a677 ./.git/objects/cc/47324e32f35546ba1f9d5808d4e2dbdf3228af ./.git/objects/cc/47d5eff23ad87a6298b84ea4d1cf40212641c9 ./.git/objects/cc/49c85b1605807fadef7f244ec7a23e3288acfe ./.git/objects/cc/7c4618805e66fc9dd6e67d80390a7f7bc4a3bd ./.git/objects/cc/8c5426f4053341cc6f61e830846d4818d96393 ./.git/objects/cc/9c8a1950b4e284c078e48ee7c35f1726bad098 ./.git/objects/cc/9cbcaa27b055de7c7af325ebbd5373b50b0155 ./.git/objects/cc/9cd6249fdcb696dbcc432b22285842b71843c6 ./.git/objects/cd/1999c5ce3ce165f92b1bd8965409ea51d7008e ./.git/objects/cd/330cc840fd16991fab36261189c731f3f7d921 ./.git/objects/cd/380aeb1f6fdf0b10ebf235bc0f8d3a5b8357ce ./.git/objects/cd/3e3108e4cec1a45360ae7dc5dab3b3c56ee7bd ./.git/objects/cd/5ba7fcdb941acf1dc99e0cf077e3a3680180ab ./.git/objects/cd/5e1c97130c202c1f6a529fc24f4cca8c857681 ./.git/objects/cd/698830c19ab532b6217c8f0c253c9bbcf20e43 ./.git/objects/cd/7649f7defd16da176ee7aef93d16a4415c60f1 ./.git/objects/cd/925f68a57e474b01456723976899b0af7960ca ./.git/objects/cd/942ff987da5e3efacaa32e3fc877b540d9f8c0 ./.git/objects/cd/9777af8bfe82c60e3cc821aef19010d9fd1dc9 ./.git/objects/cd/b0bab9d7dc2f1574049afe2073aaf21a8dd886 ./.git/objects/cd/bf7059e9015d3fc591266bb2a42ad0674c0aab ./.git/objects/cd/c01a9a32332db72617a7904ef2552219136623 ./.git/objects/cd/c038de8ae6fec54b88468002d4167247d2e697 ./.git/objects/cd/d35b7854853c605cb72bd20d59421089f917ba ./.git/objects/cd/df686c11d4b09681476eae41f3813fc8585992 ./.git/objects/cd/ea65362395104f3a4dff4b50ee67c2c68a4874 ./.git/objects/ce/08a5bc0dfbb933aa68d81ef3f70289f0702ea8 ./.git/objects/ce/3a97992cb8c8d9911a1334e7c79fbdaee5fec2 ./.git/objects/ce/3c2e7256e7e93ef8349115e8ef156d37b686b4 ./.git/objects/ce/3e0c3ac7a3a69a7349580f63f9282a506c9f2f ./.git/objects/ce/5064d09992cf2751964314dca100a39f1d2933 ./.git/objects/ce/67fd6e57563c8de706485b45376bfaea6efc8d ./.git/objects/ce/7159092b6e45c8a51dff5afff24e0bfa243f85 ./.git/objects/ce/794c29c71ad32c21c78fd97a299e2228f36d14 ./.git/objects/ce/8d2861d9a6e0c8ed47bf648901fbbcfedd96e6 ./.git/objects/ce/8df29d82ea3d6ce2e6059b4e2f5add224cae0b ./.git/objects/ce/92f9d9b39e2560ca0f9d149096290f881402f7 ./.git/objects/cf/1715f2d727a113a75bc5c33437f4ddf706505b ./.git/objects/cf/1e3ca93c51ee1c67156222d646b316f4ddb1c7 ./.git/objects/cf/45ae5d070df97dc23b15b2f519c5c8361cf7e5 ./.git/objects/cf/7382f42b4c31455b09f9f3a8a79c511e84edd2 ./.git/objects/cf/89e2c943ed9fa32a10524b15aa9531c79fa43f ./.git/objects/cf/ac72f3c5e5930dff9ecc64b1a67ff21c144285 ./.git/objects/cf/be037c27ee84389d7afa83e4eff0c42b8545f1 ./.git/objects/cf/f179c2feaef94262caaaf8dd455a077507e375 ./.git/objects/cf/fd95e17cea3a5f9805638441595da53c4203bf ./.git/objects/d0/066c395823184af50c25d1db5f888bf8578dc0 ./.git/objects/d0/1116e6b17cdce656c5c7fccf4c04bfd2666261 ./.git/objects/d0/2420ebc48d3753c9655aec008a575ede730bf6 ./.git/objects/d0/2fd7e1119cc643125cd4c844351b5d0f5bd839 ./.git/objects/d0/6df27fd8b50f27f287ffd17133b47fda627687 ./.git/objects/d0/f1d3b96f6443a0690a20ea393eee47592a124d ./.git/objects/d0/f77c70b0b2a2cd9a733fae3f06b0ba3b40b830 ./.git/objects/d1/22fca2b7a9e207789fc1e6d2c2ebbc0650bd9c ./.git/objects/d1/320f808cf0cd35e4c668019c1baf26d664be40 ./.git/objects/d1/4d573bc9a2f6452dfa72f3a7919557a99cdff1 ./.git/objects/d1/52392872d8cb19e90d1220083abcc7f76cd263 ./.git/objects/d1/7516f48d7a7f5094a587bd38b0fdf87bbb8bbe ./.git/objects/d1/777c9f6dcaaf89dd46f5ef8353fce7b4b969b8 ./.git/objects/d1/bde419fd3f9e80781e7d99e45bfe2ec894c367 ./.git/objects/d1/cbb37d8b85f329e4fa62b2562d4022249c3fe2 ./.git/objects/d2/0756b75b082e1074a9c29d5b498f590024efcf ./.git/objects/d2/13dd9c8d4efafc2fecefccec04cd06db3ea0e7 ./.git/objects/d2/274ea9b76ea0d04773abb7b1afc16f50741472 ./.git/objects/d2/33072fb50c281c8442b520d63d9afa19aa8ae4 ./.git/objects/d2/4b32bd928e9e25019171ecc2d6f25baa793c39 ./.git/objects/d2/64f9c252b4b8b616ca4b69926a32a9e5c9a6c4 ./.git/objects/d2/6dd4342bf2f8114c804ce05950da8fb22fa692 ./.git/objects/d2/7116222417ad13f46ea97be3946ac988cec947 ./.git/objects/d2/845590356e251afaf0c2e60f58fb70eb881df1 ./.git/objects/d2/90bd45d16ea31acbf39e4719d269b86035ad31 ./.git/objects/d2/a073ea983d55f71de3fe36d97ed7610d2f6c81 ./.git/objects/d2/b63c6ab001d185ac42bc30741e288cc030f23d ./.git/objects/d2/be681dbfd8953db9d568727d94d41a8ad7027c ./.git/objects/d2/c6809eeccad4a1a99494a7e852ffd696f1381d ./.git/objects/d2/ee170cf8bff47ba0e899c8b083dafb357b6d34 ./.git/objects/d2/f8372941614cbaf9c08ec15fc3951166f36282 ./.git/objects/d3/1e2a7d5b4d3877e85deff74ed40a6fa8b8c1b6 ./.git/objects/d3/49f27c6979348487881770f8ed702163f21b24 ./.git/objects/d3/5cf81382c1726ae44bf341e6a5bf33ad344474 ./.git/objects/d3/8206c3c1919d5dc58c6ea1807a542df84ce3ef ./.git/objects/d3/963c6058ba33c1568e270b70315ae3b84a4d82 ./.git/objects/d3/9938bfc9d82e4eb7ae2884c6ad32d3cb6e65be ./.git/objects/d3/a9236f28ca24af4cc9e6ad1642d7569ea02172 ./.git/objects/d3/bf498a3700cb1b038c69e81de03bb5f50c0c80 ./.git/objects/d3/c6e46a00bf79fe47cdecb2d503c672d908d9a7 ./.git/objects/d3/d2794bc38a496b46437704c746c21f57b6f9ae ./.git/objects/d3/da288b4d6e86a76d60d09730a25a64e8511bf7 ./.git/objects/d3/f82251092104e37f4e09ec65073bcb33ccdaa5 ./.git/objects/d4/336395a89b69aa3e7f9efed12517d1cc8a70fe ./.git/objects/d4/48b41f59fef55e7fe967a8532e7a77d1ba632e ./.git/objects/d4/54b2de321ec3eff9569b81523492f7da509d84 ./.git/objects/d4/5c2445bbab7a96c50dac0eb7bbee0a13252bee ./.git/objects/d4/671b307418147b3352e4e518433aeab464fc72 ./.git/objects/d4/6cf7a3aab63226557155b776f023aa1e5f7e91 ./.git/objects/d4/7b8a40a00bb92b1a586c3f5a984980b62bd098 ./.git/objects/d4/83d14df16fb6f6c515127915fddd16604cccb5 ./.git/objects/d4/840107c0959cef2ab5318b67cc73d195182cfe ./.git/objects/d4/86fec2b8af7bcdc2ed80feb0754170a77cc047 ./.git/objects/d4/9ebab4ae82039e0eca0f8fb3dbf91c6bfda7fc ./.git/objects/d4/b6284b3d1b70ad6b62eb0b6f9266dcc443ed75 ./.git/objects/d4/c2e0cebf56d29e42f87bbec8f300cbef72af38 ./.git/objects/d4/cf61727367111935dd5316dfa11a54e0d2d088 ./.git/objects/d4/fec019cbaacfe56cd4652c539e3b7e734ff3c4 ./.git/objects/d5/57b393aab8b09b4c087b60b4e617e9b85c614a ./.git/objects/d5/61481721dc022a30a08292ea9e20d07cf0a919 ./.git/objects/d5/732c624a1cad1f688ad9ec408959c995ff7e58 ./.git/objects/d5/78130214ff71271e999e1d3132b983b6dfa785 ./.git/objects/d5/850b29bdd076f66c3f7a26b19b7f61cbcdd679 ./.git/objects/d5/be430a99c4caf2bf5d5024c990548184a8281b ./.git/objects/d5/de8f145d6aa144d60d4400e2e3c5c7662575cd ./.git/objects/d5/eb6fc6b7b3d7505133eaf390f7982ded3eeb49 ./.git/objects/d5/ef55bf61959c58aeaf487c77651313c7ce0445 ./.git/objects/d5/f2ddf5213a84f704bb953ccd74d804b3b70399 ./.git/objects/d6/070b2c4c751dec1fc493a8a00c9a7ff847a784 ./.git/objects/d6/13f0a73320ce9046a6067d30825201d317a322 ./.git/objects/d6/1c75d7d3febfbf344813d8523fb92ea8386ce3 ./.git/objects/d6/4bd9ef19f6f0c9addb19e7bab2863abbd92456 ./.git/objects/d6/5584862e8cf8091911722b9d6f4f6c34e937eb ./.git/objects/d6/562f8d22f5f1406616817877038a0227068e6b ./.git/objects/d6/8a7fccb30d62db8e7796085e03eda7aae614fc ./.git/objects/d6/9764ef737d0f42125c521d1ab683cd9f028680 ./.git/objects/d6/9b2c8e953d1a47ee84fc997b55caff10560118 ./.git/objects/d6/b5d94f6cc7c5191ae31c21b3a7bf38de4a70da ./.git/objects/d6/bc73d35ed3b182ae32ec6e4c79b2bdf6c91ab3 ./.git/objects/d6/f9505fb59894172fb5230eec7dc332e01c3c9f ./.git/objects/d7/1228ba12c3b62b98b566933f9f041569c7b07a ./.git/objects/d7/193d3041a04775e155ffce8099be0c5013d1d1 ./.git/objects/d7/37379fbb3b5d2afef25c4b4588ef670e3e3ab1 ./.git/objects/d7/472a91c1a1f04c167c380b120632b2f6271b6b ./.git/objects/d7/501035875b80afa47c3ef5e238f5d3a67f0ba9 ./.git/objects/d7/550c56b299f3332f93a4c71169d2a4f03aa0c6 ./.git/objects/d7/5b8c173cdb7cb0d201a2f87dbb1dcab0a8fba9 ./.git/objects/d7/cb87c47234717e793fa0c539833a6e693e596b ./.git/objects/d7/d33e739efeb3f48806e874cbf93959b60b336d ./.git/objects/d7/f6d804b66f7151e568708a603da01e2362a0f3 ./.git/objects/d7/f76b17add588bd57ae7802b9fcc87bff376307 ./.git/objects/d8/02a008ebe634c196af21f86327fd27cf122149 ./.git/objects/d8/1022029c413b07d128f99f005b997c23aedfbf ./.git/objects/d8/22dd68026e196e518ceae2f3cebc18683670db ./.git/objects/d8/29c17a48a78e78d4db835c220776e06240a0de ./.git/objects/d8/70052218eb2277457a0b46fb51136ee7bb6ee3 ./.git/objects/d8/7e40df29f4234d7ebbde77a388197bc323f9e4 ./.git/objects/d8/8b29ccfbb2033d2461e971861df49c7172e162 ./.git/objects/d8/8d11fd240ced9e70a6c62ef9ed5ebf2e957fec ./.git/objects/d8/e7fbb8b290b31c69291c3d97eab8b1d6d50df7 ./.git/objects/d8/f1f0f47f65cb816b5f2cb47c9eb86b04a2bee9 ./.git/objects/d8/f93b7ee0edbaaec1c5292fa525ce229f9afad3 ./.git/objects/d9/4af78ab76258bee7bd21daed7a0fc8c3719963 ./.git/objects/d9/73d2ed8a49fb2ce08ab2f963e8b936c0e24715 ./.git/objects/d9/77f7c424141a21d4a4623f6dd2e0d04d22b5a0 ./.git/objects/d9/84567c6945a2a356880756d0d32840a9d3313a ./.git/objects/d9/90a5f719898c07541d232222def9a6ea0b5ddc ./.git/objects/d9/a1631d1a704ffa2d0c7dd79eb5270e4a8f2dca ./.git/objects/d9/a270a2f4ac1dd5e8bd1682cca67c078f45924e ./.git/objects/d9/bb82a4de2cf0d6b976e3b9c97b8f461767f53e ./.git/objects/d9/dbc64ddee174a0a2cdeb87faf450a71f9acef4 ./.git/objects/da/395c53717481718e53f1a24d892ffd1260cc84 ./.git/objects/da/46f0f6c04fec69c303fa8778f03e9ef3bf42d0 ./.git/objects/da/593812a5639469986259f1c78ec4f4ce0796eb ./.git/objects/da/62f4b5478df286ac41c3e61971ff70c76b48b6 ./.git/objects/da/6e9e21421c383d83190c9c55521608efa0f0ca ./.git/objects/da/7a06981a39c50b77fb77a2eaddcdd650ae81d7 ./.git/objects/da/7ce77168c7597ac5c61d393ed9b73fcdce7d99 ./.git/objects/da/7e37090f4e0909199fc89ea52b492215ca5449 ./.git/objects/da/8773db5d250a575fa85f9d6482d70e11a4af7b ./.git/objects/da/a6970d4b3acfc7e7aec09e0e82b344d674c718 ./.git/objects/da/b51bde3a68ba50d99bd4cd628333b779430830 ./.git/objects/da/bed747e4271aa08c0cb881dbe31bf26c43a5a5 ./.git/objects/da/cf4694046a7cbaf014d25e64e89e6b314b235e ./.git/objects/db/2f423e06252ed5d69ce7488de713871ec1de7d ./.git/objects/db/36aac749c3e37fd7e0c707c1fe7c3389f638ce ./.git/objects/db/42cf190a1a95b37260f6cfdefad7439f956285 ./.git/objects/db/47f3d6cc672a98b7a20435178e1bdb022e9ca5 ./.git/objects/db/551669d64155c3b6228574f722f9b11d81ff9a ./.git/objects/db/641eb8457947dc60406387f667fe86c2c7e928 ./.git/objects/db/67e2ed9b43d5daa9b000603420155e187d62e8 ./.git/objects/db/85e4f76be329d7e813c430ddc520761be2f8ba ./.git/objects/db/8de53d0fc0c60e31f932b705b00850e18feddb ./.git/objects/db/9c9be93c82fc495c26e7cb33e75fe5aeac437c ./.git/objects/db/be03a4cd2611e12f1e90062486044812c33d36 ./.git/objects/db/fd8ad1df13c58791108c19a91be9034432e7dd ./.git/objects/dc/18a8f07451237cd488df268aa921d117a2336e ./.git/objects/dc/3fe2629afeed4cea9b72abbf62480ed430e1ce ./.git/objects/dc/577144f595b589adc0d0e4a760c9a9c36f85b6 ./.git/objects/dc/6446617d34729e46bf081b6c618a256e9b4b5d ./.git/objects/dc/9bfdc8357e663b751c76ba3d5402abdea5f4db ./.git/objects/dc/a2af30b3644b0f52ddd3715f14dc579e1b7c93 ./.git/objects/dc/a785a77ba9e6428d775df0e94080239bdbfdf3 ./.git/objects/dc/aaa1fe5c49babd0590651211302b9249498148 ./.git/objects/dc/b027f2d07cb393bfd6fd945a8ce1b02d9e277f ./.git/objects/dc/b4f711811296a8726e39c4a38dbda68a02a70c ./.git/objects/dc/ca744b37e4216d5065213dcf8cd36a6c806590 ./.git/objects/dc/e52881a549dc62e8fbf4f4d7bdfeb7d2f7599a ./.git/objects/dc/f45c9ff30b9364ef1930a032100ee6cfdb6f43 ./.git/objects/dc/f8a84b518093314c275d3d15c4af616aa710a4 ./.git/objects/dc/fe6ba04fdcd9b9945db9d169260b6e44a85027 ./.git/objects/dd/1dca89dcce4955f648c7ee90f6b9d127a64ed7 ./.git/objects/dd/2034257b85b8cbc1b0a2760f09ced60ee0aa79 ./.git/objects/dd/3b5e71b0c7ae8cf29594987d76c958051be501 ./.git/objects/dd/a5902a4e8da44423d85ac29047ee1c94f4e04f ./.git/objects/dd/bf080af9edc019b60ac496ced89023907e0bdc ./.git/objects/dd/d7923777f7f0d47bdc32ee81ffab4175028b9c ./.git/objects/dd/e82719670ce7056fc971d91705ad810438cbf9 ./.git/objects/dd/f5f8cdbcc0f4d72a51d664b3abfcddc6862cce ./.git/objects/de/0b55e9dec81821da351a26737c0bb9f7e57b7b ./.git/objects/de/10dbb541b654692042535f8281421861268df4 ./.git/objects/de/16eaec18bce82cc72c4dd461286bae76d37d3d ./.git/objects/de/435b4e105f09289a83e70d62e8edce35371a32 ./.git/objects/de/4b0d17b3335578db017fe2f6f803d417732906 ./.git/objects/de/677ae7e88e553edf0dc9fa7c2e3ac5b21af177 ./.git/objects/de/7238529043e8f23db89bb7e941e1e5abaa570a ./.git/objects/de/ac14ec6ac3123977bcb1ca2da38c7b4024c794 ./.git/objects/de/afc5b761472bab66ab75e4750eb4456542e520 ./.git/objects/de/c2de42d22eadfe2cadeae3d0798a889514d24d ./.git/objects/de/d3dfe5b56de24455855fc5ed7fbb45b7624d94 ./.git/objects/de/dd9111d61b412301da8e7ecef91552343fbedf ./.git/objects/de/e409eb2ddbe33a600c553376290797074cd707 ./.git/objects/df/2688eb0bf65244a9d905cde69bd53e9b3ba637 ./.git/objects/df/43e60afd04374e457c3c9d8eb4bd880a403633 ./.git/objects/df/76273bbbbd34dcf96266f54ed3e5dd9502984c ./.git/objects/df/859034bda33c6af5090a3d3f0250de078fc394 ./.git/objects/df/a603ffa6f871de7db5469f8965f09ebc947f7a ./.git/objects/df/a8a71f10e7120e8daa36cf62699441c882e142 ./.git/objects/df/d566102a2e53665d4ec7071da2fbfe3965c25e ./.git/objects/df/df19400c2e43fa99d5f5bf37409b9435079517 ./.git/objects/df/edeae02dce917c3692ca1086c64c931e1885ab ./.git/objects/e0/0fd8311dfdf4a45e44f0f0d71b1777d83361d5 ./.git/objects/e0/1ae9c8fc7df859047adadab0d22031d1f7c100 ./.git/objects/e0/2451a5945ab1465211f8305eb0f22259fa838e ./.git/objects/e0/54da03ea3c37bf4c746bd3fee88d30cc0c630f ./.git/objects/e0/62cde5542ed2fec819f44156f8dc0c69acf29e ./.git/objects/e0/6b1fded2a0be4ea6be482e8266fd25ca92dc53 ./.git/objects/e0/77beb8e5c799e4b859bd947f6c0b1fff7005cc ./.git/objects/e0/7976537c42bdc12c3d0bc99cd573e0dc2ba131 ./.git/objects/e0/aa5def4900aa90d530905831045522bbca13f0 ./.git/objects/e0/b5b2e581df2e2e0644b1300e137f69a96da8cd ./.git/objects/e0/ccdb9ee8f54dceaa5522557b537d30cddcf761 ./.git/objects/e0/e559378e251b9f06047b6a417223a55164cba7 ./.git/objects/e0/e6af1c4c725a0bcef7a897d573ea5333276784 ./.git/objects/e0/f1bbc65ca287b305b60402a8f2c4aa7f936f30 ./.git/objects/e1/1cabfaed05e2783a563418f4eef82fbcd43513 ./.git/objects/e1/1f5e61c5eded62f38f698ea087b9734e340512 ./.git/objects/e1/36b05b8fbbc87efe1a9936bf32a63ff6a3c333 ./.git/objects/e1/454d4ad9d9de214a8fe811cb6276a191765aff ./.git/objects/e1/4c7545937535d0932a6f541bbe09440cdc7579 ./.git/objects/e1/b7e28c17288763deb3a9febca90dd72790728f ./.git/objects/e1/b80b84150fb974f770c68c9e562b6c79444b1f ./.git/objects/e1/bc5e97679fc57721b610b68a586c77ad10c4c3 ./.git/objects/e1/c324567c031ed22417bd84b7c3c9fbe8c4bc57 ./.git/objects/e1/d5653db9d83a8de532062d44690fb463bcdb20 ./.git/objects/e1/e251669ecefb8ea5269e57e0f0a080b0d81949 ./.git/objects/e1/e34f09ad1afd107719a3ea116d87357a6a7d72 ./.git/objects/e1/e4098e9516b8dfa1eab91106bf1c85973aa4c8 ./.git/objects/e2/0a414436f04d537c73f639585555d659cce588 ./.git/objects/e2/6571a726a68ea3e9291dac4075d2f0e2cdb4f6 ./.git/objects/e2/badeffc7c7ee93a19470a877ab56eacf402d8f ./.git/objects/e2/bc5eab37eb6e292afaf57245d73d299618cc3e ./.git/objects/e2/cab0f2e5c814a7e12c4eebec0c51fa7c411afd ./.git/objects/e2/e5891c0d206cce370a284f0365b38c3b12b65e ./.git/objects/e3/0b2e60a5161c871b2abbdcc2d4ecbe22dd9a49 ./.git/objects/e3/21da0b40e2e3a4f0f87a43f3a4819f2a0ee19f ./.git/objects/e3/3b4f22118d8c9c25a8219650daead7284cb339 ./.git/objects/e3/44d37727fd215dd39c154e18b0cc326f14b8fd ./.git/objects/e3/48c271d35e6aaf861409ec85855818da702cd3 ./.git/objects/e3/6f4f471cacec78b0fc95ac3635a1fc2262f612 ./.git/objects/e3/8e019ae995de5dd9b8b5dc718fb863c5fb4531 ./.git/objects/e3/c3c987d6889bb2391ee9746e3e64b2225f6b17 ./.git/objects/e3/d90d025a45ca8461e83078b97a10c2df5bb29e ./.git/objects/e3/e9250e455bd3efc082b0aae7f34c5ff48fad2b ./.git/objects/e4/14839c8904329b72564f4cb7c94d7105f82dbd ./.git/objects/e4/1df1d8247b9c46ac6e1f6ea668e22f25312a19 ./.git/objects/e4/2620b6693050d59a91748505ea26266300c93f ./.git/objects/e4/505c604f4b132b432bf10a339208c9a2219986 ./.git/objects/e4/5bf760cc8818640ff8d4cd40ff562127e407c6 ./.git/objects/e4/9fc847d9e24d0b2dc3339b5085d31455e69817 ./.git/objects/e4/b18cf4f05c736f6ea02f67304505ba36ef6f5e ./.git/objects/e4/c35c85c60cf57347e098327d5998cd4eaaaa86 ./.git/objects/e4/ea71f451c28737b3a1e2e0e9a8331258cabc98 ./.git/objects/e4/f27fd73c0ed1db5fab52a4ef44ed3a8c4eb620 ./.git/objects/e4/f61371b337a90b91110b2cc14d208bd8e1035c ./.git/objects/e4/f62b0057279e4e99fd7514039ebdcbe2e6434a ./.git/objects/e5/09902bdee30be8ad5a26d8530c82ee92f43365 ./.git/objects/e5/29eca9991f7cdfb53ee30d61c470dcf5124dba ./.git/objects/e5/31f94de949bea7b802627e01b927d6552ab0e1 ./.git/objects/e5/349464edcb580aa8944670d27fcb796c3d0a03 ./.git/objects/e5/49928e5ffca1089a4590621a823d7de69fcbba ./.git/objects/e5/585e7dfa26fa9122498da7e81be5f5ff400409 ./.git/objects/e5/811ec47cf6ba230ff792a95a0ed2c72530679a ./.git/objects/e5/8b15b49fd15126a7cb227eddddf33d03f68394 ./.git/objects/e5/c277aee1610efea7b21b4faf0a53a9b4aaebc4 ./.git/objects/e6/17e6ac37e40b9d99ed37989e8e377bf14fb0cc ./.git/objects/e6/22a1d8be1c365b70b45a2d40cb463e43cfab89 ./.git/objects/e6/30aad8677670c556d4f0a3cca54aac601f4904 ./.git/objects/e6/388fc25f48d97a021d873782ce6ce4a62483e6 ./.git/objects/e6/3d5c1e9114b7950f586d5d8c409cde620c2051 ./.git/objects/e6/5e31ae80be749c2d7ee27f6e1b2dd9f4f5e9d5 ./.git/objects/e6/79e7103916abd14130fdc943c791f511b3e207 ./.git/objects/e6/7ecb5cb6c46a3e84873ab34f51f3c658bb9c30 ./.git/objects/e6/801eb98404eca56e0171ca609e9c64444eaf7c ./.git/objects/e6/851fcefc7e602215ddcbf2a525936990cd9f82 ./.git/objects/e6/8b1277a1e3b26186de04caf1e4aff6e8419544 ./.git/objects/e6/9de29bb2d1d6434b8b29ae775ad8c2e48c5391 ./.git/objects/e6/a738428db7c42df1fc698d796da570f4593ec8 ./.git/objects/e6/abebd15b4509701b9dcd26f5a536c666ed19e9 ./.git/objects/e6/c795d841b8f62d15544cfd6a1e9169f223bcd5 ./.git/objects/e6/ca53b9bbbfea4fa105c60f504d1afce6c9da9a ./.git/objects/e6/d8d516cc3cb06826b2f44a7a81db59c2c5143c ./.git/objects/e6/d8d9928a68adc8408e69b0827afc75d767c54e ./.git/objects/e7/17da20bdf027c47455ee80c94285fdb4d8f9a9 ./.git/objects/e7/2afe02786954ef9fe5d8bbe23c623812b940c0 ./.git/objects/e7/5d15eb439a7d0c94d1b55fc2121776683243ae ./.git/objects/e7/637749b2e9b286a367cdfb179906c053947a3f ./.git/objects/e7/69f00549b3efe3f392642e0bd7109bc58ad163 ./.git/objects/e7/6f131b87ab86849fafbc0a2f64c5e6f52b738d ./.git/objects/e7/b34bed96e8081f332abc3da75ee4f324edb8da ./.git/objects/e7/c2f9de3055744288c36a7b9d745d8315aadab5 ./.git/objects/e7/ca0e9d59e8cce7c7d3ab133aae9370a943dfd0 ./.git/objects/e7/d38c90fa510c71cb13ac3d59b061876cabb64a ./.git/objects/e8/04ffd270dff6eca168a56e0cbaded97228c632 ./.git/objects/e8/3974293fef105c3d86820c6eadc7b663d03778 ./.git/objects/e8/5b7184f242db860b834526356d5db9dee6a197 ./.git/objects/e8/63b226bbc9a1139f3b2742f8b38fcd9bb121f5 ./.git/objects/e8/68f9f5ed139ead9735535feea62e557a84b366 ./.git/objects/e8/8d12364a9b29eb4fdc87240093bf1f8f1a27a2 ./.git/objects/e8/b741e9ffa37c204019735b41c8abf834866fcc ./.git/objects/e9/03d558de4e42ab1f3f263bba707147ddd05ff7 ./.git/objects/e9/04988e2a375e37fa0df5dd5a433b0d2b5e1197 ./.git/objects/e9/3b90cb8eb3f8eb81964b0cc57105e0d108da73 ./.git/objects/e9/4969fbe9251d5482f95e12fd9f6cc04918c6a1 ./.git/objects/e9/50725d268904ed66b4ca9e5b62838f216b29cc ./.git/objects/e9/7a307364681cd8c4532487955840ad6a12be93 ./.git/objects/e9/84d82cb0644b8eb00381618612d1e169a786fe ./.git/objects/e9/bb9314b4bd52ddb2037f3b31881c57e7dffb9c ./.git/objects/e9/e002cd5623bfbe8167a4585e8517313f365545 ./.git/objects/ea/000a3fa3668aa843f0ce80dcb02f1ba78b6790 ./.git/objects/ea/116ca67033bf1e91105474d3fbd3794bf6f933 ./.git/objects/ea/16d6c8579e67aa32534a3ee3b922d02faeea7e ./.git/objects/ea/20b01d7eff9cfe26e2b22a2f80143f8cbf396d ./.git/objects/ea/2a12cb295ed1cb40fb079c1f1a1bea3b0be3b4 ./.git/objects/ea/5d1f5d4cfe987090ce6fe5c3fd8fc4b40cdc6a ./.git/objects/ea/68ab04edcc11644f9d03cbb054e09ee8715380 ./.git/objects/ea/757589d5d7da1dae9cbe06a2fe4bb378775e3c ./.git/objects/ea/9db11f2ee8a3d2b4a1fe4d7ca7c2c46afe926b ./.git/objects/ea/b26b9f4334f33a383886de247ec8479b7c6d1d ./.git/objects/ea/b312a8b5d3277dedf0c5017a704fa0d03bdd6b ./.git/objects/ea/fb6379f9d9a9d60270eba5f49506675346291b ./.git/objects/eb/3fe2c68c6b976033ba2b89cfc46b92b47a5828 ./.git/objects/eb/4808870c364767f1a32ca394454d0a1d31f880 ./.git/objects/eb/809f4e608d6c08c3a68e2b125f3c1bf0f33a3b ./.git/objects/eb/84af9d0abce0c549e5adeb18b5f432ad0a7d3a ./.git/objects/eb/8dae4207bb1d92570a84286d4d87085852d217 ./.git/objects/eb/975b73fd58536acbefb25073b770f01ed4e35a ./.git/objects/eb/9fa561055485d37bd86781c06ab0673766f3ce ./.git/objects/eb/a4c6592526e9ff04115f19e53bd00347b528c3 ./.git/objects/eb/b2716fdefe2a13bbfdd23a5e224b5c0ce0cc5d ./.git/objects/eb/bdab0ecf9c844b8c20d25e9115c06f9332d3c2 ./.git/objects/eb/efc4b5f4c6fefb3ed2987b1e335e5cdcf1eb5d ./.git/objects/eb/f7821dad9bb74360a157d2ff015dc032f64556 ./.git/objects/eb/fc74ee277901d0683fdc465adb5c5115b2a9b5 ./.git/objects/ec/10a7e06eae735374704188321b6c3289753e87 ./.git/objects/ec/20c4102ab5d8dca38f5ca20848b8a648df70c9 ./.git/objects/ec/2e75c05461cd70579a79cd46042c5ee41f0b7d ./.git/objects/ec/4f97f0710103b865989afe6a7b27fdbb43c6e7 ./.git/objects/ec/515a9c4d0a956ee897c0dc2488698ab89e7f3a ./.git/objects/ec/607250eb85b946c420050d70e7514ca2b565f6 ./.git/objects/ec/6a4345e0e388b67d5e3736d956f1ac4e52d031 ./.git/objects/ec/a0b95100b55d7cc90478a39613602e6dea91c1 ./.git/objects/ec/a8d5deb1c8ba2a13a7299348077a966b4e28e6 ./.git/objects/ec/d6fc046667a362f6bab268aae22dda3385a5f3 ./.git/objects/ec/f9a29f023d9238c9679a8b220ca77e14f2279b ./.git/objects/ed/4e6a6eb8cc982ec02ef2dd2bc201c55e444310 ./.git/objects/ed/977a09bf00bb5623214c8f519ee354e34a9f27 ./.git/objects/ed/9994b6b1b2138af88a6cf5ded5df4531c11445 ./.git/objects/ed/b62fb2ae68aeba04bc8445ace8e4441f007a46 ./.git/objects/ed/c741aa12a28e5abb05785504c763b27e3179e5 ./.git/objects/ed/ea7f491913f7a7b930f6783175ac4d858ea9ae ./.git/objects/ed/ef528a6728372a619f68fe70c998dcb3e30baa ./.git/objects/ee/3fc32a080fd889d9d90fea2e8d7e817b3034ab ./.git/objects/ee/694db1f127bd70ae093364c85a004da87a0ec8 ./.git/objects/ee/8d36a93356040a22bbf488664f3824b1ba9f6f ./.git/objects/ee/9743e61d95d96c5b756f004107713b8a795fb9 ./.git/objects/ee/98e8aab73d09b2be0d387f5278eb1dbed8e493 ./.git/objects/ee/a0ebd0e9c1da99b357c4c3ad607b17b1dab819 ./.git/objects/ee/b46d173266911bd976bf2efb1b06220ae70c84 ./.git/objects/ee/b5b50487f86de9138b6753cfed8137bb39384f ./.git/objects/ee/b7e55a883ff3725e3193368faf54a281ba663d ./.git/objects/ee/e49e1f9397282fa612ead90253df48e35c7dce ./.git/objects/ee/e9e5967692431b256fdf4b961f83e9c46cfc4a ./.git/objects/ee/f6e0aec18113707ec47ebe475a96d009aa48e6 ./.git/objects/ef/05bef22e774a2eb4cd0848c439ec69f15085f5 ./.git/objects/ef/0cc72bfdc22fedcdce8f2b0d8a866183783c26 ./.git/objects/ef/1e6b6091913ca3c817794f80c6037ef998829f ./.git/objects/ef/7ba7c139131812456ca11f0de908c55b4072db ./.git/objects/ef/7d8fe91afc6dbdda9bc3a875caabbf278454f4 ./.git/objects/ef/b6f7842b99d2efa3308a6273184cc51b74fc84 ./.git/objects/ef/dac2253ae2f297996c61c32587978ec8386624 ./.git/objects/ef/dca499359747fdf7784613a496d2cb2abb539d ./.git/objects/ef/e1f3a173e472a5667ef17edcb0b6a916dad787 ./.git/objects/ef/e8857e9724ff8de8d4ecc7ff14e95c838fcfa9 ./.git/objects/ef/f5a25a8e9daedb9be008ab9fce6b0ca227f799 ./.git/objects/f0/0c56577eb3b229eb54c8a075ca6252df2a1929 ./.git/objects/f0/136ca886e1b6797605bfd026bb09be94ff496e ./.git/objects/f0/453a3073c3e9a81d90dd2f9d3bb2af96f4a458 ./.git/objects/f0/562fe33a06cffa3dcb9f7ef9a5f5adb268e90a ./.git/objects/f0/66a098a93aca36b67321786c3a636166a04270 ./.git/objects/f0/6b881974bcf9f371c353d194ed08d852d50b9d ./.git/objects/f0/aa87920edadf56ee065fdeb730d17b9eb071dc ./.git/objects/f0/d089491c3bc38d7ad3be66c7a6b665c52ba0b6 ./.git/objects/f0/e5b523b95f3a6daa8421e326edcafd01581b94 ./.git/objects/f0/edbc674f2cd48eb36be5db4a23d0af2cfb6829 ./.git/objects/f0/f3e2ce1b10725c607bcfa0dd320b280ddac53e ./.git/objects/f1/0bf15f9d2f1338b51c4aa0b19b97b53576ac7d ./.git/objects/f1/576a1be966b2a1acb9e3c48672d67c0af34895 ./.git/objects/f1/8aae22f2ee80093aec77122c0f788ab22ffe4d ./.git/objects/f1/b46b6a7912f2aa2a4059826ec255eefd4c3bbc ./.git/objects/f1/cd4b526a1e2d15b625264d232ca042dab2f94f ./.git/objects/f1/ce4f11204c3fe6fb8e867475175765fb4b1295 ./.git/objects/f1/db7597ab6b88d7533a9a959f0cfa7f183806a2 ./.git/objects/f1/def25ab2ba83e20d8e887fd141c172ddc105e6 ./.git/objects/f1/e7405160310254a3de736e24e545623f796dd3 ./.git/objects/f1/e8ae8be4ebb938bd83f5a82e75c89343df20eb ./.git/objects/f1/ebba8a89615eb2d980c8ff04e77a32dd6967d1 ./.git/objects/f1/f1ee1b6651eb4996c01d8270a72ef154c5de41 ./.git/objects/f1/f5d72eba91bd24964f9ebae536fa2355e63f7b ./.git/objects/f1/f6121753519031c9fd1d0c640cf5b6692bf00e ./.git/objects/f1/fb8512b2908e0e93418f9c93334fc654b26bb4 ./.git/objects/f2/09b17ca6a1117e013869c00f7b1bda122d6b41 ./.git/objects/f2/183c524e52c3ccdd7b5a174b4da9f3e33515d3 ./.git/objects/f2/1fcac32fbd893c56369ea0d5a2db2bee8ea4d0 ./.git/objects/f2/20474ddd040aeb2b669797d79eec251d7965b8 ./.git/objects/f2/226a40f4044c6d8b1618d963abee90096fd124 ./.git/objects/f2/527d167e5b805ec29e36b1f6621d397f969ff7 ./.git/objects/f2/774fc971c28d1ab8c8480d2146cd91311b797e ./.git/objects/f2/8fa816c05dbdb7337f6288f42ab9967731d563 ./.git/objects/f2/9f581d660997432d28af45d76362dad821ae9b ./.git/objects/f2/a9ccd8867a823527274e4a56869be0cd2a64a4 ./.git/objects/f2/bc813821a964232e2d99541fcee797bc303914 ./.git/objects/f2/c73f27b47b60da28adedab16a6fa2d0ba5cd6f ./.git/objects/f2/f6d71f72c90e292ee63fb2e9d8dde65bc901a4 ./.git/objects/f2/fb2cb944ada667f867e70baa60350ee8a8fd85 ./.git/objects/f3/0cfb4ac488d73f8e418bd54ba70a1710aee1ca ./.git/objects/f3/1c4a8adf3e97cba20af668028c3e6371f2d96a ./.git/objects/f3/1c64b39f5858fd83abf11a088d2bd36453f6aa ./.git/objects/f3/4b9ceb0485cc6a1fcf6b793766a1e4839aeddc ./.git/objects/f3/4ef2b4b228a565ef05153c167647afb9a508fb ./.git/objects/f3/73967e6b29c0fae0d158666120336d901f4efa ./.git/objects/f3/790fdd08af545831f6977f74139dbc85eeb83e ./.git/objects/f3/ab794f4e61794e8ca995945518c2b1547b64be ./.git/objects/f3/b915b1fe35c0b6a9f577e21ed048073f59c7e2 ./.git/objects/f3/cdef0613f8c0243152415c2179ed3494ce94dc ./.git/objects/f3/ec3887e75da2e449591d4d36f9cee5b9e78a90 ./.git/objects/f4/01e4a5e3be8dea900afc5f8bb2457d8277b257 ./.git/objects/f4/22fb1e7fef3549a4941107a9fed983007d8bb7 ./.git/objects/f4/4277b5441e03a57f6415a2c22677a1e8ac826f ./.git/objects/f4/4517d4572ad383c516901acb378c21ad8a64ad ./.git/objects/f4/751f751b9884eff687507f5c1bd014ca14026d ./.git/objects/f4/9184cf12b292158120101f9662b6c09e4e8ac4 ./.git/objects/f4/d1186eadf17a982584b6e9bf5de9298276bd21 ./.git/objects/f4/d20ba07b75ec4b1f3253836fd9145f5fdb761b ./.git/objects/f4/d49cc25355128c26767645360e54ae1b92d52e ./.git/objects/f4/deb302b085e945e1e6f982d4dafc9fde7a1f45 ./.git/objects/f5/0b3db42f343bb3c6a8eaeff9988b0f9649e97b ./.git/objects/f5/168ce276bde37322574776714860b06120d11a ./.git/objects/f5/1c2dd53fe12b2e995f5bf188d0eb7dda9d3df5 ./.git/objects/f5/27b96c68a8a566172d6ae479bce7abbf575e69 ./.git/objects/f5/697aef2909ea4f68dfa034b52891e41d7885e9 ./.git/objects/f5/73ed9fa0a96e20ee45aea55276394ee628131b ./.git/objects/f5/93f0a742454fbaa39c6ea943d88ce337c21a79 ./.git/objects/f5/95e0ee78bd154765c44bde409f150345a38966 ./.git/objects/f5/9701de59e0dd1dfa6cb3cd19a2b55404c0856a ./.git/objects/f5/9e0c96408fe4a9417147fd0f40a5a2c3fdf5eb ./.git/objects/f5/a3ccff17cae37e333351c9a6241324992db3a3 ./.git/objects/f5/adb35b4f02b318464864a7f59c1e3782032c0a ./.git/objects/f5/bdaa1eefecc7c7e02585f855e4cb07f7cc783f ./.git/objects/f5/c6851ebed3bc42432bb78dad5f8e6b530f5b80 ./.git/objects/f5/d6d7457d0e1ec9f734f5ceb422d93a16227546 ./.git/objects/f5/efc18b455fe9cccb9309f4202a82c213348610 ./.git/objects/f5/f51a29418b0102f51bdfbef662f852f7778669 ./.git/objects/f5/fc3b0dc71e0d1635d273ff91a5e58344a61ec3 ./.git/objects/f6/0f1e8bbc315f8fbab91687bd9c324d4bdecbd6 ./.git/objects/f6/5ef898ce8fd05858afee4a1fd00a25dbc0be2e ./.git/objects/f6/85fe5b4eb99a31e40f09a7a4c3c2a3dd4b4b04 ./.git/objects/f6/9b73f0ede50f0b89043d8dfac37e15afa6fee4 ./.git/objects/f6/a051a9548e1ad5558f9e83e8395b521c307332 ./.git/objects/f6/a4dadaaa2fba6977a65bb1e0e3b7a169d5ccd6 ./.git/objects/f6/a5b0de533b7906a3495608c5c4b16fc47cadc8 ./.git/objects/f6/a6401f94f0147b969c31894dbd76862c8378bf ./.git/objects/f6/ceb5143fd2b5470ca2f9a3120fbd6dc26c86da ./.git/objects/f6/de39253d42454890657a91f981bf70551ad19f ./.git/objects/f7/1839eafb5fe959facc827eddde2c3d83eb6ab7 ./.git/objects/f7/3b850e32910e54ec95d200708fa365d60a095e ./.git/objects/f7/57bd0bdc617c5b576fadb08b6ff6733b506237 ./.git/objects/f7/5d2033436150405b0bbf0d7c1fa4ae549c6ed0 ./.git/objects/f7/5e366d05032fad56a16350d5b566396e38a884 ./.git/objects/f7/8f8eafe71485c04a09f38675a1b046a05847c9 ./.git/objects/f7/98f10ddfd8dee897f1eb96fba144ceba1d01a9 ./.git/objects/f7/9de7218568ec1dfcc1780e56989309fef08313 ./.git/objects/f7/ac9173f2c3b2fee233611f7c8feb6038fa2f0a ./.git/objects/f7/b5cf5795adf06979342740aae4a9bf5fb35aab ./.git/objects/f7/c6eca53684bb19ddfe045045fe529650183543 ./.git/objects/f7/e12a3bcb853eecf820c25b0579ed5a192deaec ./.git/objects/f7/eabedcbddca01b48550cf93ac97cf2f904750a ./.git/objects/f8/06364a0f0461e9d8f96b3dec1d7301efe9ab61 ./.git/objects/f8/40a3fd1a7c14bc980e0c0c263673034c1ccc2f ./.git/objects/f8/553a0bf1e457d348648fcb3418ed3e7bfe6c7f ./.git/objects/f8/570b98fe08a21d4fcdf250a9595b22e5c7b043 ./.git/objects/f8/80deb64a54f5ba375395b836da5b2e530c7a7f ./.git/objects/f8/a9d7f6dd8f4ed8c1063a0d689abda000176b7c ./.git/objects/f8/b29fefac11dd7bf35ce73943962beb425363c8 ./.git/objects/f8/ba71f3c07497675b8b236dacfb5ad9bcf3e727 ./.git/objects/f8/c0ed25a3a35957eed97d32a81125915af31ca4 ./.git/objects/f8/c2b5b923fc8ea71d1cf9bdb338c8dba1495e51 ./.git/objects/f8/d8d7b13ac2e11e8a4d54b46c195e6f68198187 ./.git/objects/f8/e3020381c57899bc2300fa677ed4116d5ebf9a ./.git/objects/f9/463bd82ce03bb49305e553f4af0b59cb70cd84 ./.git/objects/f9/52d94e60d7a753767a8057b5cddb1d0efd49f3 ./.git/objects/f9/555c85f7e0fb89c1cfe3a49f4be9f0b3bbb139 ./.git/objects/f9/5c8e1096a089c2536b6dcfec359d82eac75fab ./.git/objects/f9/73e5b9869bc7422a2436c7d68e52294abda6b8 ./.git/objects/f9/799bfcaa265a06bcfbd3b46249d9692e033fae ./.git/objects/f9/85b9192a10fd31e2b17c870947df6622bd34af ./.git/objects/f9/b6bc47f171624399ab7f54f217cec8c7a18756 ./.git/objects/f9/c7b5c5818ee6cd967c5e618d0db21901a14b71 ./.git/objects/f9/db3f42f108760900ec090941341e7e986fa948 ./.git/objects/f9/f38d078c37ec832e039ede8e35631ee78db43e ./.git/objects/fa/192ba1544b9b8694c909c2faa2f0ee23419bdc ./.git/objects/fa/233729d4e6f3fc0061c7bdd465da0c08fa6bb9 ./.git/objects/fa/57f25dbdf5d0e63ae75a6ddc35202d619672f8 ./.git/objects/fa/5ee7a65b7e2e9a8225e033617523aeb1227bb3 ./.git/objects/fa/765b6d83fc8cece005b130a97eda2723623265 ./.git/objects/fa/828ea69cbd63c0d8c0d8850880dfb99b47d5f2 ./.git/objects/fa/b09e12ac05eb38e6026c1b173affe7314c5e09 ./.git/objects/fa/bb158e7056cd5ef2c1a0fed8f309bc378e630a ./.git/objects/fa/c268dd6f9bf38b5ef481995cddaa373187f5c5 ./.git/objects/fa/c31112f13b0c8bc6b4e85e90d7608575ab420f ./.git/objects/fa/e55e6d5642ce40aa2e96e8d86185c71f2029b3 ./.git/objects/fa/e9f4229f93bb1bbea3a3d63c99afb46e76fb72 ./.git/objects/fb/0c9b00dbf431e53077c9454dd5faaaac4274c6 ./.git/objects/fb/0e7b5efc2e6e1562b765048ac131f170015be4 ./.git/objects/fb/1d3a77b0e5cf8fd1d8d797e7588166b8009517 ./.git/objects/fb/24c36b26fd9f30018adf792d52353c6a2424b9 ./.git/objects/fb/52d3705679ea97af30c155006841db0c194ffb ./.git/objects/fb/56821037d303e87e0d02678b810fc0b14c2dbe ./.git/objects/fb/879255578be27bb50de21bb9c44d21723df826 ./.git/objects/fb/894faad66911d8a9a243498607e12207a1cb86 ./.git/objects/fb/899ab46e2af9d5a2fdc45a42ac88d23e0af960 ./.git/objects/fb/b25eafe04c011238507791b8128f877ee5dc89 ./.git/objects/fb/b6a8d365c68499647701d940964e84b8f8405a ./.git/objects/fc/0cbfbe59fdfb19af2194eaa3cac12f87ea331c ./.git/objects/fc/698df453c7fe716bc139d96549ec42fe6bffc5 ./.git/objects/fc/a4a667aff2d2bfde3fac66b53d6a601d5aa9f4 ./.git/objects/fc/aefacdf8ae724a961760a4324c1667962e7bf3 ./.git/objects/fd/0160c7105e2cc626fc16e1ed49566fa8240b47 ./.git/objects/fd/14e8ce8d08e1c2fb82b4e1e5dcc4037b67295c ./.git/objects/fd/3b09f17e0173d9c71b62dc231435d4cfdb42b1 ./.git/objects/fd/3beab76ff60eece11ccacb98e3ab3a026d5b80 ./.git/objects/fd/7eed381ed5efca3bfd46eacea9445960db8efd ./.git/objects/fd/89740ef3d615e6e647f4d8d2b338b5d542eeb4 ./.git/objects/fd/8e30cb54d162989df0712aa4a4dc18ddfdb663 ./.git/objects/fd/c233aa8e2a466259a3173253b35d234060abf4 ./.git/objects/fe/0556b50466dfb46ed66db0353f891200044331 ./.git/objects/fe/2d1f5827acd42aaba837dca7341d63e235ce35 ./.git/objects/fe/38c3ce095a8c59a42f3ed82738050b82a3b2d4 ./.git/objects/fe/3b64b6cbad9f4de89e1b5863afb669ae098302 ./.git/objects/fe/4274ac515ef5c890d88d4a65641c4f1d2475d4 ./.git/objects/fe/78921437d0a50152afa7dce86a25fcf8962ae8 ./.git/objects/fe/a39877d67703b70ddc9cea3eb57bd457cb13c2 ./.git/objects/fe/a4d9831a5ca22dd025df5338f6408adaf289ae ./.git/objects/fe/a597c1a036e0a3a1ea4d7b316209d36ae26e46 ./.git/objects/fe/a9fd702f75f1c812dff2688409d8618e29f8cc ./.git/objects/fe/c9fa061def35d940f86ab6f6c4e2f6e31ec966 ./.git/objects/fe/f3374ef79d7fb4eceb76d300104c3df025a98f ./.git/objects/fe/f83fafadb313705d3171d021f72eae26443588 ./.git/objects/ff/113ded7c351619766e8e2352140093409ac803 ./.git/objects/ff/1aafadbc44ca7dd700e5aedc0ce797b6495d22 ./.git/objects/ff/2c5e357738572cf04b5a263eb08ce436c110a3 ./.git/objects/ff/375f88011676b66efe558cddb8598850b9adc1 ./.git/objects/ff/7640fc9ac28e19fc6d8f67aaeacf7a4e58caec ./.git/objects/ff/7a29ee24ed60ce3c3ab4230381da0ba07564a5 ./.git/objects/ff/923dc297cd6bcd003ffe037f423bd456ee6e1a ./.git/objects/ff/9784afb1f9e1277c250a92dcbd5e2836c5d2d2 ./.git/objects/ff/a3636d075343441f5d1ed3a7ca1740cb94a529 ./.git/objects/ff/faf771df9309b6be014a0ea2ab6c4a2fa0ba1b ./.git/refs/.DS_Store ./.git/refs/heads/all ./.git/refs/heads/backup ./.git/refs/heads/main ./.git/refs/remotes/origin/HEAD ./.git/refs/remotes/origin/backup ./.git/refs/remotes/origin/dependabot/bundler/google-protobuf-4.28.2 ./.git/refs/remotes/origin/dependabot/bundler/rexml-3.3.6 ./.git/refs/remotes/origin/dependabot/bundler/webrick-1.8.2 ./.git/refs/remotes/origin/main ./.git/refs/stash ./.git/refs/tags/20242009-pre-reorg ./.git/worktrees/backup/FETCH_HEAD ./.git/worktrees/backup/HEAD ./.git/worktrees/backup/ORIG_HEAD ./.git/worktrees/backup/commondir ./.git/worktrees/backup/gitdir ./.git/worktrees/backup/index ./.git/worktrees/backup/logs/HEAD ./.github/.DS_Store ./.github/FUNDING.yml ./.github/workflows/jekyll.yml ./.gitignore ./.vscode/settings.json ./.vscode/spellright.dict ./CNAME ./Gemfile ./Gemfile.lock ./_config.yml ./_site/.DS_Store ./_site/.htaccess ./_site/404.html ./_site/about/.DS_Store ./_site/about/index.html ./_site/about/resume/index.html ./_site/about/sullivan-michael-creds/index.html ./_site/android-chrome-192x192.png ./_site/android-chrome-512x512.png ./_site/apple-touch-icon.png ./_site/assets/.DS_Store ./_site/assets/css/mineokai.scss ./_site/assets/css/monokai.scss ./_site/assets/css/style.css ./_site/assets/css/style.css.map ./_site/assets/css/style.scss ./_site/assets/documents/SullivanMichael_IT_AI_ML_Unix_42020819.pdf ./_site/assets/images/IMG_1887.JPG ./_site/assets/images/child-with-robot.png ./_site/assets/images/child-with-robot.webp ./_site/assets/images/projects/TokenSecure.png ./_site/assets/images/projects/TorchDevice.png ./_site/assets/images/projects/oobabooga-macOS.png ./_site/assets/images/projects/text-generation-webui-macos.png ./_site/assets/images/projects/venvutil.png ./_site/assets/images/some-image.webp ./_site/assets/js/email-obfuscation.js ./_site/assets/minima-social-icons.svg ./_site/blog/index.html ./_site/coding/ai/2024/09/02/AI-Coding-Assistants/index.html ./_site/coding/ai/blog/2024/09/27/Building-This-Site-With-AI/index.html ./_site/collaborate/.DS_Store ./_site/collaborate/community/index.html ./_site/collaborate/index.html ./_site/collaborate/professionals/index.html ./_site/contact/index.html ./_site/faq/index.html ./_site/favicon-16x16.png ./_site/favicon-32x32.png ./_site/favicon.ico ./_site/feed.xml ./_site/hidden/sitemap/index.html ./_site/index.html ./_site/projects/.DS_Store ./_site/projects/TokenSecure/index.html ./_site/projects/TorchDevice/index.html ./_site/projects/index.html ./_site/projects/oobabooga-macOS/index.html ./_site/projects/text-generation-webui-macos/index.html ./_site/projects/venvutil/index.html ./_site/redirects.json ./_site/resources/emergency-resources/index.html ./_site/resources/index.html ./_site/robots.txt ./_site/site.webmanifest ./_site/sitemap.xml ./_site/test/2024/08/16/Testing-markdown-formatting-with-our-changes/index.html ./errout.txt ./file_layout.txt ./genmd_env.sh ./histfile.txt.xz ./html/.DS_Store ./html/.htaccess ./html/.jekyll-cache/.DS_Store ./html/.jekyll-cache/.gitignore ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Cache/b7/9606fb3afea5bd1609ed40b622142f1c98125abcfe89a76a661b0e8e343910 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/04/e2a9728af7584043c5d58ae29e7cd811883e8dab15fc6287675270669a3ada ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/0e/49c9eeed72fc614054f60c92f7aee4a78c6c17c1aac990d9920e8fcc46b347 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/1a/d5dd468fc821d7b1b4b7da626726f61bd79b77541d3446dbc26b0ddb78b9d6 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/1c/9c6b361a0da1ff8d23e088b62dacc37c68682ff6f7aefdb067ef8fcb34ed28 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/21/52779bec9651397443efcd50d9299ebdce9b5d6c24b4ebee138be077a01f75 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/29/13656300432f166f2c613909beaa4cc1cb7bf0862f828c8c9dc1468fc1f07a ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/2f/570b365b282f27a36286118a18dbc2b9c63984661bd129e4f57fe443702c77 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/2f/de0714e2b2ddaaec0b5afd09eb720ddb318e5926c5c3abb596e08b15855fe1 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/39/9f519ae3bb1ba0317b7a73c609bf1b082c6e55c7d168bac2ec64a71c96ab17 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/3f/7ebc9bf43bd54850ed7770fdcbe8a022b6e1bc3afce8b7621bb0ace43c10bf ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/4d/b550cd984016b916bbb7da01f5150efa7c0045fbf3b317eade9f39cbd4b3ba ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/53/9c983853f4f132ff8dd6ee577e35d6aca05d55d8e591d4dc9990bf71b00c57 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/56/c30174b3097c3a62a5d00407d1a53939410b6c10ffcf134e03296844e4e0b4 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/5d/8c71abc527284cd463aa58f3f48098af5ab2f4225a744aa930a4b0e27d7395 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/5f/97c5c5e1f52761013f7744e1bddef3cea4ccbba6d80f3a7fb6c44225ae019c ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/62/2dedfc9e6c53545c1713744e376718bcbf0728c3ae695938885338380b712f ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/66/ce2c5753788a65e053b281b9c3884bdbb3938f7d3cc5cae4d7bd6fa3841cfc ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/6a/ade9831966ca83e1a2260371a2aa15beddeef6c55c90c130c83b097daa0284 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/71/ed000136e0aabeb02c367e4144d1f2bac330134f695335e42092f108b6bd4f ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/7b/8f2d93939911547a21e191b0d39f8c5cc7fd0f6cc40f5289ef8c81c98133b3 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/7d/fd99f182efb4c7247756c3f548b384cf01e0b862df1109945e37e485368598 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/89/9faa4d6cbf32957b2e5b94d6dbf6ae8dc39dad120abb56e5ef44becc211745 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/8a/d9b11b9075e03014df5a2ccabe0dedbe0a4ba0e55c02762fa9883c14d7bf2d ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/8d/6d4383d307b083a85f92ef8d81c3c9cbbfc1cb357bfb396768a34ee55619e5 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/90/7c18e031bd90fce81bade1b18c4f14f8aa84ae91f634489f30ee440fd04435 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/94/dc5662cb34d699faf16207682c80f2f019d84abe65b28fbb0b3bd6cb7cb128 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/96/deefdbc0802710f6e0757ecd21823f3a57249583ff0f2662841f88aa60be01 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/98/b67063cf8e584d75e53b88472ee85473e01e0ea16f29ece9cc98f4a2710494 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/a0/049d967ec91aa39f2f18ce62aaca2730ca793281720b0f3cd5b7fcdff22d53 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/a0/84b3d470b0315ce09c24f8a5125fdaa3dd734f34ca2f15361ab79d477bb53c ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/a3/d458e1bd1eda066018d8db2dd5537c9e742f02f68401457c01553e77f57403 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/a4/6ecf31e42ec48d55c7a5aab6455bba806f08ba963808fb332ca30c8d7811e4 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/a9/87432b9fb9ec892de0358a0c32873f651369b6bc211cb5786bed23a9f28a60 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/aa/1597910a4f28119636890a64c3ca1ef478f82c25fae845f7f07e99a033a1bc ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/ae/56d9334c22486fccf56f8fa7b44d64a055d8b554a7b4498fb193ab24e8d354 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/b1/a2975e58709f7f6c16f81f2cf0ed82f2dccff794a925346f3013fccf60a3d2 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/b2/1f6b8d5d33a636dcfc38a1886fbf5b4d380ef63b95ee7104c7dee166795cb3 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/b4/ef5f6f98681308141a6be42a93b2a903b14838415f701395cbddc4b6ebcef4 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/b6/dad376ddae436c27b2086e6ed672643deef8ebb7360b9e7cfa37222ae7aee8 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/b6/e9e59d8809ea4ea0656bddbf516f6840ef063024895cd5454fe207a3790be7 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/c7/82e92f8dc92f13bdba9202829ff85a52cf7045bd89a54bb984af2347ce4758 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/c9/9f73a2c5a3af198948f57ce1d72f937ae85c628d5332d860b4f16090148ace ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/d3/f2c53d873f42f1cdb5828fcf81a64f6942a7b0bb4b7a972cdee215c73bc4a3 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/d6/40c7421da066618a39daf4266da5f61f66a9b1afcd626481b831a17064965d ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/d8/533fc8e975b10224af6be83831761a990f218d32e8ecad1ab7b7fb063dd4a0 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/da/d6541de134c77d5d5e161ca333e12e62a118caecc5a0d14fbb1322e6daecb1 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/e3/b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/e5/20be23fd1cf6a46cd5affc8650b8fcf3d829b21d700f86ba84b5a142889fb6 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/e8/9b30aa1dc30a6ad8c34610689bede83b3ef645a24c3a84a0990826687fb735 ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/ee/ba261c71f99adae58e5649bb1e56c4adcab514f27089ba6f906afa12747c3a ./html/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/f9/8901a128cc7a2fa095366df27d99f85670b8ef863e30df70602203cf4bd6be ./html/404.html ./html/_data/.DS_Store ./html/_data/countries.yml ./html/_data/github_projects.yml ./html/_data/repos.yml ./html/_includes/.DS_Store ./html/_includes/codeium_stats.html ./html/_includes/custom-head.html ./html/_includes/disclaimer.html ./html/_includes/footer.html ./html/_includes/getintouch.html ./html/_includes/head.html ./html/_includes/header.html ./html/_includes/join_us.html ./html/_includes/navigation.html ./html/_includes/projects/TokenSecure.html ./html/_includes/projects/TorchDevice.html ./html/_includes/projects/oobabooga-macOS.html ./html/_includes/projects/text-generation-webui-macos.html ./html/_includes/projects/venvutil.html ./html/_includes/projects_list.html ./html/_includes/rss_feed_sub.html ./html/_includes/social-icons/.DS_Store ./html/_includes/social-icons/amazon-pay-svgrepo-com.svg ./html/_includes/social-icons/amazon.svg ./html/_includes/social-icons/amazonpay.svg ./html/_includes/social-icons/apple-alt-svgrepo-com.svg ./html/_includes/social-icons/apple-pay-svgrepo-com.svg ./html/_includes/social-icons/apple-svgrepo-com.svg ./html/_includes/social-icons/apple.svg ./html/_includes/social-icons/applepay.svg ./html/_includes/social-icons/bitcoin-2.svg ./html/_includes/social-icons/bitcoin-svgrepo-com.svg ./html/_includes/social-icons/bitcoin.png ./html/_includes/social-icons/bitcoin.svg ./html/_includes/social-icons/buymeacoffee.svg ./html/_includes/social-icons/cocos.svg ./html/_includes/social-icons/codeium.svg ./html/_includes/social-icons/creativecommons.svg ./html/_includes/social-icons/devdotto.svg ./html/_includes/social-icons/devto.svg ./html/_includes/social-icons/discord.svg ./html/_includes/social-icons/disqus.svg ./html/_includes/social-icons/dribbble.svg ./html/_includes/social-icons/facebook.svg ./html/_includes/social-icons/flickr.svg ./html/_includes/social-icons/geeksforgeeks.svg ./html/_includes/social-icons/git.svg ./html/_includes/social-icons/github.svg ./html/_includes/social-icons/githubpages.svg ./html/_includes/social-icons/gitlab.svg ./html/_includes/social-icons/godaddy.svg ./html/_includes/social-icons/google_scholar.svg ./html/_includes/social-icons/huggingface.svg ./html/_includes/social-icons/instagram.svg ./html/_includes/social-icons/ios.svg ./html/_includes/social-icons/jekyll.svg ./html/_includes/social-icons/jupyter.svg ./html/_includes/social-icons/keybase.svg ./html/_includes/social-icons/linkedin-svgrepo-com.svg ./html/_includes/social-icons/linkedin.svg ./html/_includes/social-icons/linux.svg ./html/_includes/social-icons/macos.svg ./html/_includes/social-icons/mastodon.svg ./html/_includes/social-icons/medium.png ./html/_includes/social-icons/medium.svg ./html/_includes/social-icons/meta.svg ./html/_includes/social-icons/microdotblog.svg ./html/_includes/social-icons/numpy.svg ./html/_includes/social-icons/openai.svg ./html/_includes/social-icons/opensourceinitiative.svg ./html/_includes/social-icons/pandas.svg ./html/_includes/social-icons/patreon-2.svg ./html/_includes/social-icons/patreon.png ./html/_includes/social-icons/patreon.svg ./html/_includes/social-icons/paypal-1-svgrepo-com.svg ./html/_includes/social-icons/paypal-svgrepo-com.svg ./html/_includes/social-icons/paypal.svg ./html/_includes/social-icons/pinterest.svg ./html/_includes/social-icons/python.svg ./html/_includes/social-icons/pytorch.svg ./html/_includes/social-icons/ray.svg ./html/_includes/social-icons/react.svg ./html/_includes/social-icons/rss.svg ./html/_includes/social-icons/ruby.svg ./html/_includes/social-icons/scipy.svg ./html/_includes/social-icons/snapchat.svg ./html/_includes/social-icons/sourceforge.svg ./html/_includes/social-icons/square.svg ./html/_includes/social-icons/stackoverflow.svg ./html/_includes/social-icons/stripe-svgrepo-com-2.svg ./html/_includes/social-icons/stripe-svgrepo-com.svg ./html/_includes/social-icons/telegram.svg ./html/_includes/social-icons/tensorflow.svg ./html/_includes/social-icons/twitter-bird-svgrepo-com.svg ./html/_includes/social-icons/twitter-svgrepo-com.svg ./html/_includes/social-icons/twitter.svg ./html/_includes/social-icons/wandb.svg ./html/_includes/social-icons/youtube.svg ./html/_includes/social-item.html ./html/_includes/social.html ./html/_includes/svg_symbol.html ./html/_includes/wand_accred.html ./html/_layouts/.DS_Store ./html/_layouts/blog.html ./html/_layouts/home.html ./html/_layouts/page.html ./html/_layouts/post.html ./html/_layouts/project.html ./html/_plugins/remove_headings_filter.rb ./html/_posts/2024-08-16-Testing-markdown-formatting-with-our-changes.md ./html/_posts/2024-09-02-AI-Coding-Assistants.md ./html/_posts/2024-09-27-Building-This-Site-With-AI.md ./html/about.md ./html/about/resume.md ./html/about/sullivan-michael-creds.md ./html/android-chrome-192x192.png ./html/android-chrome-512x512.png ./html/apple-touch-icon.png ./html/assets/.DS_Store ./html/assets/css/_base.scss ./html/assets/css/_components.scss ./html/assets/css/_layout.scss ./html/assets/css/_overrides.scss ./html/assets/css/_variables.scss ./html/assets/css/mineokai.scss ./html/assets/css/monokai.scss ./html/assets/css/style.scss ./html/assets/documents/.DS_Store ./html/assets/documents/SullivanMichael_IT_AI_ML_Unix_42020819.pdf ./html/assets/icons/.DS_Store ./html/assets/images/.DS_Store ./html/assets/images/IMG_1887.JPG ./html/assets/images/child-with-robot.png ./html/assets/images/child-with-robot.webp ./html/assets/images/projects/.DS_Store ./html/assets/images/projects/TokenSecure.png ./html/assets/images/projects/TorchDevice.png ./html/assets/images/projects/oobabooga-macOS.png ./html/assets/images/projects/text-generation-webui-macos.png ./html/assets/images/projects/venvutil.png ./html/assets/images/some-image.webp ./html/assets/js/email-obfuscation.js ./html/assets/minima-social-icons.liquid ./html/blog.md ./html/collaborate.md ./html/collaborate/community.md ./html/collaborate/professional.md ./html/contact.md ./html/faq.md ./html/favicon-16x16.png ./html/favicon-32x32.png ./html/favicon.ico ./html/hidden/sitemap.md ./html/index.md ./html/projects.md ./html/projects/.DS_Store ./html/projects/TokenSecure.md ./html/projects/TokenSecure/TokenSecure-project-blog-entry.md ./html/projects/TorchDevice.md ./html/projects/TorchDevice/TorchDevice-project-blog-entry.md ./html/projects/oobabooga-macOS.md ./html/projects/oobabooga-macOS/oobabooga-macOS-project-blog-entry.md ./html/projects/text-generation-webui-macos.md ./html/projects/text-generation-webui-macos/text-generation-webui-macos-project-blog-entry.md ./html/projects/venvutil.md ./html/projects/venvutil/venvutil-project-blog-entry.md ./html/resources.md ./html/resources/emergency-resources.md ./html/robots.txt ./html/site.webmanifest ./new_files/.DS_Store ./new_files/assets/css/_base.scss ./new_files/assets/css/_components.scss ./new_files/assets/css/_layout.scss ./new_files/assets/css/_overrides.scss ./new_files/assets/css/_variables.scss ./new_files/assets/css/style.scss ./outfile.txt './tmp/# Comprehensive code review of your curr.md' ./tmp/.DS_Store './tmp/Closer look at CSS.md' './tmp/Deployment | Jekyll • Simple, blog-aware, static sites copy.pdf' './tmp/GPT Thought for 36 Seconds.md' './tmp/GPT reply-1.md' './tmp/GPT reply.md' './tmp/GPT'\''s impression of my plan so far.md' './tmp/GitHUb Block.html' './tmp/Great Now that we have the Open Graph (.md' './tmp/I have a Jekyll website which I am tryin.md' './tmp/Jekyll Web site and Github Projects.md' './tmp/Jekyll usually matches SVG icons to soci.md' ./tmp/Minima_formatting.md './tmp/OG Information.md' './tmp/Project overview and plan.md' './tmp/Project plan.md' './tmp/Refactored Jekyll Site with Optimizati.md' './tmp/Refactoring and enhancing genmd functi.md' './tmp/Themes | Jekyll • Simple, blog-aware, static sites copy.pdf' './tmp/You can definitely include a dynamic Git.md' ./tmp/add_permalinks.sh ./tmp/commands.txt ./tmp/minima-theme/.DS_Store ./tmp/minima-theme/LICENSE.txt ./tmp/minima-theme/README.md ./tmp/minima-theme/_includes/disqus_comments.html ./tmp/minima-theme/_includes/footer.html ./tmp/minima-theme/_includes/google-analytics.html ./tmp/minima-theme/_includes/head.html ./tmp/minima-theme/_includes/header.html ./tmp/minima-theme/_includes/icon-github.html ./tmp/minima-theme/_includes/icon-github.svg ./tmp/minima-theme/_includes/icon-twitter.html ./tmp/minima-theme/_includes/icon-twitter.svg ./tmp/minima-theme/_includes/social.html ./tmp/minima-theme/_layouts/default.html ./tmp/minima-theme/_layouts/home.html ./tmp/minima-theme/_layouts/page.html ./tmp/minima-theme/_layouts/post.html ./tmp/minima-theme/_sass/.DS_Store ./tmp/minima-theme/_sass/minima.scss ./tmp/minima-theme/_sass/minima/_base.scss ./tmp/minima-theme/_sass/minima/_layout.scss ./tmp/minima-theme/_sass/minima/_syntax-highlighting.scss ./tmp/minima-theme/assets/main.scss ./tmp/mkpages.sh ./tmp/rvminfo.md ./tmp/site-updates.md ./tmp/tmppages/.DS_Store ./tmp/tmppages/.md ./tmp/tmppages/about.md ./tmp/tmppages/biography.md ./tmp/tmppages/blog.md ./tmp/tmppages/index.md ./tmp/tmppages/mkskel ./tmp/tmppages/people.md ./tmp/tmppages/post.md ./tmp/tmppages/resume.md ./tmp/tmppages/site/.DS_Store ./tmp/tmppages/site/.jekyll-cache/.gitignore ./tmp/tmppages/site/.jekyll-cache/Jekyll/Cache/Jekyll--Cache/b7/9606fb3afea5bd1609ed40b622142f1c98125abcfe89a76a661b0e8e343910 ./tmp/tmppages/site/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/b2/1f6b8d5d33a636dcfc38a1886fbf5b4d380ef63b95ee7104c7dee166795cb3 ./tmp/tmppages/site/.jekyll-cache/Jekyll/Cache/Jekyll--Converters--Markdown/e3/b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 ./tmp/tmppages/site/404.html ./tmp/tmppages/site/assets/.DS_Store ./tmp/tmppages/site/assets/css/default.css ./tmp/update-files.sh ./utils/.DS_Store ./utils/bin/fetch_og_data.py ./utils/bin/genmd ./utils/bin/jekyll-service ./utils/bin/push-social-media ./utils/bin/push-twitter ./utils/bin/screenscraper.py ./utils/bin/update_structure.sh ./utils/etc/combined_source.grc ./utils/etc/jekyll.pid ./utils/etc/my_test_file.grc ./utils/etc/yet-another-test.grc ./utils/output/combined_source.md ./utils/output/combined_source.md.tmp ./utils/output/combined_source.md.xz ./utils/output/common_source.md ./utils/output/my_test_file.md ./utils/output/yet-another-test.md.bz2 ./utils/output/yet-another-test.md.tmp
+ [[ 1 -gt 0 ]]
+ local file_excludes_regex
++ build_regex 'Exclude files' file_excludes_ref
++ local 'caller_message=Exclude files'
++ local -n patterns_ref=file_excludes_ref
++ local regex=
++ local escaped_pattern
++ log_message DEBUG2 'Exclude files patterns: "*.svg .png"'
++ local message_level=DEBUG2
++ shift
++ local 'message_out=Exclude files patterns: "*.svg .png"'
++ [[ -z _ ]]
++ '[' 20 -le 27 ']'
++ echo 'genmd DEBUG2(20): Exclude files patterns: "*.svg .png"'
genmd DEBUG2(20): Exclude files patterns: "*.svg .png"
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Exclude files input pattern: "*.svg .png"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Exclude files input pattern: "*.svg .png"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Exclude files input pattern: "*.svg .png"'
genmd DEBUG3(20): Exclude files input pattern: "*.svg .png"
+++ echo '*.svg .png'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.svg \.png'
++ escaped_pattern='.*\.svg \.png'
++ escaped_pattern='.*\.svg \.png'
++ escaped_pattern='.*\.svg|\.png'
++ log_message DEBUG3 'Exclude files escaped pattern: ".*\.svg|\.png"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Exclude files escaped pattern: ".*\.svg|\.png"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Exclude files escaped pattern: ".*\.svg|\.png"'
genmd DEBUG3(20): Exclude files escaped pattern: ".*\.svg|\.png"
++ [[ -z '' ]]
++ regex='.*\.svg|\.png'
++ log_message DEBUG2 'Exclude files final regex: ".*\.svg|\.png"'
++ local message_level=DEBUG2
++ shift
++ local 'message_out=Exclude files final regex: ".*\.svg|\.png"'
++ [[ -z _ ]]
++ '[' 20 -le 27 ']'
++ echo 'genmd DEBUG2(20): Exclude files final regex: ".*\.svg|\.png"'
genmd DEBUG2(20): Exclude files final regex: ".*\.svg|\.png"
++ echo '.*\.svg|\.png'
+ file_excludes_regex='.*\.svg|\.png'
+ readarray -t files
++ grep -vE '.*\.svg|\.png'
++ printf '%s\n' ./.DS_Store ./.env/project.env ./.env/unset.env ./.github/.DS_Store ./.github/FUNDING.yml ./.github/workflows/jekyll.yml ./.gitignore ./.vscode/settings.json ./.vscode/spellright.dict ./CNAME ./Gemfile ./Gemfile.lock ./_config.yml ./errout.txt ./file_layout.txt ./genmd_env.sh ./histfile.txt.xz ./html/.DS_Store ./html/.htaccess ./html/404.html ./html/_data/.DS_Store ./html/_data/countries.yml ./html/_data/github_projects.yml ./html/_data/repos.yml ./html/_includes/.DS_Store ./html/_includes/codeium_stats.html ./html/_includes/custom-head.html ./html/_includes/disclaimer.html ./html/_includes/footer.html ./html/_includes/getintouch.html ./html/_includes/head.html ./html/_includes/header.html ./html/_includes/join_us.html ./html/_includes/navigation.html ./html/_includes/projects/TokenSecure.html ./html/_includes/projects/TorchDevice.html ./html/_includes/projects/oobabooga-macOS.html ./html/_includes/projects/text-generation-webui-macos.html ./html/_includes/projects/venvutil.html ./html/_includes/projects_list.html ./html/_includes/rss_feed_sub.html ./html/_includes/social-item.html ./html/_includes/social.html ./html/_includes/svg_symbol.html ./html/_includes/wand_accred.html ./html/_layouts/.DS_Store ./html/_layouts/blog.html ./html/_layouts/home.html ./html/_layouts/page.html ./html/_layouts/post.html ./html/_layouts/project.html ./html/_plugins/remove_headings_filter.rb ./html/about.md ./html/about/resume.md ./html/about/sullivan-michael-creds.md ./html/android-chrome-192x192.png ./html/android-chrome-512x512.png ./html/apple-touch-icon.png ./html/assets/.DS_Store ./html/assets/css/_base.scss ./html/assets/css/_components.scss ./html/assets/css/_layout.scss ./html/assets/css/_overrides.scss ./html/assets/css/_variables.scss ./html/assets/css/mineokai.scss ./html/assets/css/monokai.scss ./html/assets/css/style.scss ./html/assets/documents/.DS_Store ./html/assets/documents/SullivanMichael_IT_AI_ML_Unix_42020819.pdf ./html/assets/icons/.DS_Store ./html/assets/images/.DS_Store ./html/assets/images/IMG_1887.JPG ./html/assets/images/child-with-robot.png ./html/assets/images/child-with-robot.webp ./html/assets/images/projects/.DS_Store ./html/assets/images/projects/TokenSecure.png ./html/assets/images/projects/TorchDevice.png ./html/assets/images/projects/oobabooga-macOS.png ./html/assets/images/projects/text-generation-webui-macos.png ./html/assets/images/projects/venvutil.png ./html/assets/images/some-image.webp ./html/assets/js/email-obfuscation.js ./html/assets/minima-social-icons.liquid ./html/blog.md ./html/collaborate.md ./html/collaborate/community.md ./html/collaborate/professional.md ./html/contact.md ./html/faq.md ./html/favicon-16x16.png ./html/favicon-32x32.png ./html/favicon.ico ./html/hidden/sitemap.md ./html/index.md ./html/projects.md ./html/projects/.DS_Store ./html/projects/TokenSecure.md ./html/projects/TokenSecure/TokenSecure-project-blog-entry.md ./html/projects/TorchDevice.md ./html/projects/TorchDevice/TorchDevice-project-blog-entry.md ./html/projects/oobabooga-macOS.md ./html/projects/oobabooga-macOS/oobabooga-macOS-project-blog-entry.md ./html/projects/text-generation-webui-macos.md ./html/projects/text-generation-webui-macos/text-generation-webui-macos-project-blog-entry.md ./html/projects/venvutil.md ./html/projects/venvutil/venvutil-project-blog-entry.md ./html/resources.md ./html/resources/emergency-resources.md ./html/robots.txt ./html/site.webmanifest ./outfile.txt
+ [[ 177 -gt 0 ]]
+ local git_exclude_regex
++ build_regex 'Gitignore exclude' gitignore_exclude_ref
++ local 'caller_message=Gitignore exclude'
++ local -n patterns_ref=gitignore_exclude_ref
++ local regex=
++ local escaped_pattern
++ log_message DEBUG2 'Gitignore exclude patterns: "fishd.* fish_history fish_variables config.local.fish _site/ .sass-cache/ .jekyll-cache/ .jekyll-metadata .bundle/ vendor/ .DS_Store .AppleDouble .LSOverride Icon ._* .DocumentRevisions-V100 .fseventsd .Spotlight-V100 .TemporaryItems .Trashes .VolumeIcon.icns .com.apple.timemachine.donotpresent .AppleDB .AppleDesktop Network Trash Folder Temporary Items .apdisk *.icloud .idea/**/workspace.xml .idea/**/tasks.xml .idea/**/usage.statistics.xml .idea/**/dictionaries .idea/**/shelf .idea/**/aws.xml .idea/**/contentModel.xml .idea/**/dataSources/ .idea/**/dataSources.ids .idea/**/dataSources.local.xml .idea/**/sqlDataSources.xml .idea/**/dynamic.xml .idea/**/uiDesigner.xml .idea/**/dbnavigator.xml .idea/**/gradle.xml .idea/**/libraries cmake-build-*/ .idea/**/mongoSettings.xml *.iws out/ .idea_modules/ atlassian-ide-plugin.xml .idea/replstate.xml .idea/sonarlint/ com_crashlytics_export_strings.xml crashlytics.properties crashlytics-build.properties fabric.properties .idea/httpRequests .idea/caches/build_file_checksums.ser .idea/**/sonarlint/ .idea/**/sonarIssues.xml .idea/**/markdown-navigator.xml .idea/**/markdown-navigator-enh.xml .idea/**/markdown-navigator/ .idea/$CACHE_FILE$ .idea/codestream.xml .idea/**/azureSettings.xml .idea/* *.iml modules.xml .idea/misc.xml *.ipr .pydevproject __pycache__/ *.py[cod] *$py.class *.so .Python build/ develop-eggs/ dist/ downloads/ eggs/ .eggs/ lib/ lib64/ parts/ sdist/ var/ wheels/ share/python-wheels/ *.egg-info/ .installed.cfg *.egg MANIFEST *.manifest *.spec pip-log.txt pip-delete-this-directory.txt htmlcov/ .tox/ .nox/ .coverage .coverage.* .cache nosetests.xml coverage.xml *.cover *.py,cover .hypothesis/ .pytest_cache/ cover/ *.mo *.pot *.log local_settings.py db.sqlite3 db.sqlite3-journal instance/ .webassets-cache .scrapy docs/_build/ .pybuilder/ target/ .ipynb_checkpoints profile_default/ ipython_config.py .pdm.toml __pypackages__/ celerybeat-schedule celerybeat.pid *.sage.py .env .venv env/ venv/ ENV/ env.bak/ venv.bak/ .spyderproject .spyproject .ropeproject /site .mypy_cache/ .dmypy.json dmypy.json .pyre/ .pytype/ cython_debug/ poetry.toml .ruff_cache/ pyrightconfig.json **/.ssh/id_* **/.ssh/*_id_* **/.ssh/known_hosts .vscode/* .vscode/settings.json .history/ *.vsix .history .ionide *.zwc *.zwc.old *zcompdump* .zsh_history .zsh_sessions .zcalc_history ._zinit .zinit_lstupd zsdoc/data .directory_history /tests/_output/* tmp/ file_layout.txt Gemfile.lock Gemfile.bak _previews new_files/"'
++ local message_level=DEBUG2
++ shift
++ local 'message_out=Gitignore exclude patterns: "fishd.* fish_history fish_variables config.local.fish _site/ .sass-cache/ .jekyll-cache/ .jekyll-metadata .bundle/ vendor/ .DS_Store .AppleDouble .LSOverride Icon ._* .DocumentRevisions-V100 .fseventsd .Spotlight-V100 .TemporaryItems .Trashes .VolumeIcon.icns .com.apple.timemachine.donotpresent .AppleDB .AppleDesktop Network Trash Folder Temporary Items .apdisk *.icloud .idea/**/workspace.xml .idea/**/tasks.xml .idea/**/usage.statistics.xml .idea/**/dictionaries .idea/**/shelf .idea/**/aws.xml .idea/**/contentModel.xml .idea/**/dataSources/ .idea/**/dataSources.ids .idea/**/dataSources.local.xml .idea/**/sqlDataSources.xml .idea/**/dynamic.xml .idea/**/uiDesigner.xml .idea/**/dbnavigator.xml .idea/**/gradle.xml .idea/**/libraries cmake-build-*/ .idea/**/mongoSettings.xml *.iws out/ .idea_modules/ atlassian-ide-plugin.xml .idea/replstate.xml .idea/sonarlint/ com_crashlytics_export_strings.xml crashlytics.properties crashlytics-build.properties fabric.properties .idea/httpRequests .idea/caches/build_file_checksums.ser .idea/**/sonarlint/ .idea/**/sonarIssues.xml .idea/**/markdown-navigator.xml .idea/**/markdown-navigator-enh.xml .idea/**/markdown-navigator/ .idea/$CACHE_FILE$ .idea/codestream.xml .idea/**/azureSettings.xml .idea/* *.iml modules.xml .idea/misc.xml *.ipr .pydevproject __pycache__/ *.py[cod] *$py.class *.so .Python build/ develop-eggs/ dist/ downloads/ eggs/ .eggs/ lib/ lib64/ parts/ sdist/ var/ wheels/ share/python-wheels/ *.egg-info/ .installed.cfg *.egg MANIFEST *.manifest *.spec pip-log.txt pip-delete-this-directory.txt htmlcov/ .tox/ .nox/ .coverage .coverage.* .cache nosetests.xml coverage.xml *.cover *.py,cover .hypothesis/ .pytest_cache/ cover/ *.mo *.pot *.log local_settings.py db.sqlite3 db.sqlite3-journal instance/ .webassets-cache .scrapy docs/_build/ .pybuilder/ target/ .ipynb_checkpoints profile_default/ ipython_config.py .pdm.toml __pypackages__/ celerybeat-schedule celerybeat.pid *.sage.py .env .venv env/ venv/ ENV/ env.bak/ venv.bak/ .spyderproject .spyproject .ropeproject /site .mypy_cache/ .dmypy.json dmypy.json .pyre/ .pytype/ cython_debug/ poetry.toml .ruff_cache/ pyrightconfig.json **/.ssh/id_* **/.ssh/*_id_* **/.ssh/known_hosts .vscode/* .vscode/settings.json .history/ *.vsix .history .ionide *.zwc *.zwc.old *zcompdump* .zsh_history .zsh_sessions .zcalc_history ._zinit .zinit_lstupd zsdoc/data .directory_history /tests/_output/* tmp/ file_layout.txt Gemfile.lock Gemfile.bak _previews new_files/"'
++ [[ -z _ ]]
++ '[' 20 -le 27 ']'
++ echo 'genmd DEBUG2(20): Gitignore exclude patterns: "fishd.* fish_history fish_variables config.local.fish _site/ .sass-cache/ .jekyll-cache/ .jekyll-metadata .bundle/ vendor/ .DS_Store .AppleDouble .LSOverride Icon ._* .DocumentRevisions-V100 .fseventsd .Spotlight-V100 .TemporaryItems .Trashes .VolumeIcon.icns .com.apple.timemachine.donotpresent .AppleDB .AppleDesktop Network Trash Folder Temporary Items .apdisk *.icloud .idea/**/workspace.xml .idea/**/tasks.xml .idea/**/usage.statistics.xml .idea/**/dictionaries .idea/**/shelf .idea/**/aws.xml .idea/**/contentModel.xml .idea/**/dataSources/ .idea/**/dataSources.ids .idea/**/dataSources.local.xml .idea/**/sqlDataSources.xml .idea/**/dynamic.xml .idea/**/uiDesigner.xml .idea/**/dbnavigator.xml .idea/**/gradle.xml .idea/**/libraries cmake-build-*/ .idea/**/mongoSettings.xml *.iws out/ .idea_modules/ atlassian-ide-plugin.xml .idea/replstate.xml .idea/sonarlint/ com_crashlytics_export_strings.xml crashlytics.properties crashlytics-build.properties fabric.properties .idea/httpRequests .idea/caches/build_file_checksums.ser .idea/**/sonarlint/ .idea/**/sonarIssues.xml .idea/**/markdown-navigator.xml .idea/**/markdown-navigator-enh.xml .idea/**/markdown-navigator/ .idea/$CACHE_FILE$ .idea/codestream.xml .idea/**/azureSettings.xml .idea/* *.iml modules.xml .idea/misc.xml *.ipr .pydevproject __pycache__/ *.py[cod] *$py.class *.so .Python build/ develop-eggs/ dist/ downloads/ eggs/ .eggs/ lib/ lib64/ parts/ sdist/ var/ wheels/ share/python-wheels/ *.egg-info/ .installed.cfg *.egg MANIFEST *.manifest *.spec pip-log.txt pip-delete-this-directory.txt htmlcov/ .tox/ .nox/ .coverage .coverage.* .cache nosetests.xml coverage.xml *.cover *.py,cover .hypothesis/ .pytest_cache/ cover/ *.mo *.pot *.log local_settings.py db.sqlite3 db.sqlite3-journal instance/ .webassets-cache .scrapy docs/_build/ .pybuilder/ target/ .ipynb_checkpoints profile_default/ ipython_config.py .pdm.toml __pypackages__/ celerybeat-schedule celerybeat.pid *.sage.py .env .venv env/ venv/ ENV/ env.bak/ venv.bak/ .spyderproject .spyproject .ropeproject /site .mypy_cache/ .dmypy.json dmypy.json .pyre/ .pytype/ cython_debug/ poetry.toml .ruff_cache/ pyrightconfig.json **/.ssh/id_* **/.ssh/*_id_* **/.ssh/known_hosts .vscode/* .vscode/settings.json .history/ *.vsix .history .ionide *.zwc *.zwc.old *zcompdump* .zsh_history .zsh_sessions .zcalc_history ._zinit .zinit_lstupd zsdoc/data .directory_history /tests/_output/* tmp/ file_layout.txt Gemfile.lock Gemfile.bak _previews new_files/"'
genmd DEBUG2(20): Gitignore exclude patterns: "fishd.* fish_history fish_variables config.local.fish _site/ .sass-cache/ .jekyll-cache/ .jekyll-metadata .bundle/ vendor/ .DS_Store .AppleDouble .LSOverride Icon ._* .DocumentRevisions-V100 .fseventsd .Spotlight-V100 .TemporaryItems .Trashes .VolumeIcon.icns .com.apple.timemachine.donotpresent .AppleDB .AppleDesktop Network Trash Folder Temporary Items .apdisk *.icloud .idea/**/workspace.xml .idea/**/tasks.xml .idea/**/usage.statistics.xml .idea/**/dictionaries .idea/**/shelf .idea/**/aws.xml .idea/**/contentModel.xml .idea/**/dataSources/ .idea/**/dataSources.ids .idea/**/dataSources.local.xml .idea/**/sqlDataSources.xml .idea/**/dynamic.xml .idea/**/uiDesigner.xml .idea/**/dbnavigator.xml .idea/**/gradle.xml .idea/**/libraries cmake-build-*/ .idea/**/mongoSettings.xml *.iws out/ .idea_modules/ atlassian-ide-plugin.xml .idea/replstate.xml .idea/sonarlint/ com_crashlytics_export_strings.xml crashlytics.properties crashlytics-build.properties fabric.properties .idea/httpRequests .idea/caches/build_file_checksums.ser .idea/**/sonarlint/ .idea/**/sonarIssues.xml .idea/**/markdown-navigator.xml .idea/**/markdown-navigator-enh.xml .idea/**/markdown-navigator/ .idea/$CACHE_FILE$ .idea/codestream.xml .idea/**/azureSettings.xml .idea/* *.iml modules.xml .idea/misc.xml *.ipr .pydevproject __pycache__/ *.py[cod] *$py.class *.so .Python build/ develop-eggs/ dist/ downloads/ eggs/ .eggs/ lib/ lib64/ parts/ sdist/ var/ wheels/ share/python-wheels/ *.egg-info/ .installed.cfg *.egg MANIFEST *.manifest *.spec pip-log.txt pip-delete-this-directory.txt htmlcov/ .tox/ .nox/ .coverage .coverage.* .cache nosetests.xml coverage.xml *.cover *.py,cover .hypothesis/ .pytest_cache/ cover/ *.mo *.pot *.log local_settings.py db.sqlite3 db.sqlite3-journal instance/ .webassets-cache .scrapy docs/_build/ .pybuilder/ target/ .ipynb_checkpoints profile_default/ ipython_config.py .pdm.toml __pypackages__/ celerybeat-schedule celerybeat.pid *.sage.py .env .venv env/ venv/ ENV/ env.bak/ venv.bak/ .spyderproject .spyproject .ropeproject /site .mypy_cache/ .dmypy.json dmypy.json .pyre/ .pytype/ cython_debug/ poetry.toml .ruff_cache/ pyrightconfig.json **/.ssh/id_* **/.ssh/*_id_* **/.ssh/known_hosts .vscode/* .vscode/settings.json .history/ *.vsix .history .ionide *.zwc *.zwc.old *zcompdump* .zsh_history .zsh_sessions .zcalc_history ._zinit .zinit_lstupd zsdoc/data .directory_history /tests/_output/* tmp/ file_layout.txt Gemfile.lock Gemfile.bak _previews new_files/"
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "fishd.*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "fishd.*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "fishd.*"'
genmd DEBUG3(20): Gitignore exclude input pattern: "fishd.*"
+++ echo 'fishd.*'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='fishd\.*'
++ escaped_pattern='fishd\..*'
++ escaped_pattern='fishd\..*'
++ escaped_pattern='fishd\..*'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "fishd\..*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "fishd\..*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "fishd\..*"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "fishd\..*"
++ [[ -z '' ]]
++ regex='fishd\..*'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "fish_history"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "fish_history"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "fish_history"'
genmd DEBUG3(20): Gitignore exclude input pattern: "fish_history"
+++ echo fish_history
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=fish_history
++ escaped_pattern=fish_history
++ escaped_pattern=fish_history
++ escaped_pattern=fish_history
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "fish_history"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "fish_history"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "fish_history"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "fish_history"
++ [[ -z fishd\..* ]]
++ regex='fishd\..*|fish_history'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "fish_variables"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "fish_variables"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "fish_variables"'
genmd DEBUG3(20): Gitignore exclude input pattern: "fish_variables"
+++ echo fish_variables
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=fish_variables
++ escaped_pattern=fish_variables
++ escaped_pattern=fish_variables
++ escaped_pattern=fish_variables
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "fish_variables"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "fish_variables"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "fish_variables"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "fish_variables"
++ [[ -z fishd\..*|fish_history ]]
++ regex='fishd\..*|fish_history|fish_variables'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "config.local.fish"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "config.local.fish"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "config.local.fish"'
genmd DEBUG3(20): Gitignore exclude input pattern: "config.local.fish"
+++ echo config.local.fish
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='config\.local\.fish'
++ escaped_pattern='config\.local\.fish'
++ escaped_pattern='config\.local\.fish'
++ escaped_pattern='config\.local\.fish'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "config\.local\.fish"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "config\.local\.fish"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "config\.local\.fish"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "config\.local\.fish"
++ [[ -z fishd\..*|fish_history|fish_variables ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "_site/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "_site/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "_site/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "_site/"
+++ echo _site/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=_site/
++ escaped_pattern=_site/
++ escaped_pattern=_site/
++ escaped_pattern=_site/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "_site/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "_site/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "_site/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "_site/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".sass-cache/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".sass-cache/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".sass-cache/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".sass-cache/"
+++ echo .sass-cache/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.sass-cache/'
++ escaped_pattern='\.sass-cache/'
++ escaped_pattern='\.sass-cache/'
++ escaped_pattern='\.sass-cache/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.sass-cache/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.sass-cache/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.sass-cache/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.sass-cache/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".jekyll-cache/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".jekyll-cache/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".jekyll-cache/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".jekyll-cache/"
+++ echo .jekyll-cache/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.jekyll-cache/'
++ escaped_pattern='\.jekyll-cache/'
++ escaped_pattern='\.jekyll-cache/'
++ escaped_pattern='\.jekyll-cache/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.jekyll-cache/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.jekyll-cache/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.jekyll-cache/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.jekyll-cache/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".jekyll-metadata"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".jekyll-metadata"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".jekyll-metadata"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".jekyll-metadata"
+++ echo .jekyll-metadata
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.jekyll-metadata'
++ escaped_pattern='\.jekyll-metadata'
++ escaped_pattern='\.jekyll-metadata'
++ escaped_pattern='\.jekyll-metadata'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.jekyll-metadata"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.jekyll-metadata"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.jekyll-metadata"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.jekyll-metadata"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".bundle/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".bundle/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".bundle/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".bundle/"
+++ echo .bundle/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.bundle/'
++ escaped_pattern='\.bundle/'
++ escaped_pattern='\.bundle/'
++ escaped_pattern='\.bundle/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.bundle/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.bundle/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.bundle/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.bundle/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "vendor/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "vendor/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "vendor/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "vendor/"
+++ echo vendor/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=vendor/
++ escaped_pattern=vendor/
++ escaped_pattern=vendor/
++ escaped_pattern=vendor/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "vendor/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "vendor/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "vendor/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "vendor/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".DS_Store"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".DS_Store"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".DS_Store"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".DS_Store"
+++ echo .DS_Store
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.DS_Store'
++ escaped_pattern='\.DS_Store'
++ escaped_pattern='\.DS_Store'
++ escaped_pattern='\.DS_Store'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.DS_Store"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.DS_Store"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.DS_Store"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.DS_Store"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".AppleDouble"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".AppleDouble"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".AppleDouble"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".AppleDouble"
+++ echo .AppleDouble
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.AppleDouble'
++ escaped_pattern='\.AppleDouble'
++ escaped_pattern='\.AppleDouble'
++ escaped_pattern='\.AppleDouble'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.AppleDouble"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.AppleDouble"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.AppleDouble"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.AppleDouble"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".LSOverride"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".LSOverride"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".LSOverride"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".LSOverride"
+++ echo .LSOverride
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.LSOverride'
++ escaped_pattern='\.LSOverride'
++ escaped_pattern='\.LSOverride'
++ escaped_pattern='\.LSOverride'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.LSOverride"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.LSOverride"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.LSOverride"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.LSOverride"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "Icon"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "Icon"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "Icon"'
genmd DEBUG3(20): Gitignore exclude input pattern: "Icon"
+++ echo Icon
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=Icon
++ escaped_pattern=Icon
++ escaped_pattern=Icon
++ escaped_pattern=Icon
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "Icon"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "Icon"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "Icon"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "Icon"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "._*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "._*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "._*"'
genmd DEBUG3(20): Gitignore exclude input pattern: "._*"
+++ echo '._*'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\._*'
++ escaped_pattern='\._.*'
++ escaped_pattern='\._.*'
++ escaped_pattern='\._.*'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\._.*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\._.*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\._.*"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\._.*"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".DocumentRevisions-V100"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".DocumentRevisions-V100"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".DocumentRevisions-V100"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".DocumentRevisions-V100"
+++ echo .DocumentRevisions-V100
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.DocumentRevisions-V100'
++ escaped_pattern='\.DocumentRevisions-V100'
++ escaped_pattern='\.DocumentRevisions-V100'
++ escaped_pattern='\.DocumentRevisions-V100'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.DocumentRevisions-V100"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.DocumentRevisions-V100"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.DocumentRevisions-V100"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.DocumentRevisions-V100"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.* ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".fseventsd"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".fseventsd"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".fseventsd"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".fseventsd"
+++ echo .fseventsd
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.fseventsd'
++ escaped_pattern='\.fseventsd'
++ escaped_pattern='\.fseventsd'
++ escaped_pattern='\.fseventsd'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.fseventsd"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.fseventsd"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.fseventsd"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.fseventsd"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100 ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".Spotlight-V100"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".Spotlight-V100"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".Spotlight-V100"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".Spotlight-V100"
+++ echo .Spotlight-V100
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.Spotlight-V100'
++ escaped_pattern='\.Spotlight-V100'
++ escaped_pattern='\.Spotlight-V100'
++ escaped_pattern='\.Spotlight-V100'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.Spotlight-V100"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.Spotlight-V100"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.Spotlight-V100"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.Spotlight-V100"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".TemporaryItems"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".TemporaryItems"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".TemporaryItems"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".TemporaryItems"
+++ echo .TemporaryItems
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.TemporaryItems'
++ escaped_pattern='\.TemporaryItems'
++ escaped_pattern='\.TemporaryItems'
++ escaped_pattern='\.TemporaryItems'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.TemporaryItems"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.TemporaryItems"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.TemporaryItems"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.TemporaryItems"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100 ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".Trashes"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".Trashes"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".Trashes"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".Trashes"
+++ echo .Trashes
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.Trashes'
++ escaped_pattern='\.Trashes'
++ escaped_pattern='\.Trashes'
++ escaped_pattern='\.Trashes'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.Trashes"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.Trashes"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.Trashes"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.Trashes"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".VolumeIcon.icns"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".VolumeIcon.icns"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".VolumeIcon.icns"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".VolumeIcon.icns"
+++ echo .VolumeIcon.icns
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.VolumeIcon\.icns'
++ escaped_pattern='\.VolumeIcon\.icns'
++ escaped_pattern='\.VolumeIcon\.icns'
++ escaped_pattern='\.VolumeIcon\.icns'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.VolumeIcon\.icns"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.VolumeIcon\.icns"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.VolumeIcon\.icns"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.VolumeIcon\.icns"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".com.apple.timemachine.donotpresent"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".com.apple.timemachine.donotpresent"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".com.apple.timemachine.donotpresent"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".com.apple.timemachine.donotpresent"
+++ echo .com.apple.timemachine.donotpresent
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.com\.apple\.timemachine\.donotpresent'
++ escaped_pattern='\.com\.apple\.timemachine\.donotpresent'
++ escaped_pattern='\.com\.apple\.timemachine\.donotpresent'
++ escaped_pattern='\.com\.apple\.timemachine\.donotpresent'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.com\.apple\.timemachine\.donotpresent"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.com\.apple\.timemachine\.donotpresent"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.com\.apple\.timemachine\.donotpresent"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.com\.apple\.timemachine\.donotpresent"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".AppleDB"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".AppleDB"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".AppleDB"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".AppleDB"
+++ echo .AppleDB
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.AppleDB'
++ escaped_pattern='\.AppleDB'
++ escaped_pattern='\.AppleDB'
++ escaped_pattern='\.AppleDB'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.AppleDB"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.AppleDB"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.AppleDB"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.AppleDB"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".AppleDesktop"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".AppleDesktop"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".AppleDesktop"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".AppleDesktop"
+++ echo .AppleDesktop
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.AppleDesktop'
++ escaped_pattern='\.AppleDesktop'
++ escaped_pattern='\.AppleDesktop'
++ escaped_pattern='\.AppleDesktop'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.AppleDesktop"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.AppleDesktop"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.AppleDesktop"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.AppleDesktop"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "Network Trash Folder"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "Network Trash Folder"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "Network Trash Folder"'
genmd DEBUG3(20): Gitignore exclude input pattern: "Network Trash Folder"
+++ echo 'Network Trash Folder'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='Network Trash Folder'
++ escaped_pattern='Network Trash Folder'
++ escaped_pattern='Network Trash Folder'
++ escaped_pattern='Network|Trash|Folder'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "Network|Trash|Folder"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "Network|Trash|Folder"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "Network|Trash|Folder"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "Network|Trash|Folder"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "Temporary Items"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "Temporary Items"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "Temporary Items"'
genmd DEBUG3(20): Gitignore exclude input pattern: "Temporary Items"
+++ echo 'Temporary Items'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='Temporary Items'
++ escaped_pattern='Temporary Items'
++ escaped_pattern='Temporary Items'
++ escaped_pattern='Temporary|Items'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "Temporary|Items"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "Temporary|Items"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "Temporary|Items"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "Temporary|Items"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".apdisk"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".apdisk"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".apdisk"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".apdisk"
+++ echo .apdisk
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.apdisk'
++ escaped_pattern='\.apdisk'
++ escaped_pattern='\.apdisk'
++ escaped_pattern='\.apdisk'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.apdisk"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.apdisk"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.apdisk"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.apdisk"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.icloud"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.icloud"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.icloud"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.icloud"
+++ echo '*.icloud'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.icloud'
++ escaped_pattern='.*\.icloud'
++ escaped_pattern='.*\.icloud'
++ escaped_pattern='.*\.icloud'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.icloud"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.icloud"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.icloud"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.icloud"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/workspace.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/workspace.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/workspace.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/workspace.xml"
+++ echo '.idea/**/workspace.xml'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/workspace\.xml'
++ escaped_pattern='\.idea/.*.*/workspace\.xml'
++ escaped_pattern='\.idea/.*.*/workspace\.xml'
++ escaped_pattern='\.idea/.*.*/workspace\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/workspace\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/workspace\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/workspace\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/workspace\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/tasks.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/tasks.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/tasks.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/tasks.xml"
+++ echo '.idea/**/tasks.xml'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/tasks\.xml'
++ escaped_pattern='\.idea/.*.*/tasks\.xml'
++ escaped_pattern='\.idea/.*.*/tasks\.xml'
++ escaped_pattern='\.idea/.*.*/tasks\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/tasks\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/tasks\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/tasks\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/tasks\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/usage.statistics.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/usage.statistics.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/usage.statistics.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/usage.statistics.xml"
+++ echo '.idea/**/usage.statistics.xml'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/usage\.statistics\.xml'
++ escaped_pattern='\.idea/.*.*/usage\.statistics\.xml'
++ escaped_pattern='\.idea/.*.*/usage\.statistics\.xml'
++ escaped_pattern='\.idea/.*.*/usage\.statistics\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/usage\.statistics\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/usage\.statistics\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/usage\.statistics\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/usage\.statistics\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/dictionaries"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/dictionaries"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/dictionaries"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/dictionaries"
+++ echo '.idea/**/dictionaries'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/dictionaries'
++ escaped_pattern='\.idea/.*.*/dictionaries'
++ escaped_pattern='\.idea/.*.*/dictionaries'
++ escaped_pattern='\.idea/.*.*/dictionaries'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/dictionaries"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/dictionaries"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/dictionaries"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/dictionaries"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/shelf"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/shelf"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/shelf"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/shelf"
+++ echo '.idea/**/shelf'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/shelf'
++ escaped_pattern='\.idea/.*.*/shelf'
++ escaped_pattern='\.idea/.*.*/shelf'
++ escaped_pattern='\.idea/.*.*/shelf'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/shelf"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/shelf"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/shelf"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/shelf"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/aws.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/aws.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/aws.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/aws.xml"
+++ echo '.idea/**/aws.xml'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/aws\.xml'
++ escaped_pattern='\.idea/.*.*/aws\.xml'
++ escaped_pattern='\.idea/.*.*/aws\.xml'
++ escaped_pattern='\.idea/.*.*/aws\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/aws\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/aws\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/aws\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/aws\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/contentModel.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/contentModel.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/contentModel.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/contentModel.xml"
+++ echo '.idea/**/contentModel.xml'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/contentModel\.xml'
++ escaped_pattern='\.idea/.*.*/contentModel\.xml'
++ escaped_pattern='\.idea/.*.*/contentModel\.xml'
++ escaped_pattern='\.idea/.*.*/contentModel\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/contentModel\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/contentModel\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/contentModel\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/contentModel\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/dataSources/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/dataSources/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/dataSources/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/dataSources/"
+++ echo '.idea/**/dataSources/'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/dataSources/'
++ escaped_pattern='\.idea/.*.*/dataSources/'
++ escaped_pattern='\.idea/.*.*/dataSources/'
++ escaped_pattern='\.idea/.*.*/dataSources/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/dataSources/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/dataSources/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/dataSources/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/dataSources/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/dataSources.ids"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/dataSources.ids"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/dataSources.ids"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/dataSources.ids"
+++ echo '.idea/**/dataSources.ids'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/dataSources\.ids'
++ escaped_pattern='\.idea/.*.*/dataSources\.ids'
++ escaped_pattern='\.idea/.*.*/dataSources\.ids'
++ escaped_pattern='\.idea/.*.*/dataSources\.ids'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/dataSources\.ids"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/dataSources\.ids"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/dataSources\.ids"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/dataSources\.ids"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/dataSources.local.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/dataSources.local.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/dataSources.local.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/dataSources.local.xml"
+++ echo '.idea/**/dataSources.local.xml'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/dataSources\.local\.xml'
++ escaped_pattern='\.idea/.*.*/dataSources\.local\.xml'
++ escaped_pattern='\.idea/.*.*/dataSources\.local\.xml'
++ escaped_pattern='\.idea/.*.*/dataSources\.local\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/dataSources\.local\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/dataSources\.local\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/dataSources\.local\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/dataSources\.local\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/sqlDataSources.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/sqlDataSources.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/sqlDataSources.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/sqlDataSources.xml"
+++ echo '.idea/**/sqlDataSources.xml'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/sqlDataSources\.xml'
++ escaped_pattern='\.idea/.*.*/sqlDataSources\.xml'
++ escaped_pattern='\.idea/.*.*/sqlDataSources\.xml'
++ escaped_pattern='\.idea/.*.*/sqlDataSources\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/sqlDataSources\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/sqlDataSources\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/sqlDataSources\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/sqlDataSources\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/dynamic.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/dynamic.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/dynamic.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/dynamic.xml"
+++ echo '.idea/**/dynamic.xml'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/dynamic\.xml'
++ escaped_pattern='\.idea/.*.*/dynamic\.xml'
++ escaped_pattern='\.idea/.*.*/dynamic\.xml'
++ escaped_pattern='\.idea/.*.*/dynamic\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/dynamic\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/dynamic\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/dynamic\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/dynamic\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/uiDesigner.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/uiDesigner.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/uiDesigner.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/uiDesigner.xml"
+++ echo '.idea/**/uiDesigner.xml'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/uiDesigner\.xml'
++ escaped_pattern='\.idea/.*.*/uiDesigner\.xml'
++ escaped_pattern='\.idea/.*.*/uiDesigner\.xml'
++ escaped_pattern='\.idea/.*.*/uiDesigner\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/uiDesigner\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/uiDesigner\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/uiDesigner\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/uiDesigner\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/dbnavigator.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/dbnavigator.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/dbnavigator.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/dbnavigator.xml"
+++ echo '.idea/**/dbnavigator.xml'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/dbnavigator\.xml'
++ escaped_pattern='\.idea/.*.*/dbnavigator\.xml'
++ escaped_pattern='\.idea/.*.*/dbnavigator\.xml'
++ escaped_pattern='\.idea/.*.*/dbnavigator\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/dbnavigator\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/dbnavigator\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/dbnavigator\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/dbnavigator\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/gradle.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/gradle.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/gradle.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/gradle.xml"
+++ echo '.idea/**/gradle.xml'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/gradle\.xml'
++ escaped_pattern='\.idea/.*.*/gradle\.xml'
++ escaped_pattern='\.idea/.*.*/gradle\.xml'
++ escaped_pattern='\.idea/.*.*/gradle\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/gradle\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/gradle\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/gradle\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/gradle\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/libraries"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/libraries"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/libraries"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/libraries"
+++ echo '.idea/**/libraries'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/libraries'
++ escaped_pattern='\.idea/.*.*/libraries'
++ escaped_pattern='\.idea/.*.*/libraries'
++ escaped_pattern='\.idea/.*.*/libraries'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/libraries"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/libraries"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/libraries"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/libraries"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "cmake-build-*/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "cmake-build-*/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "cmake-build-*/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "cmake-build-*/"
+++ echo 'cmake-build-*/'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='cmake-build-*/'
++ escaped_pattern='cmake-build-.*/'
++ escaped_pattern='cmake-build-.*/'
++ escaped_pattern='cmake-build-.*/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "cmake-build-.*/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "cmake-build-.*/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "cmake-build-.*/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "cmake-build-.*/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/mongoSettings.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/mongoSettings.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/mongoSettings.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/mongoSettings.xml"
+++ echo '.idea/**/mongoSettings.xml'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/mongoSettings\.xml'
++ escaped_pattern='\.idea/.*.*/mongoSettings\.xml'
++ escaped_pattern='\.idea/.*.*/mongoSettings\.xml'
++ escaped_pattern='\.idea/.*.*/mongoSettings\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/mongoSettings\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/mongoSettings\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/mongoSettings\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/mongoSettings\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.iws"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.iws"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.iws"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.iws"
+++ echo '*.iws'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.iws'
++ escaped_pattern='.*\.iws'
++ escaped_pattern='.*\.iws'
++ escaped_pattern='.*\.iws'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.iws"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.iws"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.iws"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.iws"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "out/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "out/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "out/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "out/"
+++ echo out/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=out/
++ escaped_pattern=out/
++ escaped_pattern=out/
++ escaped_pattern=out/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "out/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "out/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "out/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "out/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea_modules/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea_modules/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea_modules/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea_modules/"
+++ echo .idea_modules/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea_modules/'
++ escaped_pattern='\.idea_modules/'
++ escaped_pattern='\.idea_modules/'
++ escaped_pattern='\.idea_modules/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea_modules/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea_modules/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea_modules/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea_modules/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "atlassian-ide-plugin.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "atlassian-ide-plugin.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "atlassian-ide-plugin.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: "atlassian-ide-plugin.xml"
+++ echo atlassian-ide-plugin.xml
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='atlassian-ide-plugin\.xml'
++ escaped_pattern='atlassian-ide-plugin\.xml'
++ escaped_pattern='atlassian-ide-plugin\.xml'
++ escaped_pattern='atlassian-ide-plugin\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "atlassian-ide-plugin\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "atlassian-ide-plugin\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "atlassian-ide-plugin\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "atlassian-ide-plugin\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/replstate.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/replstate.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/replstate.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/replstate.xml"
+++ echo .idea/replstate.xml
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/replstate\.xml'
++ escaped_pattern='\.idea/replstate\.xml'
++ escaped_pattern='\.idea/replstate\.xml'
++ escaped_pattern='\.idea/replstate\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/replstate\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/replstate\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/replstate\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/replstate\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/sonarlint/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/sonarlint/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/sonarlint/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/sonarlint/"
+++ echo .idea/sonarlint/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/sonarlint/'
++ escaped_pattern='\.idea/sonarlint/'
++ escaped_pattern='\.idea/sonarlint/'
++ escaped_pattern='\.idea/sonarlint/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/sonarlint/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/sonarlint/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/sonarlint/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/sonarlint/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "com_crashlytics_export_strings.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "com_crashlytics_export_strings.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "com_crashlytics_export_strings.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: "com_crashlytics_export_strings.xml"
+++ echo com_crashlytics_export_strings.xml
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='com_crashlytics_export_strings\.xml'
++ escaped_pattern='com_crashlytics_export_strings\.xml'
++ escaped_pattern='com_crashlytics_export_strings\.xml'
++ escaped_pattern='com_crashlytics_export_strings\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "com_crashlytics_export_strings\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "com_crashlytics_export_strings\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "com_crashlytics_export_strings\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "com_crashlytics_export_strings\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "crashlytics.properties"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "crashlytics.properties"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "crashlytics.properties"'
genmd DEBUG3(20): Gitignore exclude input pattern: "crashlytics.properties"
+++ echo crashlytics.properties
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='crashlytics\.properties'
++ escaped_pattern='crashlytics\.properties'
++ escaped_pattern='crashlytics\.properties'
++ escaped_pattern='crashlytics\.properties'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "crashlytics\.properties"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "crashlytics\.properties"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "crashlytics\.properties"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "crashlytics\.properties"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "crashlytics-build.properties"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "crashlytics-build.properties"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "crashlytics-build.properties"'
genmd DEBUG3(20): Gitignore exclude input pattern: "crashlytics-build.properties"
+++ echo crashlytics-build.properties
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='crashlytics-build\.properties'
++ escaped_pattern='crashlytics-build\.properties'
++ escaped_pattern='crashlytics-build\.properties'
++ escaped_pattern='crashlytics-build\.properties'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "crashlytics-build\.properties"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "crashlytics-build\.properties"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "crashlytics-build\.properties"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "crashlytics-build\.properties"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "fabric.properties"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "fabric.properties"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "fabric.properties"'
genmd DEBUG3(20): Gitignore exclude input pattern: "fabric.properties"
+++ echo fabric.properties
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='fabric\.properties'
++ escaped_pattern='fabric\.properties'
++ escaped_pattern='fabric\.properties'
++ escaped_pattern='fabric\.properties'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "fabric\.properties"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "fabric\.properties"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "fabric\.properties"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "fabric\.properties"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/httpRequests"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/httpRequests"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/httpRequests"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/httpRequests"
+++ echo .idea/httpRequests
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/httpRequests'
++ escaped_pattern='\.idea/httpRequests'
++ escaped_pattern='\.idea/httpRequests'
++ escaped_pattern='\.idea/httpRequests'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/httpRequests"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/httpRequests"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/httpRequests"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/httpRequests"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/caches/build_file_checksums.ser"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/caches/build_file_checksums.ser"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/caches/build_file_checksums.ser"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/caches/build_file_checksums.ser"
+++ echo .idea/caches/build_file_checksums.ser
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/caches/build_file_checksums\.ser'
++ escaped_pattern='\.idea/caches/build_file_checksums\.ser'
++ escaped_pattern='\.idea/caches/build_file_checksums\.ser'
++ escaped_pattern='\.idea/caches/build_file_checksums\.ser'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/caches/build_file_checksums\.ser"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/caches/build_file_checksums\.ser"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/caches/build_file_checksums\.ser"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/caches/build_file_checksums\.ser"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/sonarlint/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/sonarlint/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/sonarlint/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/sonarlint/"
+++ echo '.idea/**/sonarlint/'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/sonarlint/'
++ escaped_pattern='\.idea/.*.*/sonarlint/'
++ escaped_pattern='\.idea/.*.*/sonarlint/'
++ escaped_pattern='\.idea/.*.*/sonarlint/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/sonarlint/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/sonarlint/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/sonarlint/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/sonarlint/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/sonarIssues.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/sonarIssues.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/sonarIssues.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/sonarIssues.xml"
+++ echo '.idea/**/sonarIssues.xml'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/sonarIssues\.xml'
++ escaped_pattern='\.idea/.*.*/sonarIssues\.xml'
++ escaped_pattern='\.idea/.*.*/sonarIssues\.xml'
++ escaped_pattern='\.idea/.*.*/sonarIssues\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/sonarIssues\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/sonarIssues\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/sonarIssues\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/sonarIssues\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/markdown-navigator.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/markdown-navigator.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/markdown-navigator.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/markdown-navigator.xml"
+++ echo '.idea/**/markdown-navigator.xml'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/markdown-navigator\.xml'
++ escaped_pattern='\.idea/.*.*/markdown-navigator\.xml'
++ escaped_pattern='\.idea/.*.*/markdown-navigator\.xml'
++ escaped_pattern='\.idea/.*.*/markdown-navigator\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/markdown-navigator\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/markdown-navigator\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/markdown-navigator\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/markdown-navigator\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/markdown-navigator-enh.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/markdown-navigator-enh.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/markdown-navigator-enh.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/markdown-navigator-enh.xml"
+++ echo '.idea/**/markdown-navigator-enh.xml'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/markdown-navigator-enh\.xml'
++ escaped_pattern='\.idea/.*.*/markdown-navigator-enh\.xml'
++ escaped_pattern='\.idea/.*.*/markdown-navigator-enh\.xml'
++ escaped_pattern='\.idea/.*.*/markdown-navigator-enh\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/markdown-navigator-enh\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/markdown-navigator-enh\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/markdown-navigator-enh\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/markdown-navigator-enh\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/markdown-navigator/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/markdown-navigator/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/markdown-navigator/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/markdown-navigator/"
+++ echo '.idea/**/markdown-navigator/'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/markdown-navigator/'
++ escaped_pattern='\.idea/.*.*/markdown-navigator/'
++ escaped_pattern='\.idea/.*.*/markdown-navigator/'
++ escaped_pattern='\.idea/.*.*/markdown-navigator/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/markdown-navigator/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/markdown-navigator/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/markdown-navigator/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/markdown-navigator/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/$CACHE_FILE$"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/$CACHE_FILE$"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/$CACHE_FILE$"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/$CACHE_FILE$"
+++ echo '.idea/$CACHE_FILE$'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/$CACHE_FILE$'
++ escaped_pattern='\.idea/$CACHE_FILE$'
++ escaped_pattern='\.idea/$CACHE_FILE$'
++ escaped_pattern='\.idea/$CACHE_FILE$'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/$CACHE_FILE$"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/$CACHE_FILE$"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/$CACHE_FILE$"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/$CACHE_FILE$"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/codestream.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/codestream.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/codestream.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/codestream.xml"
+++ echo .idea/codestream.xml
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/codestream\.xml'
++ escaped_pattern='\.idea/codestream\.xml'
++ escaped_pattern='\.idea/codestream\.xml'
++ escaped_pattern='\.idea/codestream\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/codestream\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/codestream\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/codestream\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/codestream\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/**/azureSettings.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/**/azureSettings.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/azureSettings.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/**/azureSettings.xml"
+++ echo '.idea/**/azureSettings.xml'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/**/azureSettings\.xml'
++ escaped_pattern='\.idea/.*.*/azureSettings\.xml'
++ escaped_pattern='\.idea/.*.*/azureSettings\.xml'
++ escaped_pattern='\.idea/.*.*/azureSettings\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*.*/azureSettings\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*.*/azureSettings\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/azureSettings\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*.*/azureSettings\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/*"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/*"
+++ echo '.idea/*'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/*'
++ escaped_pattern='\.idea/.*'
++ escaped_pattern='\.idea/.*'
++ escaped_pattern='\.idea/.*'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/.*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/.*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/.*"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.iml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.iml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.iml"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.iml"
+++ echo '*.iml'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.iml'
++ escaped_pattern='.*\.iml'
++ escaped_pattern='.*\.iml'
++ escaped_pattern='.*\.iml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.iml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.iml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.iml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.iml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.* ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "modules.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "modules.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "modules.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: "modules.xml"
+++ echo modules.xml
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='modules\.xml'
++ escaped_pattern='modules\.xml'
++ escaped_pattern='modules\.xml'
++ escaped_pattern='modules\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "modules\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "modules\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "modules\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "modules\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".idea/misc.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".idea/misc.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/misc.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".idea/misc.xml"
+++ echo .idea/misc.xml
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.idea/misc\.xml'
++ escaped_pattern='\.idea/misc\.xml'
++ escaped_pattern='\.idea/misc\.xml'
++ escaped_pattern='\.idea/misc\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.idea/misc\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.idea/misc\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/misc\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.idea/misc\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.ipr"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.ipr"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.ipr"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.ipr"
+++ echo '*.ipr'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.ipr'
++ escaped_pattern='.*\.ipr'
++ escaped_pattern='.*\.ipr'
++ escaped_pattern='.*\.ipr'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.ipr"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.ipr"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.ipr"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.ipr"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".pydevproject"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".pydevproject"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".pydevproject"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".pydevproject"
+++ echo .pydevproject
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.pydevproject'
++ escaped_pattern='\.pydevproject'
++ escaped_pattern='\.pydevproject'
++ escaped_pattern='\.pydevproject'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.pydevproject"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.pydevproject"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.pydevproject"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.pydevproject"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "__pycache__/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "__pycache__/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "__pycache__/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "__pycache__/"
+++ echo __pycache__/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=__pycache__/
++ escaped_pattern=__pycache__/
++ escaped_pattern=__pycache__/
++ escaped_pattern=__pycache__/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "__pycache__/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "__pycache__/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "__pycache__/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "__pycache__/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.py[cod]"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.py[cod]"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.py[cod]"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.py[cod]"
+++ echo '*.py[cod]'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.py[cod]'
++ escaped_pattern='.*\.py[cod]'
++ escaped_pattern='.*\.py[cod]'
++ escaped_pattern='.*\.py[cod]'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.py[cod]"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.py[cod]"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.py[cod]"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.py[cod]"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*$py.class"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*$py.class"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*$py.class"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*$py.class"
+++ echo '*$py.class'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*$py\.class'
++ escaped_pattern='.*$py\.class'
++ escaped_pattern='.*$py\.class'
++ escaped_pattern='.*$py\.class'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*$py\.class"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*$py\.class"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*$py\.class"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*$py\.class"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod] ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.so"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.so"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.so"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.so"
+++ echo '*.so'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.so'
++ escaped_pattern='.*\.so'
++ escaped_pattern='.*\.so'
++ escaped_pattern='.*\.so'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.so"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.so"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.so"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.so"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".Python"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".Python"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".Python"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".Python"
+++ echo .Python
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.Python'
++ escaped_pattern='\.Python'
++ escaped_pattern='\.Python'
++ escaped_pattern='\.Python'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.Python"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.Python"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.Python"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.Python"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "build/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "build/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "build/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "build/"
+++ echo build/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=build/
++ escaped_pattern=build/
++ escaped_pattern=build/
++ escaped_pattern=build/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "build/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "build/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "build/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "build/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "develop-eggs/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "develop-eggs/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "develop-eggs/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "develop-eggs/"
+++ echo develop-eggs/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=develop-eggs/
++ escaped_pattern=develop-eggs/
++ escaped_pattern=develop-eggs/
++ escaped_pattern=develop-eggs/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "develop-eggs/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "develop-eggs/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "develop-eggs/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "develop-eggs/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "dist/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "dist/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "dist/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "dist/"
+++ echo dist/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=dist/
++ escaped_pattern=dist/
++ escaped_pattern=dist/
++ escaped_pattern=dist/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "dist/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "dist/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "dist/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "dist/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "downloads/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "downloads/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "downloads/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "downloads/"
+++ echo downloads/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=downloads/
++ escaped_pattern=downloads/
++ escaped_pattern=downloads/
++ escaped_pattern=downloads/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "downloads/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "downloads/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "downloads/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "downloads/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "eggs/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "eggs/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "eggs/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "eggs/"
+++ echo eggs/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=eggs/
++ escaped_pattern=eggs/
++ escaped_pattern=eggs/
++ escaped_pattern=eggs/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "eggs/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "eggs/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "eggs/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "eggs/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".eggs/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".eggs/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".eggs/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".eggs/"
+++ echo .eggs/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.eggs/'
++ escaped_pattern='\.eggs/'
++ escaped_pattern='\.eggs/'
++ escaped_pattern='\.eggs/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.eggs/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.eggs/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.eggs/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.eggs/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "lib/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "lib/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "lib/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "lib/"
+++ echo lib/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=lib/
++ escaped_pattern=lib/
++ escaped_pattern=lib/
++ escaped_pattern=lib/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "lib/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "lib/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "lib/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "lib/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "lib64/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "lib64/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "lib64/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "lib64/"
+++ echo lib64/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=lib64/
++ escaped_pattern=lib64/
++ escaped_pattern=lib64/
++ escaped_pattern=lib64/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "lib64/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "lib64/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "lib64/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "lib64/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "parts/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "parts/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "parts/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "parts/"
+++ echo parts/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=parts/
++ escaped_pattern=parts/
++ escaped_pattern=parts/
++ escaped_pattern=parts/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "parts/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "parts/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "parts/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "parts/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "sdist/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "sdist/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "sdist/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "sdist/"
+++ echo sdist/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=sdist/
++ escaped_pattern=sdist/
++ escaped_pattern=sdist/
++ escaped_pattern=sdist/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "sdist/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "sdist/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "sdist/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "sdist/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "var/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "var/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "var/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "var/"
+++ echo var/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=var/
++ escaped_pattern=var/
++ escaped_pattern=var/
++ escaped_pattern=var/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "var/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "var/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "var/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "var/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "wheels/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "wheels/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "wheels/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "wheels/"
+++ echo wheels/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=wheels/
++ escaped_pattern=wheels/
++ escaped_pattern=wheels/
++ escaped_pattern=wheels/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "wheels/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "wheels/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "wheels/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "wheels/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "share/python-wheels/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "share/python-wheels/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "share/python-wheels/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "share/python-wheels/"
+++ echo share/python-wheels/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=share/python-wheels/
++ escaped_pattern=share/python-wheels/
++ escaped_pattern=share/python-wheels/
++ escaped_pattern=share/python-wheels/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "share/python-wheels/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "share/python-wheels/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "share/python-wheels/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "share/python-wheels/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.egg-info/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.egg-info/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.egg-info/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.egg-info/"
+++ echo '*.egg-info/'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.egg-info/'
++ escaped_pattern='.*\.egg-info/'
++ escaped_pattern='.*\.egg-info/'
++ escaped_pattern='.*\.egg-info/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.egg-info/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.egg-info/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.egg-info/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.egg-info/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".installed.cfg"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".installed.cfg"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".installed.cfg"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".installed.cfg"
+++ echo .installed.cfg
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.installed\.cfg'
++ escaped_pattern='\.installed\.cfg'
++ escaped_pattern='\.installed\.cfg'
++ escaped_pattern='\.installed\.cfg'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.installed\.cfg"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.installed\.cfg"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.installed\.cfg"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.installed\.cfg"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.egg"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.egg"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.egg"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.egg"
+++ echo '*.egg'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.egg'
++ escaped_pattern='.*\.egg'
++ escaped_pattern='.*\.egg'
++ escaped_pattern='.*\.egg'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.egg"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.egg"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.egg"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.egg"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "MANIFEST"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "MANIFEST"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "MANIFEST"'
genmd DEBUG3(20): Gitignore exclude input pattern: "MANIFEST"
+++ echo MANIFEST
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=MANIFEST
++ escaped_pattern=MANIFEST
++ escaped_pattern=MANIFEST
++ escaped_pattern=MANIFEST
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "MANIFEST"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "MANIFEST"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "MANIFEST"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "MANIFEST"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.manifest"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.manifest"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.manifest"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.manifest"
+++ echo '*.manifest'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.manifest'
++ escaped_pattern='.*\.manifest'
++ escaped_pattern='.*\.manifest'
++ escaped_pattern='.*\.manifest'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.manifest"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.manifest"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.manifest"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.manifest"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.spec"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.spec"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.spec"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.spec"
+++ echo '*.spec'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.spec'
++ escaped_pattern='.*\.spec'
++ escaped_pattern='.*\.spec'
++ escaped_pattern='.*\.spec'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.spec"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.spec"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.spec"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.spec"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "pip-log.txt"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "pip-log.txt"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "pip-log.txt"'
genmd DEBUG3(20): Gitignore exclude input pattern: "pip-log.txt"
+++ echo pip-log.txt
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='pip-log\.txt'
++ escaped_pattern='pip-log\.txt'
++ escaped_pattern='pip-log\.txt'
++ escaped_pattern='pip-log\.txt'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "pip-log\.txt"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "pip-log\.txt"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "pip-log\.txt"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "pip-log\.txt"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "pip-delete-this-directory.txt"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "pip-delete-this-directory.txt"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "pip-delete-this-directory.txt"'
genmd DEBUG3(20): Gitignore exclude input pattern: "pip-delete-this-directory.txt"
+++ echo pip-delete-this-directory.txt
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='pip-delete-this-directory\.txt'
++ escaped_pattern='pip-delete-this-directory\.txt'
++ escaped_pattern='pip-delete-this-directory\.txt'
++ escaped_pattern='pip-delete-this-directory\.txt'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "pip-delete-this-directory\.txt"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "pip-delete-this-directory\.txt"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "pip-delete-this-directory\.txt"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "pip-delete-this-directory\.txt"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "htmlcov/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "htmlcov/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "htmlcov/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "htmlcov/"
+++ echo htmlcov/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=htmlcov/
++ escaped_pattern=htmlcov/
++ escaped_pattern=htmlcov/
++ escaped_pattern=htmlcov/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "htmlcov/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "htmlcov/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "htmlcov/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "htmlcov/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".tox/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".tox/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".tox/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".tox/"
+++ echo .tox/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.tox/'
++ escaped_pattern='\.tox/'
++ escaped_pattern='\.tox/'
++ escaped_pattern='\.tox/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.tox/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.tox/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.tox/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.tox/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".nox/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".nox/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".nox/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".nox/"
+++ echo .nox/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.nox/'
++ escaped_pattern='\.nox/'
++ escaped_pattern='\.nox/'
++ escaped_pattern='\.nox/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.nox/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.nox/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.nox/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.nox/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".coverage"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".coverage"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".coverage"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".coverage"
+++ echo .coverage
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.coverage'
++ escaped_pattern='\.coverage'
++ escaped_pattern='\.coverage'
++ escaped_pattern='\.coverage'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.coverage"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.coverage"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.coverage"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.coverage"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".coverage.*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".coverage.*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".coverage.*"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".coverage.*"
+++ echo '.coverage.*'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.coverage\.*'
++ escaped_pattern='\.coverage\..*'
++ escaped_pattern='\.coverage\..*'
++ escaped_pattern='\.coverage\..*'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.coverage\..*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.coverage\..*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.coverage\..*"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.coverage\..*"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".cache"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".cache"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".cache"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".cache"
+++ echo .cache
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.cache'
++ escaped_pattern='\.cache'
++ escaped_pattern='\.cache'
++ escaped_pattern='\.cache'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.cache"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.cache"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.cache"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.cache"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..* ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "nosetests.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "nosetests.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "nosetests.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: "nosetests.xml"
+++ echo nosetests.xml
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='nosetests\.xml'
++ escaped_pattern='nosetests\.xml'
++ escaped_pattern='nosetests\.xml'
++ escaped_pattern='nosetests\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "nosetests\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "nosetests\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "nosetests\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "nosetests\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "coverage.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "coverage.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "coverage.xml"'
genmd DEBUG3(20): Gitignore exclude input pattern: "coverage.xml"
+++ echo coverage.xml
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='coverage\.xml'
++ escaped_pattern='coverage\.xml'
++ escaped_pattern='coverage\.xml'
++ escaped_pattern='coverage\.xml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "coverage\.xml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "coverage\.xml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "coverage\.xml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "coverage\.xml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.cover"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.cover"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.cover"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.cover"
+++ echo '*.cover'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.cover'
++ escaped_pattern='.*\.cover'
++ escaped_pattern='.*\.cover'
++ escaped_pattern='.*\.cover'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.cover"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.cover"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.cover"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.cover"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.py,cover"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.py,cover"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.py,cover"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.py,cover"
+++ echo '*.py,cover'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.py,cover'
++ escaped_pattern='.*\.py,cover'
++ escaped_pattern='.*\.py,cover'
++ escaped_pattern='.*\.py,cover'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.py,cover"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.py,cover"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.py,cover"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.py,cover"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".hypothesis/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".hypothesis/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".hypothesis/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".hypothesis/"
+++ echo .hypothesis/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.hypothesis/'
++ escaped_pattern='\.hypothesis/'
++ escaped_pattern='\.hypothesis/'
++ escaped_pattern='\.hypothesis/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.hypothesis/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.hypothesis/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.hypothesis/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.hypothesis/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".pytest_cache/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".pytest_cache/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".pytest_cache/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".pytest_cache/"
+++ echo .pytest_cache/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.pytest_cache/'
++ escaped_pattern='\.pytest_cache/'
++ escaped_pattern='\.pytest_cache/'
++ escaped_pattern='\.pytest_cache/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.pytest_cache/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.pytest_cache/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.pytest_cache/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.pytest_cache/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "cover/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "cover/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "cover/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "cover/"
+++ echo cover/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=cover/
++ escaped_pattern=cover/
++ escaped_pattern=cover/
++ escaped_pattern=cover/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "cover/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "cover/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "cover/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "cover/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.mo"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.mo"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.mo"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.mo"
+++ echo '*.mo'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.mo'
++ escaped_pattern='.*\.mo'
++ escaped_pattern='.*\.mo'
++ escaped_pattern='.*\.mo'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.mo"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.mo"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.mo"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.mo"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.pot"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.pot"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.pot"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.pot"
+++ echo '*.pot'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.pot'
++ escaped_pattern='.*\.pot'
++ escaped_pattern='.*\.pot'
++ escaped_pattern='.*\.pot'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.pot"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.pot"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.pot"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.pot"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.log"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.log"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.log"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.log"
+++ echo '*.log'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.log'
++ escaped_pattern='.*\.log'
++ escaped_pattern='.*\.log'
++ escaped_pattern='.*\.log'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.log"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.log"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.log"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.log"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "local_settings.py"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "local_settings.py"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "local_settings.py"'
genmd DEBUG3(20): Gitignore exclude input pattern: "local_settings.py"
+++ echo local_settings.py
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='local_settings\.py'
++ escaped_pattern='local_settings\.py'
++ escaped_pattern='local_settings\.py'
++ escaped_pattern='local_settings\.py'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "local_settings\.py"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "local_settings\.py"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "local_settings\.py"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "local_settings\.py"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "db.sqlite3"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "db.sqlite3"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "db.sqlite3"'
genmd DEBUG3(20): Gitignore exclude input pattern: "db.sqlite3"
+++ echo db.sqlite3
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='db\.sqlite3'
++ escaped_pattern='db\.sqlite3'
++ escaped_pattern='db\.sqlite3'
++ escaped_pattern='db\.sqlite3'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "db\.sqlite3"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "db\.sqlite3"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "db\.sqlite3"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "db\.sqlite3"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "db.sqlite3-journal"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "db.sqlite3-journal"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "db.sqlite3-journal"'
genmd DEBUG3(20): Gitignore exclude input pattern: "db.sqlite3-journal"
+++ echo db.sqlite3-journal
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='db\.sqlite3-journal'
++ escaped_pattern='db\.sqlite3-journal'
++ escaped_pattern='db\.sqlite3-journal'
++ escaped_pattern='db\.sqlite3-journal'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "db\.sqlite3-journal"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "db\.sqlite3-journal"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "db\.sqlite3-journal"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "db\.sqlite3-journal"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3 ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "instance/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "instance/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "instance/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "instance/"
+++ echo instance/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=instance/
++ escaped_pattern=instance/
++ escaped_pattern=instance/
++ escaped_pattern=instance/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "instance/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "instance/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "instance/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "instance/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".webassets-cache"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".webassets-cache"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".webassets-cache"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".webassets-cache"
+++ echo .webassets-cache
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.webassets-cache'
++ escaped_pattern='\.webassets-cache'
++ escaped_pattern='\.webassets-cache'
++ escaped_pattern='\.webassets-cache'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.webassets-cache"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.webassets-cache"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.webassets-cache"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.webassets-cache"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".scrapy"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".scrapy"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".scrapy"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".scrapy"
+++ echo .scrapy
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.scrapy'
++ escaped_pattern='\.scrapy'
++ escaped_pattern='\.scrapy'
++ escaped_pattern='\.scrapy'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.scrapy"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.scrapy"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.scrapy"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.scrapy"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "docs/_build/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "docs/_build/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "docs/_build/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "docs/_build/"
+++ echo docs/_build/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=docs/_build/
++ escaped_pattern=docs/_build/
++ escaped_pattern=docs/_build/
++ escaped_pattern=docs/_build/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "docs/_build/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "docs/_build/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "docs/_build/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "docs/_build/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".pybuilder/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".pybuilder/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".pybuilder/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".pybuilder/"
+++ echo .pybuilder/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.pybuilder/'
++ escaped_pattern='\.pybuilder/'
++ escaped_pattern='\.pybuilder/'
++ escaped_pattern='\.pybuilder/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.pybuilder/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.pybuilder/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.pybuilder/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.pybuilder/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "target/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "target/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "target/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "target/"
+++ echo target/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=target/
++ escaped_pattern=target/
++ escaped_pattern=target/
++ escaped_pattern=target/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "target/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "target/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "target/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "target/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".ipynb_checkpoints"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".ipynb_checkpoints"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".ipynb_checkpoints"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".ipynb_checkpoints"
+++ echo .ipynb_checkpoints
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.ipynb_checkpoints'
++ escaped_pattern='\.ipynb_checkpoints'
++ escaped_pattern='\.ipynb_checkpoints'
++ escaped_pattern='\.ipynb_checkpoints'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.ipynb_checkpoints"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.ipynb_checkpoints"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.ipynb_checkpoints"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.ipynb_checkpoints"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "profile_default/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "profile_default/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "profile_default/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "profile_default/"
+++ echo profile_default/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=profile_default/
++ escaped_pattern=profile_default/
++ escaped_pattern=profile_default/
++ escaped_pattern=profile_default/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "profile_default/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "profile_default/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "profile_default/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "profile_default/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "ipython_config.py"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "ipython_config.py"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "ipython_config.py"'
genmd DEBUG3(20): Gitignore exclude input pattern: "ipython_config.py"
+++ echo ipython_config.py
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='ipython_config\.py'
++ escaped_pattern='ipython_config\.py'
++ escaped_pattern='ipython_config\.py'
++ escaped_pattern='ipython_config\.py'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "ipython_config\.py"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "ipython_config\.py"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "ipython_config\.py"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "ipython_config\.py"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".pdm.toml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".pdm.toml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".pdm.toml"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".pdm.toml"
+++ echo .pdm.toml
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.pdm\.toml'
++ escaped_pattern='\.pdm\.toml'
++ escaped_pattern='\.pdm\.toml'
++ escaped_pattern='\.pdm\.toml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.pdm\.toml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.pdm\.toml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.pdm\.toml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.pdm\.toml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "__pypackages__/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "__pypackages__/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "__pypackages__/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "__pypackages__/"
+++ echo __pypackages__/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=__pypackages__/
++ escaped_pattern=__pypackages__/
++ escaped_pattern=__pypackages__/
++ escaped_pattern=__pypackages__/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "__pypackages__/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "__pypackages__/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "__pypackages__/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "__pypackages__/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "celerybeat-schedule"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "celerybeat-schedule"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "celerybeat-schedule"'
genmd DEBUG3(20): Gitignore exclude input pattern: "celerybeat-schedule"
+++ echo celerybeat-schedule
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=celerybeat-schedule
++ escaped_pattern=celerybeat-schedule
++ escaped_pattern=celerybeat-schedule
++ escaped_pattern=celerybeat-schedule
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "celerybeat-schedule"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "celerybeat-schedule"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "celerybeat-schedule"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "celerybeat-schedule"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "celerybeat.pid"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "celerybeat.pid"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "celerybeat.pid"'
genmd DEBUG3(20): Gitignore exclude input pattern: "celerybeat.pid"
+++ echo celerybeat.pid
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='celerybeat\.pid'
++ escaped_pattern='celerybeat\.pid'
++ escaped_pattern='celerybeat\.pid'
++ escaped_pattern='celerybeat\.pid'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "celerybeat\.pid"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "celerybeat\.pid"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "celerybeat\.pid"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "celerybeat\.pid"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.sage.py"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.sage.py"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.sage.py"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.sage.py"
+++ echo '*.sage.py'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.sage\.py'
++ escaped_pattern='.*\.sage\.py'
++ escaped_pattern='.*\.sage\.py'
++ escaped_pattern='.*\.sage\.py'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.sage\.py"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.sage\.py"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.sage\.py"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.sage\.py"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".env"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".env"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".env"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".env"
+++ echo .env
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.env'
++ escaped_pattern='\.env'
++ escaped_pattern='\.env'
++ escaped_pattern='\.env'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.env"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.env"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.env"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.env"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".venv"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".venv"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".venv"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".venv"
+++ echo .venv
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.venv'
++ escaped_pattern='\.venv'
++ escaped_pattern='\.venv'
++ escaped_pattern='\.venv'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.venv"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.venv"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.venv"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.venv"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "env/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "env/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "env/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "env/"
+++ echo env/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=env/
++ escaped_pattern=env/
++ escaped_pattern=env/
++ escaped_pattern=env/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "env/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "env/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "env/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "env/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "venv/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "venv/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "venv/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "venv/"
+++ echo venv/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=venv/
++ escaped_pattern=venv/
++ escaped_pattern=venv/
++ escaped_pattern=venv/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "venv/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "venv/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "venv/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "venv/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "ENV/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "ENV/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "ENV/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "ENV/"
+++ echo ENV/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=ENV/
++ escaped_pattern=ENV/
++ escaped_pattern=ENV/
++ escaped_pattern=ENV/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "ENV/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "ENV/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "ENV/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "ENV/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "env.bak/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "env.bak/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "env.bak/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "env.bak/"
+++ echo env.bak/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='env\.bak/'
++ escaped_pattern='env\.bak/'
++ escaped_pattern='env\.bak/'
++ escaped_pattern='env\.bak/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "env\.bak/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "env\.bak/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "env\.bak/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "env\.bak/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "venv.bak/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "venv.bak/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "venv.bak/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "venv.bak/"
+++ echo venv.bak/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='venv\.bak/'
++ escaped_pattern='venv\.bak/'
++ escaped_pattern='venv\.bak/'
++ escaped_pattern='venv\.bak/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "venv\.bak/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "venv\.bak/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "venv\.bak/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "venv\.bak/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".spyderproject"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".spyderproject"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".spyderproject"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".spyderproject"
+++ echo .spyderproject
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.spyderproject'
++ escaped_pattern='\.spyderproject'
++ escaped_pattern='\.spyderproject'
++ escaped_pattern='\.spyderproject'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.spyderproject"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.spyderproject"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.spyderproject"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.spyderproject"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".spyproject"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".spyproject"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".spyproject"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".spyproject"
+++ echo .spyproject
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.spyproject'
++ escaped_pattern='\.spyproject'
++ escaped_pattern='\.spyproject'
++ escaped_pattern='\.spyproject'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.spyproject"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.spyproject"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.spyproject"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.spyproject"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".ropeproject"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".ropeproject"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".ropeproject"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".ropeproject"
+++ echo .ropeproject
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.ropeproject'
++ escaped_pattern='\.ropeproject'
++ escaped_pattern='\.ropeproject'
++ escaped_pattern='\.ropeproject'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.ropeproject"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.ropeproject"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.ropeproject"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.ropeproject"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "/site"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "/site"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "/site"'
genmd DEBUG3(20): Gitignore exclude input pattern: "/site"
+++ echo /site
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=/site
++ escaped_pattern=/site
++ escaped_pattern=/site
++ escaped_pattern=/site
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "/site"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "/site"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "/site"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "/site"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".mypy_cache/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".mypy_cache/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".mypy_cache/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".mypy_cache/"
+++ echo .mypy_cache/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.mypy_cache/'
++ escaped_pattern='\.mypy_cache/'
++ escaped_pattern='\.mypy_cache/'
++ escaped_pattern='\.mypy_cache/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.mypy_cache/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.mypy_cache/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.mypy_cache/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.mypy_cache/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".dmypy.json"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".dmypy.json"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".dmypy.json"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".dmypy.json"
+++ echo .dmypy.json
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.dmypy\.json'
++ escaped_pattern='\.dmypy\.json'
++ escaped_pattern='\.dmypy\.json'
++ escaped_pattern='\.dmypy\.json'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.dmypy\.json"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.dmypy\.json"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.dmypy\.json"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.dmypy\.json"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "dmypy.json"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "dmypy.json"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "dmypy.json"'
genmd DEBUG3(20): Gitignore exclude input pattern: "dmypy.json"
+++ echo dmypy.json
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='dmypy\.json'
++ escaped_pattern='dmypy\.json'
++ escaped_pattern='dmypy\.json'
++ escaped_pattern='dmypy\.json'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "dmypy\.json"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "dmypy\.json"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "dmypy\.json"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "dmypy\.json"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".pyre/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".pyre/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".pyre/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".pyre/"
+++ echo .pyre/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.pyre/'
++ escaped_pattern='\.pyre/'
++ escaped_pattern='\.pyre/'
++ escaped_pattern='\.pyre/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.pyre/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.pyre/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.pyre/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.pyre/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".pytype/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".pytype/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".pytype/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".pytype/"
+++ echo .pytype/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.pytype/'
++ escaped_pattern='\.pytype/'
++ escaped_pattern='\.pytype/'
++ escaped_pattern='\.pytype/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.pytype/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.pytype/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.pytype/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.pytype/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "cython_debug/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "cython_debug/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "cython_debug/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "cython_debug/"
+++ echo cython_debug/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=cython_debug/
++ escaped_pattern=cython_debug/
++ escaped_pattern=cython_debug/
++ escaped_pattern=cython_debug/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "cython_debug/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "cython_debug/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "cython_debug/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "cython_debug/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "poetry.toml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "poetry.toml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "poetry.toml"'
genmd DEBUG3(20): Gitignore exclude input pattern: "poetry.toml"
+++ echo poetry.toml
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='poetry\.toml'
++ escaped_pattern='poetry\.toml'
++ escaped_pattern='poetry\.toml'
++ escaped_pattern='poetry\.toml'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "poetry\.toml"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "poetry\.toml"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "poetry\.toml"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "poetry\.toml"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".ruff_cache/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".ruff_cache/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".ruff_cache/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".ruff_cache/"
+++ echo .ruff_cache/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.ruff_cache/'
++ escaped_pattern='\.ruff_cache/'
++ escaped_pattern='\.ruff_cache/'
++ escaped_pattern='\.ruff_cache/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.ruff_cache/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.ruff_cache/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.ruff_cache/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.ruff_cache/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "pyrightconfig.json"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "pyrightconfig.json"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "pyrightconfig.json"'
genmd DEBUG3(20): Gitignore exclude input pattern: "pyrightconfig.json"
+++ echo pyrightconfig.json
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='pyrightconfig\.json'
++ escaped_pattern='pyrightconfig\.json'
++ escaped_pattern='pyrightconfig\.json'
++ escaped_pattern='pyrightconfig\.json'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "pyrightconfig\.json"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "pyrightconfig\.json"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "pyrightconfig\.json"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "pyrightconfig\.json"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "**/.ssh/id_*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "**/.ssh/id_*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "**/.ssh/id_*"'
genmd DEBUG3(20): Gitignore exclude input pattern: "**/.ssh/id_*"
+++ echo '**/.ssh/id_*'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='**/\.ssh/id_*'
++ escaped_pattern='.*.*/\.ssh/id_.*'
++ escaped_pattern='.*.*/\.ssh/id_.*'
++ escaped_pattern='.*.*/\.ssh/id_.*'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*.*/\.ssh/id_.*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*.*/\.ssh/id_.*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*.*/\.ssh/id_.*"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*.*/\.ssh/id_.*"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "**/.ssh/*_id_*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "**/.ssh/*_id_*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "**/.ssh/*_id_*"'
genmd DEBUG3(20): Gitignore exclude input pattern: "**/.ssh/*_id_*"
+++ echo '**/.ssh/*_id_*'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='**/\.ssh/*_id_*'
++ escaped_pattern='.*.*/\.ssh/.*_id_.*'
++ escaped_pattern='.*.*/\.ssh/.*_id_.*'
++ escaped_pattern='.*.*/\.ssh/.*_id_.*'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*.*/\.ssh/.*_id_.*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*.*/\.ssh/.*_id_.*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*.*/\.ssh/.*_id_.*"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*.*/\.ssh/.*_id_.*"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.* ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "**/.ssh/known_hosts"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "**/.ssh/known_hosts"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "**/.ssh/known_hosts"'
genmd DEBUG3(20): Gitignore exclude input pattern: "**/.ssh/known_hosts"
+++ echo '**/.ssh/known_hosts'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='**/\.ssh/known_hosts'
++ escaped_pattern='.*.*/\.ssh/known_hosts'
++ escaped_pattern='.*.*/\.ssh/known_hosts'
++ escaped_pattern='.*.*/\.ssh/known_hosts'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*.*/\.ssh/known_hosts"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*.*/\.ssh/known_hosts"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*.*/\.ssh/known_hosts"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*.*/\.ssh/known_hosts"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.* ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".vscode/*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".vscode/*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".vscode/*"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".vscode/*"
+++ echo '.vscode/*'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.vscode/*'
++ escaped_pattern='\.vscode/.*'
++ escaped_pattern='\.vscode/.*'
++ escaped_pattern='\.vscode/.*'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.vscode/.*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.vscode/.*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.vscode/.*"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.vscode/.*"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".vscode/settings.json"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".vscode/settings.json"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".vscode/settings.json"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".vscode/settings.json"
+++ echo .vscode/settings.json
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.vscode/settings\.json'
++ escaped_pattern='\.vscode/settings\.json'
++ escaped_pattern='\.vscode/settings\.json'
++ escaped_pattern='\.vscode/settings\.json'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.vscode/settings\.json"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.vscode/settings\.json"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.vscode/settings\.json"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.vscode/settings\.json"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.* ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".history/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".history/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".history/"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".history/"
+++ echo .history/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.history/'
++ escaped_pattern='\.history/'
++ escaped_pattern='\.history/'
++ escaped_pattern='\.history/'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.history/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.history/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.history/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.history/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.vsix"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.vsix"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.vsix"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.vsix"
+++ echo '*.vsix'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.vsix'
++ escaped_pattern='.*\.vsix'
++ escaped_pattern='.*\.vsix'
++ escaped_pattern='.*\.vsix'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.vsix"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.vsix"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.vsix"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.vsix"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".history"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".history"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".history"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".history"
+++ echo .history
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.history'
++ escaped_pattern='\.history'
++ escaped_pattern='\.history'
++ escaped_pattern='\.history'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.history"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.history"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.history"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.history"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".ionide"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".ionide"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".ionide"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".ionide"
+++ echo .ionide
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.ionide'
++ escaped_pattern='\.ionide'
++ escaped_pattern='\.ionide'
++ escaped_pattern='\.ionide'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.ionide"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.ionide"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.ionide"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.ionide"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.zwc"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.zwc"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.zwc"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.zwc"
+++ echo '*.zwc'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.zwc'
++ escaped_pattern='.*\.zwc'
++ escaped_pattern='.*\.zwc'
++ escaped_pattern='.*\.zwc'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.zwc"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.zwc"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.zwc"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.zwc"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*.zwc.old"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*.zwc.old"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*.zwc.old"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*.zwc.old"
+++ echo '*.zwc.old'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.zwc\.old'
++ escaped_pattern='.*\.zwc\.old'
++ escaped_pattern='.*\.zwc\.old'
++ escaped_pattern='.*\.zwc\.old'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*\.zwc\.old"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*\.zwc\.old"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.zwc\.old"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*\.zwc\.old"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "*zcompdump*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "*zcompdump*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "*zcompdump*"'
genmd DEBUG3(20): Gitignore exclude input pattern: "*zcompdump*"
+++ echo '*zcompdump*'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*zcompdump*'
++ escaped_pattern='.*zcompdump.*'
++ escaped_pattern='.*zcompdump.*'
++ escaped_pattern='.*zcompdump.*'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: ".*zcompdump.*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: ".*zcompdump.*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*zcompdump.*"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: ".*zcompdump.*"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".zsh_history"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".zsh_history"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".zsh_history"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".zsh_history"
+++ echo .zsh_history
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.zsh_history'
++ escaped_pattern='\.zsh_history'
++ escaped_pattern='\.zsh_history'
++ escaped_pattern='\.zsh_history'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.zsh_history"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.zsh_history"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.zsh_history"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.zsh_history"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.* ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".zsh_sessions"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".zsh_sessions"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".zsh_sessions"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".zsh_sessions"
+++ echo .zsh_sessions
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.zsh_sessions'
++ escaped_pattern='\.zsh_sessions'
++ escaped_pattern='\.zsh_sessions'
++ escaped_pattern='\.zsh_sessions'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.zsh_sessions"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.zsh_sessions"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.zsh_sessions"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.zsh_sessions"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".zcalc_history"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".zcalc_history"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".zcalc_history"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".zcalc_history"
+++ echo .zcalc_history
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.zcalc_history'
++ escaped_pattern='\.zcalc_history'
++ escaped_pattern='\.zcalc_history'
++ escaped_pattern='\.zcalc_history'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.zcalc_history"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.zcalc_history"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.zcalc_history"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.zcalc_history"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "._zinit"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "._zinit"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "._zinit"'
genmd DEBUG3(20): Gitignore exclude input pattern: "._zinit"
+++ echo ._zinit
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\._zinit'
++ escaped_pattern='\._zinit'
++ escaped_pattern='\._zinit'
++ escaped_pattern='\._zinit'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\._zinit"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\._zinit"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\._zinit"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\._zinit"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".zinit_lstupd"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".zinit_lstupd"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".zinit_lstupd"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".zinit_lstupd"
+++ echo .zinit_lstupd
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.zinit_lstupd'
++ escaped_pattern='\.zinit_lstupd'
++ escaped_pattern='\.zinit_lstupd'
++ escaped_pattern='\.zinit_lstupd'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.zinit_lstupd"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.zinit_lstupd"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.zinit_lstupd"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.zinit_lstupd"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "zsdoc/data"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "zsdoc/data"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "zsdoc/data"'
genmd DEBUG3(20): Gitignore exclude input pattern: "zsdoc/data"
+++ echo zsdoc/data
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=zsdoc/data
++ escaped_pattern=zsdoc/data
++ escaped_pattern=zsdoc/data
++ escaped_pattern=zsdoc/data
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "zsdoc/data"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "zsdoc/data"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "zsdoc/data"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "zsdoc/data"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: ".directory_history"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: ".directory_history"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: ".directory_history"'
genmd DEBUG3(20): Gitignore exclude input pattern: ".directory_history"
+++ echo .directory_history
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='\.directory_history'
++ escaped_pattern='\.directory_history'
++ escaped_pattern='\.directory_history'
++ escaped_pattern='\.directory_history'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "\.directory_history"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "\.directory_history"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.directory_history"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "\.directory_history"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "/tests/_output/*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "/tests/_output/*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "/tests/_output/*"'
genmd DEBUG3(20): Gitignore exclude input pattern: "/tests/_output/*"
+++ echo '/tests/_output/*'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='/tests/_output/*'
++ escaped_pattern='/tests/_output/.*'
++ escaped_pattern='/tests/_output/.*'
++ escaped_pattern='/tests/_output/.*'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "/tests/_output/.*"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "/tests/_output/.*"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "/tests/_output/.*"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "/tests/_output/.*"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "tmp/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "tmp/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "tmp/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "tmp/"
+++ echo tmp/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=tmp/
++ escaped_pattern=tmp/
++ escaped_pattern=tmp/
++ escaped_pattern=tmp/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "tmp/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "tmp/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "tmp/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "tmp/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.* ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "file_layout.txt"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "file_layout.txt"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "file_layout.txt"'
genmd DEBUG3(20): Gitignore exclude input pattern: "file_layout.txt"
+++ echo file_layout.txt
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='file_layout\.txt'
++ escaped_pattern='file_layout\.txt'
++ escaped_pattern='file_layout\.txt'
++ escaped_pattern='file_layout\.txt'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "file_layout\.txt"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "file_layout\.txt"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "file_layout\.txt"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "file_layout\.txt"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/ ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/|file_layout\.txt'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "Gemfile.lock"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "Gemfile.lock"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "Gemfile.lock"'
genmd DEBUG3(20): Gitignore exclude input pattern: "Gemfile.lock"
+++ echo Gemfile.lock
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='Gemfile\.lock'
++ escaped_pattern='Gemfile\.lock'
++ escaped_pattern='Gemfile\.lock'
++ escaped_pattern='Gemfile\.lock'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "Gemfile\.lock"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "Gemfile\.lock"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "Gemfile\.lock"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "Gemfile\.lock"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/|file_layout\.txt ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/|file_layout\.txt|Gemfile\.lock'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "Gemfile.bak"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "Gemfile.bak"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "Gemfile.bak"'
genmd DEBUG3(20): Gitignore exclude input pattern: "Gemfile.bak"
+++ echo Gemfile.bak
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='Gemfile\.bak'
++ escaped_pattern='Gemfile\.bak'
++ escaped_pattern='Gemfile\.bak'
++ escaped_pattern='Gemfile\.bak'
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "Gemfile\.bak"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "Gemfile\.bak"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "Gemfile\.bak"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "Gemfile\.bak"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/|file_layout\.txt|Gemfile\.lock ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/|file_layout\.txt|Gemfile\.lock|Gemfile\.bak'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "_previews"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "_previews"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "_previews"'
genmd DEBUG3(20): Gitignore exclude input pattern: "_previews"
+++ echo _previews
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=_previews
++ escaped_pattern=_previews
++ escaped_pattern=_previews
++ escaped_pattern=_previews
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "_previews"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "_previews"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "_previews"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "_previews"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/|file_layout\.txt|Gemfile\.lock|Gemfile\.bak ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/|file_layout\.txt|Gemfile\.lock|Gemfile\.bak|_previews'
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Gitignore exclude input pattern: "new_files/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude input pattern: "new_files/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude input pattern: "new_files/"'
genmd DEBUG3(20): Gitignore exclude input pattern: "new_files/"
+++ echo new_files/
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern=new_files/
++ escaped_pattern=new_files/
++ escaped_pattern=new_files/
++ escaped_pattern=new_files/
++ log_message DEBUG3 'Gitignore exclude escaped pattern: "new_files/"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Gitignore exclude escaped pattern: "new_files/"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Gitignore exclude escaped pattern: "new_files/"'
genmd DEBUG3(20): Gitignore exclude escaped pattern: "new_files/"
++ [[ -z fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/|file_layout\.txt|Gemfile\.lock|Gemfile\.bak|_previews ]]
++ regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/|file_layout\.txt|Gemfile\.lock|Gemfile\.bak|_previews|new_files/'
++ log_message DEBUG2 'Gitignore exclude final regex: "fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/|file_layout\.txt|Gemfile\.lock|Gemfile\.bak|_previews|new_files/"'
++ local message_level=DEBUG2
++ shift
++ local 'message_out=Gitignore exclude final regex: "fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/|file_layout\.txt|Gemfile\.lock|Gemfile\.bak|_previews|new_files/"'
++ [[ -z _ ]]
++ '[' 20 -le 27 ']'
++ echo 'genmd DEBUG2(20): Gitignore exclude final regex: "fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/|file_layout\.txt|Gemfile\.lock|Gemfile\.bak|_previews|new_files/"'
genmd DEBUG2(20): Gitignore exclude final regex: "fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/|file_layout\.txt|Gemfile\.lock|Gemfile\.bak|_previews|new_files/"
++ echo 'fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/|file_layout\.txt|Gemfile\.lock|Gemfile\.bak|_previews|new_files/'
+ git_exclude_regex='fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/|file_layout\.txt|Gemfile\.lock|Gemfile\.bak|_previews|new_files/'
+ readarray -t files
++ grep -vE 'fishd\..*|fish_history|fish_variables|config\.local\.fish|_site/|\.sass-cache/|\.jekyll-cache/|\.jekyll-metadata|\.bundle/|vendor/|\.DS_Store|\.AppleDouble|\.LSOverride|Icon|\._.*|\.DocumentRevisions-V100|\.fseventsd|\.Spotlight-V100|\.TemporaryItems|\.Trashes|\.VolumeIcon\.icns|\.com\.apple\.timemachine\.donotpresent|\.AppleDB|\.AppleDesktop|Network|Trash|Folder|Temporary|Items|\.apdisk|.*\.icloud|\.idea/.*.*/workspace\.xml|\.idea/.*.*/tasks\.xml|\.idea/.*.*/usage\.statistics\.xml|\.idea/.*.*/dictionaries|\.idea/.*.*/shelf|\.idea/.*.*/aws\.xml|\.idea/.*.*/contentModel\.xml|\.idea/.*.*/dataSources/|\.idea/.*.*/dataSources\.ids|\.idea/.*.*/dataSources\.local\.xml|\.idea/.*.*/sqlDataSources\.xml|\.idea/.*.*/dynamic\.xml|\.idea/.*.*/uiDesigner\.xml|\.idea/.*.*/dbnavigator\.xml|\.idea/.*.*/gradle\.xml|\.idea/.*.*/libraries|cmake-build-.*/|\.idea/.*.*/mongoSettings\.xml|.*\.iws|out/|\.idea_modules/|atlassian-ide-plugin\.xml|\.idea/replstate\.xml|\.idea/sonarlint/|com_crashlytics_export_strings\.xml|crashlytics\.properties|crashlytics-build\.properties|fabric\.properties|\.idea/httpRequests|\.idea/caches/build_file_checksums\.ser|\.idea/.*.*/sonarlint/|\.idea/.*.*/sonarIssues\.xml|\.idea/.*.*/markdown-navigator\.xml|\.idea/.*.*/markdown-navigator-enh\.xml|\.idea/.*.*/markdown-navigator/|\.idea/$CACHE_FILE$|\.idea/codestream\.xml|\.idea/.*.*/azureSettings\.xml|\.idea/.*|.*\.iml|modules\.xml|\.idea/misc\.xml|.*\.ipr|\.pydevproject|__pycache__/|.*\.py[cod]|.*$py\.class|.*\.so|\.Python|build/|develop-eggs/|dist/|downloads/|eggs/|\.eggs/|lib/|lib64/|parts/|sdist/|var/|wheels/|share/python-wheels/|.*\.egg-info/|\.installed\.cfg|.*\.egg|MANIFEST|.*\.manifest|.*\.spec|pip-log\.txt|pip-delete-this-directory\.txt|htmlcov/|\.tox/|\.nox/|\.coverage|\.coverage\..*|\.cache|nosetests\.xml|coverage\.xml|.*\.cover|.*\.py,cover|\.hypothesis/|\.pytest_cache/|cover/|.*\.mo|.*\.pot|.*\.log|local_settings\.py|db\.sqlite3|db\.sqlite3-journal|instance/|\.webassets-cache|\.scrapy|docs/_build/|\.pybuilder/|target/|\.ipynb_checkpoints|profile_default/|ipython_config\.py|\.pdm\.toml|__pypackages__/|celerybeat-schedule|celerybeat\.pid|.*\.sage\.py|\.env|\.venv|env/|venv/|ENV/|env\.bak/|venv\.bak/|\.spyderproject|\.spyproject|\.ropeproject|/site|\.mypy_cache/|\.dmypy\.json|dmypy\.json|\.pyre/|\.pytype/|cython_debug/|poetry\.toml|\.ruff_cache/|pyrightconfig\.json|.*.*/\.ssh/id_.*|.*.*/\.ssh/.*_id_.*|.*.*/\.ssh/known_hosts|\.vscode/.*|\.vscode/settings\.json|\.history/|.*\.vsix|\.history|\.ionide|.*\.zwc|.*\.zwc\.old|.*zcompdump.*|\.zsh_history|\.zsh_sessions|\.zcalc_history|\._zinit|\.zinit_lstupd|zsdoc/data|\.directory_history|/tests/_output/.*|tmp/|file_layout\.txt|Gemfile\.lock|Gemfile\.bak|_previews|new_files/'
++ printf '%s\n' ./.DS_Store ./.env/project.env ./.env/unset.env ./.github/.DS_Store ./.github/FUNDING.yml ./.github/workflows/jekyll.yml ./.gitignore ./.vscode/settings.json ./.vscode/spellright.dict ./CNAME ./Gemfile ./Gemfile.lock ./_config.yml ./errout.txt ./file_layout.txt ./genmd_env.sh ./histfile.txt.xz ./html/.DS_Store ./html/.htaccess ./html/404.html ./html/_data/.DS_Store ./html/_data/countries.yml ./html/_data/github_projects.yml ./html/_data/repos.yml ./html/_includes/.DS_Store ./html/_includes/codeium_stats.html ./html/_includes/custom-head.html ./html/_includes/disclaimer.html ./html/_includes/footer.html ./html/_includes/getintouch.html ./html/_includes/head.html ./html/_includes/header.html ./html/_includes/join_us.html ./html/_includes/navigation.html ./html/_includes/projects/TokenSecure.html ./html/_includes/projects/TorchDevice.html ./html/_includes/projects/oobabooga-macOS.html ./html/_includes/projects/text-generation-webui-macos.html ./html/_includes/projects/venvutil.html ./html/_includes/projects_list.html ./html/_includes/rss_feed_sub.html ./html/_includes/social-item.html ./html/_includes/social.html ./html/_includes/svg_symbol.html ./html/_includes/wand_accred.html ./html/_layouts/.DS_Store ./html/_layouts/blog.html ./html/_layouts/home.html ./html/_layouts/page.html ./html/_layouts/post.html ./html/_layouts/project.html ./html/_plugins/remove_headings_filter.rb ./html/about.md ./html/about/resume.md ./html/about/sullivan-michael-creds.md ./html/assets/.DS_Store ./html/assets/css/_base.scss ./html/assets/css/_components.scss ./html/assets/css/_layout.scss ./html/assets/css/_overrides.scss ./html/assets/css/_variables.scss ./html/assets/css/mineokai.scss ./html/assets/css/monokai.scss ./html/assets/css/style.scss ./html/assets/documents/.DS_Store ./html/assets/documents/SullivanMichael_IT_AI_ML_Unix_42020819.pdf ./html/assets/icons/.DS_Store ./html/assets/images/.DS_Store ./html/assets/images/IMG_1887.JPG ./html/assets/images/child-with-robot.webp ./html/assets/images/projects/.DS_Store ./html/assets/images/some-image.webp ./html/assets/js/email-obfuscation.js ./html/assets/minima-social-icons.liquid ./html/blog.md ./html/collaborate.md ./html/collaborate/community.md ./html/collaborate/professional.md ./html/contact.md ./html/faq.md ./html/favicon.ico ./html/hidden/sitemap.md ./html/index.md ./html/projects.md ./html/projects/.DS_Store ./html/projects/TokenSecure.md ./html/projects/TokenSecure/TokenSecure-project-blog-entry.md ./html/projects/TorchDevice.md ./html/projects/TorchDevice/TorchDevice-project-blog-entry.md ./html/projects/oobabooga-macOS.md ./html/projects/oobabooga-macOS/oobabooga-macOS-project-blog-entry.md ./html/projects/text-generation-webui-macos.md ./html/projects/text-generation-webui-macos/text-generation-webui-macos-project-blog-entry.md ./html/projects/venvutil.md ./html/projects/venvutil/venvutil-project-blog-entry.md ./html/resources.md ./html/resources/emergency-resources.md ./html/robots.txt ./html/site.webmanifest ./outfile.txt
+ [[ 0 -gt 0 ]]
+ [[ true = true ]]
+ [[ 0 -gt 0 ]]
+ [[ 1 -gt 0 ]]
+ local file_includes_regex
++ build_regex 'Include files' file_includes_ref
++ local 'caller_message=Include files'
++ local -n patterns_ref=file_includes_ref
++ local regex=
++ local escaped_pattern
++ log_message DEBUG2 'Include files patterns: "*.md$ *.html"'
++ local message_level=DEBUG2
++ shift
++ local 'message_out=Include files patterns: "*.md$ *.html"'
++ [[ -z _ ]]
++ '[' 20 -le 27 ']'
++ echo 'genmd DEBUG2(20): Include files patterns: "*.md$ *.html"'
genmd DEBUG2(20): Include files patterns: "*.md$ *.html"
++ for pattern in "${patterns_ref[@]}"
++ log_message DEBUG3 'Include files input pattern: "*.md$ *.html"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Include files input pattern: "*.md$ *.html"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Include files input pattern: "*.md$ *.html"'
genmd DEBUG3(20): Include files input pattern: "*.md$ *.html"
+++ echo '*.md$ *.html'
+++ sed -E 's/([+.^(){}])/\\\1/g'
++ escaped_pattern='*\.md$ *\.html'
++ escaped_pattern='.*\.md$ .*\.html'
++ escaped_pattern='.*\.md$ .*\.html'
++ escaped_pattern='.*\.md$|.*\.html'
++ log_message DEBUG3 'Include files escaped pattern: ".*\.md$|.*\.html"'
++ local message_level=DEBUG3
++ shift
++ local 'message_out=Include files escaped pattern: ".*\.md$|.*\.html"'
++ [[ -z _ ]]
++ '[' 20 -le 26 ']'
++ echo 'genmd DEBUG3(20): Include files escaped pattern: ".*\.md$|.*\.html"'
genmd DEBUG3(20): Include files escaped pattern: ".*\.md$|.*\.html"
++ [[ -z '' ]]
++ regex='.*\.md$|.*\.html'
++ log_message DEBUG2 'Include files final regex: ".*\.md$|.*\.html"'
++ local message_level=DEBUG2
++ shift
++ local 'message_out=Include files final regex: ".*\.md$|.*\.html"'
++ [[ -z _ ]]
++ '[' 20 -le 27 ']'
++ echo 'genmd DEBUG2(20): Include files final regex: ".*\.md$|.*\.html"'
genmd DEBUG2(20): Include files final regex: ".*\.md$|.*\.html"
++ echo '.*\.md$|.*\.html'
+ file_includes_regex='.*\.md$|.*\.html'
+ readarray -t files
++ grep -E '.*\.md$|.*\.html'
++ printf '%s\n' ./.github/FUNDING.yml ./.github/workflows/jekyll.yml ./.gitignore ./CNAME ./Gemfile ./_config.yml ./errout.txt ./genmd_env.sh ./histfile.txt.xz ./html/.htaccess ./html/404.html ./html/_data/countries.yml ./html/_data/github_projects.yml ./html/_data/repos.yml ./html/_includes/codeium_stats.html ./html/_includes/custom-head.html ./html/_includes/disclaimer.html ./html/_includes/footer.html ./html/_includes/getintouch.html ./html/_includes/head.html ./html/_includes/header.html ./html/_includes/join_us.html ./html/_includes/navigation.html ./html/_includes/projects/TokenSecure.html ./html/_includes/projects/TorchDevice.html ./html/_includes/projects/oobabooga-macOS.html ./html/_includes/projects/text-generation-webui-macos.html ./html/_includes/projects/venvutil.html ./html/_includes/projects_list.html ./html/_includes/rss_feed_sub.html ./html/_includes/social-item.html ./html/_includes/social.html ./html/_includes/svg_symbol.html ./html/_includes/wand_accred.html ./html/_layouts/blog.html ./html/_layouts/home.html ./html/_layouts/page.html ./html/_layouts/post.html ./html/_layouts/project.html ./html/_plugins/remove_headings_filter.rb ./html/about.md ./html/assets/css/_base.scss ./html/assets/css/_components.scss ./html/assets/css/_layout.scss ./html/assets/css/_overrides.scss ./html/assets/css/_variables.scss ./html/assets/css/mineokai.scss ./html/assets/css/monokai.scss ./html/assets/css/style.scss ./html/assets/documents/SullivanMichael_IT_AI_ML_Unix_42020819.pdf ./html/assets/images/IMG_1887.JPG ./html/assets/images/child-with-robot.webp ./html/assets/images/some-image.webp ./html/assets/js/email-obfuscation.js ./html/assets/minima-social-icons.liquid ./html/blog.md ./html/collaborate.md ./html/collaborate/community.md ./html/collaborate/professional.md ./html/contact.md ./html/faq.md ./html/favicon.ico ./html/index.md ./html/projects.md ./html/projects/TokenSecure.md ./html/projects/TokenSecure/TokenSecure-project-blog-entry.md ./html/projects/TorchDevice.md ./html/projects/TorchDevice/TorchDevice-project-blog-entry.md ./html/projects/oobabooga-macOS.md ./html/projects/oobabooga-macOS/oobabooga-macOS-project-blog-entry.md ./html/projects/text-generation-webui-macos.md ./html/projects/text-generation-webui-macos/text-generation-webui-macos-project-blog-entry.md ./html/projects/venvutil.md ./html/projects/venvutil/venvutil-project-blog-entry.md ./html/resources.md ./html/resources/emergency-resources.md ./html/robots.txt ./outfile.txt
+ final_files_ref=("${files[@]}")
+ log_message DEBUG2 'Final files to process:'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=Final files to process:'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): Final files to process:'
genmd DEBUG2(20): Final files to process:
+ '[' 20 -le 27 ']'
+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/404.html
  "./html/404.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/codeium_stats.html
  "./html/_includes/codeium_stats.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/custom-head.html
  "./html/_includes/custom-head.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/disclaimer.html
  "./html/_includes/disclaimer.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/footer.html
  "./html/_includes/footer.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/getintouch.html
  "./html/_includes/getintouch.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/head.html
  "./html/_includes/head.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/header.html
  "./html/_includes/header.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/join_us.html
  "./html/_includes/join_us.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/navigation.html
  "./html/_includes/navigation.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/projects/TokenSecure.html
  "./html/_includes/projects/TokenSecure.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/projects/TorchDevice.html
  "./html/_includes/projects/TorchDevice.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/projects/oobabooga-macOS.html
  "./html/_includes/projects/oobabooga-macOS.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/projects/text-generation-webui-macos.html
  "./html/_includes/projects/text-generation-webui-macos.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/projects/venvutil.html
  "./html/_includes/projects/venvutil.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/projects_list.html
  "./html/_includes/projects_list.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/rss_feed_sub.html
  "./html/_includes/rss_feed_sub.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/social-item.html
  "./html/_includes/social-item.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/social.html
  "./html/_includes/social.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/svg_symbol.html
  "./html/_includes/svg_symbol.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_includes/wand_accred.html
  "./html/_includes/wand_accred.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_layouts/blog.html
  "./html/_layouts/blog.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_layouts/home.html
  "./html/_layouts/home.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_layouts/page.html
  "./html/_layouts/page.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_layouts/post.html
  "./html/_layouts/post.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/_layouts/project.html
  "./html/_layouts/project.html"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/about.md
  "./html/about.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/blog.md
  "./html/blog.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/collaborate.md
  "./html/collaborate.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/collaborate/community.md
  "./html/collaborate/community.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/collaborate/professional.md
  "./html/collaborate/professional.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/contact.md
  "./html/contact.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/faq.md
  "./html/faq.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/index.md
  "./html/index.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/projects.md
  "./html/projects.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/projects/TokenSecure.md
  "./html/projects/TokenSecure.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/projects/TokenSecure/TokenSecure-project-blog-entry.md
  "./html/projects/TokenSecure/TokenSecure-project-blog-entry.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/projects/TorchDevice.md
  "./html/projects/TorchDevice.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/projects/TorchDevice/TorchDevice-project-blog-entry.md
  "./html/projects/TorchDevice/TorchDevice-project-blog-entry.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/projects/oobabooga-macOS.md
  "./html/projects/oobabooga-macOS.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/projects/oobabooga-macOS/oobabooga-macOS-project-blog-entry.md
  "./html/projects/oobabooga-macOS/oobabooga-macOS-project-blog-entry.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/projects/text-generation-webui-macos.md
  "./html/projects/text-generation-webui-macos.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/projects/text-generation-webui-macos/text-generation-webui-macos-project-blog-entry.md
  "./html/projects/text-generation-webui-macos/text-generation-webui-macos-project-blog-entry.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/projects/venvutil.md
  "./html/projects/venvutil.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/projects/venvutil/venvutil-project-blog-entry.md
  "./html/projects/venvutil/venvutil-project-blog-entry.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/resources.md
  "./html/resources.md"+ for f in "${final_files[@]}"
+ printf '  "%s"' ./html/resources/emergency-resources.md
  "./html/resources/emergency-resources.md"+ printf '\n'

+ process_files /Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/utils/output/combined_source.md final_files
+ local output_filename=/Users/mps/projects/AI-PROJECTS/DTS-WebSite/unixwzrd.github.io/utils/output/combined_source.md
+ local -n files_ref=final_files
+ which file
/usr/bin/file
+ for file in "${files_ref[@]}"
+ set -x
+ local file_type
+ local file_description
++ file -b ./html/404.html
+ file_description='HTML document text, Unicode text, UTF-8 text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, Unicode text, UTF-8 text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, Unicode text, UTF-8 text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, Unicode text, UTF-8 text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, Unicode text, UTF-8 text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/404.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/codeium_stats.html
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/codeium_stats.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/custom-head.html
+ file_description='ASCII text'
+ case "$file_description" in
+ local file_suffix=html
+ case "$file_suffix" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: ASCII text Converts to: html'
genmd DEBUG2(20): File description: ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/custom-head.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/disclaimer.html
+ file_description='ASCII text'
+ case "$file_description" in
+ local file_suffix=html
+ case "$file_suffix" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: ASCII text Converts to: html'
genmd DEBUG2(20): File description: ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/disclaimer.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/footer.html
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/footer.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/getintouch.html
+ file_description='Unicode text, UTF-8 text'
+ case "$file_description" in
+ local file_suffix=html
+ case "$file_suffix" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: Unicode text, UTF-8 text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: Unicode text, UTF-8 text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: Unicode text, UTF-8 text Converts to: html'
genmd DEBUG2(20): File description: Unicode text, UTF-8 text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/getintouch.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/head.html
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/head.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/header.html
+ file_description='ASCII text'
+ case "$file_description" in
+ local file_suffix=html
+ case "$file_suffix" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: ASCII text Converts to: html'
genmd DEBUG2(20): File description: ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/header.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/join_us.html
+ file_description='ASCII text'
+ case "$file_description" in
+ local file_suffix=html
+ case "$file_suffix" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: ASCII text Converts to: html'
genmd DEBUG2(20): File description: ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/join_us.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/navigation.html
+ file_description='ASCII text, with very long lines (486)'
+ case "$file_description" in
+ local file_suffix=html
+ case "$file_suffix" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: ASCII text, with very long lines (486) Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: ASCII text, with very long lines (486) Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: ASCII text, with very long lines (486) Converts to: html'
genmd DEBUG2(20): File description: ASCII text, with very long lines (486) Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/navigation.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/projects/TokenSecure.html
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/projects/TokenSecure.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/projects/TorchDevice.html
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/projects/TorchDevice.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/projects/oobabooga-macOS.html
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/projects/oobabooga-macOS.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/projects/text-generation-webui-macos.html
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/projects/text-generation-webui-macos.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/projects/venvutil.html
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/projects/venvutil.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/projects_list.html
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/projects_list.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/rss_feed_sub.html
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/rss_feed_sub.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/social-item.html
+ file_description='exported SGML document text, ASCII text'
+ case "$file_description" in
+ local file_suffix=html
+ case "$file_suffix" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: exported SGML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: exported SGML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: exported SGML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: exported SGML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/social-item.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/social.html
+ file_description='ASCII text'
+ case "$file_description" in
+ local file_suffix=html
+ case "$file_suffix" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: ASCII text Converts to: html'
genmd DEBUG2(20): File description: ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/social.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/svg_symbol.html
+ file_description='ASCII text'
+ case "$file_description" in
+ local file_suffix=html
+ case "$file_suffix" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: ASCII text Converts to: html'
genmd DEBUG2(20): File description: ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/svg_symbol.html
+ local file_type
+ local file_description
++ file -b ./html/_includes/wand_accred.html
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_includes/wand_accred.html
+ local file_type
+ local file_description
++ file -b ./html/_layouts/blog.html
+ file_description='ASCII text'
+ case "$file_description" in
+ local file_suffix=html
+ case "$file_suffix" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: ASCII text Converts to: html'
genmd DEBUG2(20): File description: ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_layouts/blog.html
+ local file_type
+ local file_description
++ file -b ./html/_layouts/home.html
+ file_description='HTML document text, Unicode text, UTF-8 text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, Unicode text, UTF-8 text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, Unicode text, UTF-8 text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, Unicode text, UTF-8 text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, Unicode text, UTF-8 text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_layouts/home.html
+ local file_type
+ local file_description
++ file -b ./html/_layouts/page.html
+ file_description='ASCII text'
+ case "$file_description" in
+ local file_suffix=html
+ case "$file_suffix" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: ASCII text Converts to: html'
genmd DEBUG2(20): File description: ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_layouts/page.html
+ local file_type
+ local file_description
++ file -b ./html/_layouts/post.html
+ file_description='Unicode text, UTF-8 text'
+ case "$file_description" in
+ local file_suffix=html
+ case "$file_suffix" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: Unicode text, UTF-8 text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: Unicode text, UTF-8 text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: Unicode text, UTF-8 text Converts to: html'
genmd DEBUG2(20): File description: Unicode text, UTF-8 text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_layouts/post.html
+ local file_type
+ local file_description
++ file -b ./html/_layouts/project.html
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/_layouts/project.html
+ local file_type
+ local file_description
++ file -b ./html/about.md
+ file_description='Unicode text, UTF-8 text, with very long lines (538)'
+ case "$file_description" in
+ local file_suffix=md
+ case "$file_suffix" in
+ file_type=markdown
+ [[ markdown = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: Unicode text, UTF-8 text, with very long lines (538) Converts to: markdown'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: Unicode text, UTF-8 text, with very long lines (538) Converts to: markdown'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: Unicode text, UTF-8 text, with very long lines (538) Converts to: markdown'
genmd DEBUG2(20): File description: Unicode text, UTF-8 text, with very long lines (538) Converts to: markdown
+ set +x
genmd INFO(20): Generating markdown for: ./html/about.md
+ local file_type
+ local file_description
++ file -b ./html/blog.md
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/blog.md
+ local file_type
+ local file_description
++ file -b ./html/collaborate.md
+ file_description='Unicode text, UTF-8 text'
+ case "$file_description" in
+ local file_suffix=md
+ case "$file_suffix" in
+ file_type=markdown
+ [[ markdown = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: Unicode text, UTF-8 text Converts to: markdown'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: Unicode text, UTF-8 text Converts to: markdown'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: Unicode text, UTF-8 text Converts to: markdown'
genmd DEBUG2(20): File description: Unicode text, UTF-8 text Converts to: markdown
+ set +x
genmd INFO(20): Generating markdown for: ./html/collaborate.md
+ local file_type
+ local file_description
++ file -b ./html/collaborate/community.md
+ file_description='Unicode text, UTF-8 text'
+ case "$file_description" in
+ local file_suffix=md
+ case "$file_suffix" in
+ file_type=markdown
+ [[ markdown = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: Unicode text, UTF-8 text Converts to: markdown'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: Unicode text, UTF-8 text Converts to: markdown'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: Unicode text, UTF-8 text Converts to: markdown'
genmd DEBUG2(20): File description: Unicode text, UTF-8 text Converts to: markdown
+ set +x
genmd INFO(20): Generating markdown for: ./html/collaborate/community.md
+ local file_type
+ local file_description
++ file -b ./html/collaborate/professional.md
+ file_description='ASCII text'
+ case "$file_description" in
+ local file_suffix=md
+ case "$file_suffix" in
+ file_type=markdown
+ [[ markdown = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: ASCII text Converts to: markdown'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: ASCII text Converts to: markdown'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: ASCII text Converts to: markdown'
genmd DEBUG2(20): File description: ASCII text Converts to: markdown
+ set +x
genmd INFO(20): Generating markdown for: ./html/collaborate/professional.md
+ local file_type
+ local file_description
++ file -b ./html/contact.md
+ file_description='ASCII text'
+ case "$file_description" in
+ local file_suffix=md
+ case "$file_suffix" in
+ file_type=markdown
+ [[ markdown = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: ASCII text Converts to: markdown'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: ASCII text Converts to: markdown'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: ASCII text Converts to: markdown'
genmd DEBUG2(20): File description: ASCII text Converts to: markdown
+ set +x
genmd INFO(20): Generating markdown for: ./html/contact.md
+ local file_type
+ local file_description
++ file -b ./html/faq.md
+ file_description='Unicode text, UTF-8 text'
+ case "$file_description" in
+ local file_suffix=md
+ case "$file_suffix" in
+ file_type=markdown
+ [[ markdown = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: Unicode text, UTF-8 text Converts to: markdown'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: Unicode text, UTF-8 text Converts to: markdown'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: Unicode text, UTF-8 text Converts to: markdown'
genmd DEBUG2(20): File description: Unicode text, UTF-8 text Converts to: markdown
+ set +x
genmd INFO(20): Generating markdown for: ./html/faq.md
+ local file_type
+ local file_description
++ file -b ./html/index.md
+ file_description='Unicode text, UTF-8 text, with very long lines (362)'
+ case "$file_description" in
+ local file_suffix=md
+ case "$file_suffix" in
+ file_type=markdown
+ [[ markdown = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: Unicode text, UTF-8 text, with very long lines (362) Converts to: markdown'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: Unicode text, UTF-8 text, with very long lines (362) Converts to: markdown'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: Unicode text, UTF-8 text, with very long lines (362) Converts to: markdown'
genmd DEBUG2(20): File description: Unicode text, UTF-8 text, with very long lines (362) Converts to: markdown
+ set +x
genmd INFO(20): Generating markdown for: ./html/index.md
+ local file_type
+ local file_description
++ file -b ./html/projects.md
+ file_description='ASCII text, with very long lines (389)'
+ case "$file_description" in
+ local file_suffix=md
+ case "$file_suffix" in
+ file_type=markdown
+ [[ markdown = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: ASCII text, with very long lines (389) Converts to: markdown'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: ASCII text, with very long lines (389) Converts to: markdown'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: ASCII text, with very long lines (389) Converts to: markdown'
genmd DEBUG2(20): File description: ASCII text, with very long lines (389) Converts to: markdown
+ set +x
genmd INFO(20): Generating markdown for: ./html/projects.md
+ local file_type
+ local file_description
++ file -b ./html/projects/TokenSecure.md
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/projects/TokenSecure.md
+ local file_type
+ local file_description
++ file -b ./html/projects/TokenSecure/TokenSecure-project-blog-entry.md
+ file_description='ASCII text'
+ case "$file_description" in
+ local file_suffix=md
+ case "$file_suffix" in
+ file_type=markdown
+ [[ markdown = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: ASCII text Converts to: markdown'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: ASCII text Converts to: markdown'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: ASCII text Converts to: markdown'
genmd DEBUG2(20): File description: ASCII text Converts to: markdown
+ set +x
genmd INFO(20): Generating markdown for: ./html/projects/TokenSecure/TokenSecure-project-blog-entry.md
+ local file_type
+ local file_description
++ file -b ./html/projects/TorchDevice.md
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/projects/TorchDevice.md
+ local file_type
+ local file_description
++ file -b ./html/projects/TorchDevice/TorchDevice-project-blog-entry.md
+ file_description='ASCII text'
+ case "$file_description" in
+ local file_suffix=md
+ case "$file_suffix" in
+ file_type=markdown
+ [[ markdown = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: ASCII text Converts to: markdown'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: ASCII text Converts to: markdown'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: ASCII text Converts to: markdown'
genmd DEBUG2(20): File description: ASCII text Converts to: markdown
+ set +x
genmd INFO(20): Generating markdown for: ./html/projects/TorchDevice/TorchDevice-project-blog-entry.md
+ local file_type
+ local file_description
++ file -b ./html/projects/oobabooga-macOS.md
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/projects/oobabooga-macOS.md
+ local file_type
+ local file_description
++ file -b ./html/projects/oobabooga-macOS/oobabooga-macOS-project-blog-entry.md
+ file_description='ASCII text'
+ case "$file_description" in
+ local file_suffix=md
+ case "$file_suffix" in
+ file_type=markdown
+ [[ markdown = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: ASCII text Converts to: markdown'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: ASCII text Converts to: markdown'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: ASCII text Converts to: markdown'
genmd DEBUG2(20): File description: ASCII text Converts to: markdown
+ set +x
genmd INFO(20): Generating markdown for: ./html/projects/oobabooga-macOS/oobabooga-macOS-project-blog-entry.md
+ local file_type
+ local file_description
++ file -b ./html/projects/text-generation-webui-macos.md
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/projects/text-generation-webui-macos.md
+ local file_type
+ local file_description
++ file -b ./html/projects/text-generation-webui-macos/text-generation-webui-macos-project-blog-entry.md
+ file_description='ASCII text'
+ case "$file_description" in
+ local file_suffix=md
+ case "$file_suffix" in
+ file_type=markdown
+ [[ markdown = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: ASCII text Converts to: markdown'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: ASCII text Converts to: markdown'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: ASCII text Converts to: markdown'
genmd DEBUG2(20): File description: ASCII text Converts to: markdown
+ set +x
genmd INFO(20): Generating markdown for: ./html/projects/text-generation-webui-macos/text-generation-webui-macos-project-blog-entry.md
+ local file_type
+ local file_description
++ file -b ./html/projects/venvutil.md
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/projects/venvutil.md
+ local file_type
+ local file_description
++ file -b ./html/projects/venvutil/venvutil-project-blog-entry.md
+ file_description='ASCII text'
+ case "$file_description" in
+ local file_suffix=md
+ case "$file_suffix" in
+ file_type=markdown
+ [[ markdown = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: ASCII text Converts to: markdown'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: ASCII text Converts to: markdown'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: ASCII text Converts to: markdown'
genmd DEBUG2(20): File description: ASCII text Converts to: markdown
+ set +x
genmd INFO(20): Generating markdown for: ./html/projects/venvutil/venvutil-project-blog-entry.md
+ local file_type
+ local file_description
++ file -b ./html/resources.md
+ file_description='Unicode text, UTF-8 text'
+ case "$file_description" in
+ local file_suffix=md
+ case "$file_suffix" in
+ file_type=markdown
+ [[ markdown = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: Unicode text, UTF-8 text Converts to: markdown'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: Unicode text, UTF-8 text Converts to: markdown'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: Unicode text, UTF-8 text Converts to: markdown'
genmd DEBUG2(20): File description: Unicode text, UTF-8 text Converts to: markdown
+ set +x
genmd INFO(20): Generating markdown for: ./html/resources.md
+ local file_type
+ local file_description
++ file -b ./html/resources/emergency-resources.md
+ file_description='HTML document text, ASCII text'
+ case "$file_description" in
+ file_type=html
+ [[ html = \u\n\k\n\o\w\n ]]
+ log_message DEBUG2 'File description: HTML document text, ASCII text Converts to: html'
+ local message_level=DEBUG2
+ shift
+ local 'message_out=File description: HTML document text, ASCII text Converts to: html'
+ [[ -z _ ]]
+ '[' 20 -le 27 ']'
+ echo 'genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html'
genmd DEBUG2(20): File description: HTML document text, ASCII text Converts to: html
+ set +x
genmd INFO(20): Generating markdown for: ./html/resources/emergency-resources.md
/Users/unixwzrd/bin/genmd: line 1153: ccompress_output: command not found
