name: Site Health Check

on:
  workflow_dispatch:  # Allow manual triggering
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - 'README.md'
  workflow_run:
    workflows: ["Deploy Jekyll site to Pages"]
    types:
      - completed

jobs:
  health-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        echo "Verifying pyyaml installation..."
        python -c "import yaml; print('PyYAML version:', yaml.__version__)" || pip install pyyaml
        pip list | grep -i yaml

    - name: Create log directories
      run: |
        mkdir -p utils/log
        mkdir -p utils/etc

    - name: Run site health check
      id: health-check
      run: |
        echo "üè• Running site health check..."
        python utils/bin/site_reliability_monitor.py --mode health
        if [ $? -eq 0 ]; then
          echo "result=success" >> $GITHUB_OUTPUT
          echo "‚úÖ Site health check passed"
        else
          echo "result=failure" >> $GITHUB_OUTPUT
          echo "‚ùå Site health check failed"
        fi

    - name: Upload health check logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: health-check-logs
        path: utils/log/
        retention-days: 7

    - name: Create issue on failure
      if: steps.health-check.outputs.result == 'failure'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: issues } = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: ['site-health']
          });

          // Check if there's already an open issue about site health
          const existingIssue = issues.find(issue =>
            issue.title.includes('Site Health Check Failed') &&
            issue.created_at > new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString() // Last 24 hours
          );

          if (!existingIssue) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üö® Site Health Check Failed - unixwzrd.ai',
              body: `## Site Health Check Failed

              **Repository:** ${context.repo.owner}/${context.repo.repo}
              **Workflow:** ${context.workflow}
              **Run ID:** ${context.runId}
              **Commit:** ${context.sha}
              **Time:** ${new Date().toISOString()}

              ### What to do:
              1. Check the [workflow logs](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details
              2. Run a manual health check: \`python utils/bin/site_reliability_monitor.py --mode health\`
              3. Fix any issues found
              4. Close this issue when resolved

              ### Common issues:
              - Broken links or images
              - Missing pages (404 errors)
              - Slow response times
              - Site accessibility problems

              ---
              *This issue was automatically created by the Site Health Check workflow.*`,
              labels: ['site-health', 'automated', 'bug']
            });
          }

  post-commit-verification:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for commit info

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        echo "Verifying pyyaml installation..."
        python -c "import yaml; print('PyYAML version:', yaml.__version__)" || pip install pyyaml
        pip list | grep -i yaml

    - name: Create log directories
      run: |
        mkdir -p utils/log
        mkdir -p utils/etc

    - name: Run post-commit verification
      id: post-commit
      run: |
        echo "üöÄ Running post-commit verification..."
        python utils/bin/site_reliability_monitor.py --mode post-commit --commit-hash ${{ github.sha }}
        if [ $? -eq 0 ]; then
          echo "result=success" >> $GITHUB_OUTPUT
          echo "‚úÖ Post-commit verification passed"
        else
          echo "result=failure" >> $GITHUB_OUTPUT
          echo "‚ùå Post-commit verification failed"
        fi

    - name: Upload verification logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: post-commit-logs
        path: utils/log/
        retention-days: 7

    - name: Create issue on post-commit failure
      if: steps.post-commit.outputs.result == 'failure'
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'üö® Post-Commit Verification Failed - unixwzrd.ai',
            body: `## Post-Commit Verification Failed

              **Repository:** ${context.repo.owner}/${context.repo.repo}
              **Commit:** ${context.sha}
              **Commit Message:** ${context.payload.head_commit?.message || 'Unknown'}
              **Author:** ${context.payload.head_commit?.author?.name || 'Unknown'}
              **Time:** ${new Date().toISOString()}

              ### What to do:
              1. Check the [workflow logs](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details
              2. Verify the deployment completed successfully
              3. Check if the site is accessible
              4. Look for broken links or images
              5. Review the commit changes
              6. Close this issue when resolved

              ### Possible causes:
              - Deployment didn't complete within 15 minutes
              - Site is down or inaccessible
              - Broken links or images introduced by the commit
              - Configuration issues

              ---
              *This issue was automatically created by the Post-Commit Verification workflow.*`,
            labels: ['deployment', 'automated', 'bug']
          });

  post-deployment-health-check:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push'
    concurrency:
      group: "post-deployment-health-check"
      cancel-in-progress: true

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        echo "Verifying pyyaml installation..."
        python -c "import yaml; print('PyYAML version:', yaml.__version__)" || pip install pyyaml
        pip list | grep -i yaml

    - name: Create log directories
      run: |
        mkdir -p utils/log
        mkdir -p utils/etc

    - name: Wait for deployment propagation
      run: |
        echo "‚è≥ Waiting 30 seconds for deployment to propagate..."
        sleep 30

    - name: Run post-deployment health check
      id: post-deployment
      run: |
        echo "üè• Running post-deployment health check..."
        python utils/bin/site_reliability_monitor.py --mode health
        if [ $? -eq 0 ]; then
          echo "result=success" >> $GITHUB_OUTPUT
          echo "‚úÖ Post-deployment health check passed"
        else
          echo "result=failure" >> $GITHUB_OUTPUT
          echo "‚ùå Post-deployment health check failed"
        fi

    - name: Upload post-deployment logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: post-deployment-logs
        path: utils/log/
        retention-days: 7

    - name: Create issue on post-deployment failure
      if: steps.post-deployment.outputs.result == 'failure'
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'üö® Post-Deployment Health Check Failed - unixwzrd.ai',
            body: `## Post-Deployment Health Check Failed

              **Repository:** ${context.repo.owner}/${context.repo.repo}
              **Triggering Workflow:** ${context.payload.workflow_run?.name || 'Unknown'}
              **Triggering Commit:** ${context.payload.workflow_run?.head_sha || 'Unknown'}
              **Time:** ${new Date().toISOString()}

              ### What to do:
              1. Check the [workflow logs](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details
              2. Verify the site is accessible at https://unixwzrd.ai
              3. Check for broken links or images
              4. Verify redirects are working
              5. Close this issue when resolved

              ### Possible causes:
              - Deployment completed but site has issues
              - Broken links or images
              - Redirects not working
              - Site accessibility problems

              ---
              *This issue was automatically created by the Post-Deployment Health Check workflow.*`,
            labels: ['deployment', 'site-health', 'automated', 'bug']
          });